{
    "version": "https://jsonfeed.org/version/1",
    "title": "DzcGood • All posts by \"mysql\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/11/06/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89/",
            "url": "http://example.com/2021/11/06/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E6%9C%AA%E5%AE%8C%EF%BC%89/",
            "title": "MySQL",
            "date_published": "2021-11-05T16:09:32.000Z",
            "content_html": "<h1 id=\"mysql学习记录\"><a class=\"markdownIt-Anchor\" href=\"#mysql学习记录\">#</a> MySQL 学习记录</h1>\n<h2 id=\"服务的启动与关闭\"><a class=\"markdownIt-Anchor\" href=\"#服务的启动与关闭\">#</a> 服务的启动与关闭</h2>\n<ul>\n<li>\n<p>启动：net start 服务名</p>\n</li>\n<li>\n<p>关闭：net stop 服务名</p>\n</li>\n</ul>\n<h2 id=\"服务端的登录和退出\"><a class=\"markdownIt-Anchor\" href=\"#服务端的登录和退出\">#</a> 服务端的登录和退出</h2>\n<ul>\n<li>\n<p>方法一：</p>\n<p><strong>登录</strong>：打开 MySQL 8.0 Command Line Client，输入密码即可。这种方式只能是 root 用户使用，不推荐</p>\n<p><strong>退出</strong>：exit</p>\n</li>\n<li>\n<p>方法二：</p>\n<p><strong>登录</strong>：通过 windows cmd 输入指令 mysql -h 服务器 ip -P 端口号 -u 用户 -p 密码</p>\n<p><strong>例如</strong>： mysql -h localhost -P 3306 -u root -p 123456</p>\n<p><strong>注意</strong>：-p 和空格之间<strong>不能有空格</strong> 如果是本机登录，则 - h，-P 可以省略</p>\n<p><strong>退出</strong>：exit</p>\n</li>\n</ul>\n<h2 id=\"常见命令\"><a class=\"markdownIt-Anchor\" href=\"#常见命令\">#</a> 常见命令</h2>\n<ul>\n<li>\n<p>查看当前所有数据库：<em>show databases;</em></p>\n</li>\n<li>\n<p>打开指定的库：<em>use 库名；</em></p>\n</li>\n<li>\n<p>查看当前库所有表：<em>show tables;</em></p>\n</li>\n<li>\n<p>查看其他库所有表：<em>show tables from 库名；</em></p>\n</li>\n<li>\n<p>创建表：<em>create table 表名 (</em></p>\n<p>​\t\t\t\t<em>列名 列类型，</em></p>\n<p>​\t\t\t\t<em>列名 列类型，</em></p>\n<p>​\t\t\t\t<em>…</em></p>\n<p>​\t\t\t<em>);</em></p>\n</li>\n<li>\n<p>查看表结构：<em>desc 表名；</em></p>\n</li>\n<li>\n<p>查看服务器版本</p>\n<ul>\n<li>\n<p>方式一：</p>\n<p>登录到 mysql 服务端后，select version ();</p>\n</li>\n<li>\n<p>方式二：</p>\n<p>windows cmd 出入<em> mysql --version</em> 或<em> mysql -V</em></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mysql的语法规范\"><a class=\"markdownIt-Anchor\" href=\"#mysql的语法规范\">#</a> MySQL 的语法规范</h2>\n<ul>\n<li>\n<p><em><strong>不区分</strong></em>大小写，但建议关键字大写，表名和列名小写</p>\n</li>\n<li>\n<p>每条命令最好用分号结尾</p>\n</li>\n<li>\n<p>每条命令根据需要，可以进行<em><strong>缩进或换行</strong></em></p>\n</li>\n<li>\n<p>注释</p>\n<p>单行注释：# 注释文字</p>\n<p>单行注释：-- 注释文字（注意‘–’后必须有空格）</p>\n<p>多行注释：/* 注释文字 */</p>\n</li>\n</ul>\n<h2 id=\"dql语言\"><a class=\"markdownIt-Anchor\" href=\"#dql语言\">#</a> DQL 语言</h2>\n<h3 id=\"基础查询\"><a class=\"markdownIt-Anchor\" href=\"#基础查询\">#</a> 基础查询</h3>\n<ul>\n<li>语法：SELECT 查询列表 FROM 表名；</li>\n<li>查询列表可以是：表中的字段</li>\n<li>查询的结果是一个虚拟的表格</li>\n<li><strong>字符型</strong>和<strong>日期型</strong>的常量值必须用<strong>引号</strong>引起来</li>\n</ul>\n<h4 id=\"举例\"><a class=\"markdownIt-Anchor\" href=\"#举例\">#</a> 举例</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 查询单个字段<br><span class=\"hljs-keyword\">SELECT</span> last_name <br><span class=\"hljs-keyword\">FROM</span> employees;<br># 查询多个字段<br><span class=\"hljs-keyword\">SELECT</span> last_name, salary, email <br><span class=\"hljs-keyword\">FROM</span> employees;<br># 查询所有字段<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees;<br># 查询常量<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-number\">100</span>;<br># 查询表达式<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-number\">100</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-number\">98</span>;<br># 查询函数<br><span class=\"hljs-keyword\">SELECT</span> VERSION();<br># 为字段起别名<br><span class=\"hljs-keyword\">SELECT</span> last_name <span class=\"hljs-keyword\">AS</span> 姓, first_name <span class=\"hljs-keyword\">AS</span> 名 <br><span class=\"hljs-keyword\">FROM</span> employees; # 方式一<br><span class=\"hljs-keyword\">SELECT</span> last_name 姓, first_name 名 <br><span class=\"hljs-keyword\">FROM</span> employees; # 方式二<br># 特殊情况：查询salary，显示结果为<span class=\"hljs-keyword\">out</span> put<br># 有特殊符号的，建议加上双引号<br><span class=\"hljs-keyword\">SELECT</span> salary <span class=\"hljs-keyword\">AS</span> &quot;out put&quot; <br><span class=\"hljs-keyword\">FROM</span> employees;<br># 去重<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">DISTINCT</span> department_id <br><span class=\"hljs-keyword\">FROM</span> employees;<br><span class=\"hljs-comment\">/* </span><br><span class=\"hljs-comment\">\t&#x27;+&#x27;号的作用，在MySQL中，&#x27;+&#x27;只有加法运算的作用</span><br><span class=\"hljs-comment\">\tSELECT &#x27;123&#x27; + 90:如果出现字符型，试图转换成数值型，转换成功则继续做加法；转换失败，就会把字符型看成0</span><br><span class=\"hljs-comment\">\tSELECT &#x27;John&#x27; + 90 结果是90</span><br><span class=\"hljs-comment\">\tSELECT NULL + 90 只要出现NULL，结果一定是NULL</span><br><span class=\"hljs-comment\">*/</span><br># CONCAT()函数<br># 案例：查询员工姓名连接成一个字段，并显示为&quot;姓名&quot;<br><span class=\"hljs-keyword\">SELECT</span> CONCAT(last_name, first_name) <span class=\"hljs-keyword\">AS</span> 姓名 <br><span class=\"hljs-keyword\">FROM</span> employees;<br># IFNULL函数<br><span class=\"hljs-keyword\">SELECT</span> IFNULL(exp1, exp2) # 如果exp1为空，就返回exp2；否则返回exp1<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"条件查询\"><a class=\"markdownIt-Anchor\" href=\"#条件查询\">#</a> 条件查询</h3>\n<ul>\n<li>\n<p>语法：SELECT 查询列表 FROM 表名 WHERE 筛选条件；</p>\n</li>\n<li>\n<p>筛选条件包括：</p>\n<ul>\n<li>条件表达式： &gt;  &lt;=  !=  &lt;&gt;  &gt;=  &lt;=</li>\n<li>逻辑表达式：&amp;&amp;，||，!，and，or，not</li>\n<li>模糊查询：like，between and，not between and，in，is null,，is not null</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"举例-2\"><a class=\"markdownIt-Anchor\" href=\"#举例-2\">#</a> 举例</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">********************************************</span><br><span class=\"hljs-comment\">\t\t\t\t条件表达式</span><br><span class=\"hljs-comment\">********************************************\t\t\t</span><br><span class=\"hljs-comment\">*/</span><br># 查询员工工资大于<span class=\"hljs-number\">10000</span>的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">10000</span>;<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">********************************************</span><br><span class=\"hljs-comment\">\t\t\t\t逻辑表达式</span><br><span class=\"hljs-comment\">********************************************\t\t\t</span><br><span class=\"hljs-comment\">*/</span><br># 查询工资在<span class=\"hljs-number\">10000</span>到<span class=\"hljs-number\">20000</span>之间的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-operator\">&gt;=</span> <span class=\"hljs-number\">10000</span> <br><span class=\"hljs-keyword\">AND</span> salary <span class=\"hljs-operator\">&lt;=</span> <span class=\"hljs-number\">20000</span>;<br><br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">********************************************</span><br><span class=\"hljs-comment\">\t\t\t\t模糊查询</span><br><span class=\"hljs-comment\">********************************************\t\t\t</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\t模糊查询：LIKE，一般和通配符配合使用。不但可以查字符型，也可以查数值型</span><br><span class=\"hljs-comment\">\t&#x27;%&#x27;代表0或n个字符</span><br><span class=\"hljs-comment\">\t&#x27;_&#x27;代表一个字符</span><br><span class=\"hljs-comment\">\t\\_代表转义字符&#x27;_&#x27;</span><br><span class=\"hljs-comment\">*/</span><br># 查询员工名中包含<span class=\"hljs-string\">&#x27;a&#x27;</span>的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> first_name <span class=\"hljs-keyword\">LIKE</span> <span class=\"hljs-string\">&#x27;%a%&#x27;</span>;<br># 查询员工名第三个字符为<span class=\"hljs-string\">&#x27;a&#x27;</span>，第五个字符为<span class=\"hljs-string\">&#x27;e&#x27;</span>的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> first_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;__a_e%&#x27;</span><br># 查询员工名第三个字符为<span class=\"hljs-string\">&#x27;_&#x27;</span>的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> first_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;_\\_%&#x27;</span>;<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> first_name <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;_$_%&#x27;</span> <span class=\"hljs-keyword\">ESCAPE</span> <span class=\"hljs-string\">&#x27;$&#x27;</span>; # 这里表示<span class=\"hljs-string\">&#x27;$&#x27;</span>是转义字符，推荐使用这种<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\tBETWEEN a AND b 的区间是闭区间[a,b]</span><br><span class=\"hljs-comment\">\tb必须&gt;=a，否则筛选出来的结果是0条</span><br><span class=\"hljs-comment\">*/</span><br># 查询工资在<span class=\"hljs-number\">10000</span>到<span class=\"hljs-number\">20000</span>之间的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-keyword\">BETWEEN</span> <span class=\"hljs-number\">10000</span> <span class=\"hljs-keyword\">AND</span> <span class=\"hljs-number\">20000</span>;<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\tIN列表的值类型必须一致或兼容</span><br><span class=\"hljs-comment\">\t不支持通配符</span><br><span class=\"hljs-comment\">*/</span><br># 查询员工的工种编号是IT_PROG, AD_VP, AD_PRES中的一个的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> job_id <span class=\"hljs-keyword\">IN</span> (<span class=\"hljs-string\">&#x27;IT_PROG&#x27;</span>, <span class=\"hljs-string\">&#x27;AD_VP&#x27;</span>, <span class=\"hljs-string\">&#x27;AD_PRES&#x27;</span>);<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\t&#x27;=&#x27;不能用于判断NULL值，要使用IS NULL或IS NOT NULL</span><br><span class=\"hljs-comment\">*/</span><br># 查询没有奖金的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> commission_pac <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span>;# 必须写成<span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">null</span>，不能写成 <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">null</span><br># 查询有奖金的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> commission_pac <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>;# 必须写成<span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>，不能写成 <span class=\"hljs-operator\">!=</span> <span class=\"hljs-keyword\">null</span><br># 安全等于<span class=\"hljs-string\">&#x27;&lt;=&gt;&#x27;</span><br># <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span> 可以写成<span class=\"hljs-operator\">&lt;=&gt;</span> <span class=\"hljs-keyword\">NULL</span><br># 查询工资为<span class=\"hljs-number\">12000</span>的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-operator\">&lt;=&gt;</span> <span class=\"hljs-number\">12000</span>;<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\tIS NULL只能判断NULL值</span><br><span class=\"hljs-comment\">\t&lt;=&gt; 既可以判断NULL值，也可以判断普通的数值，但可读性较低</span><br><span class=\"hljs-comment\">*/</span><br># ISNULL(expr)如果expr是<span class=\"hljs-keyword\">NULL</span>，就返回<span class=\"hljs-number\">1</span>，否则返回<span class=\"hljs-number\">0</span><br><span class=\"hljs-keyword\">SELECT</span> ISNULL(commission_pac) <br><span class=\"hljs-keyword\">FROM</span> employees;<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"一个坑\"><a class=\"markdownIt-Anchor\" href=\"#一个坑\">#</a> 一个坑</h4>\n<blockquote>\n<p><strong>问</strong>：SELECT * FROM employees 和 SELECT * FROM employees WHERE first_name LIKE ‘%%’ AND last_name LIKE '%%' 效果一样吗？</p>\n<p><strong>答</strong>：不一样，如果 first_name 或 last_name 中包含 NULL 值，则不一样。因为 NULL LIKE ’%%‘是错的。</p>\n</blockquote>\n<h3 id=\"排序查询\"><a class=\"markdownIt-Anchor\" href=\"#排序查询\">#</a> 排序查询</h3>\n<ul>\n<li>语法：SELECT 查询列表 FROM 表名 [WHERE 子句] ORDER BY 排序列表 [asc | desc]；</li>\n<li>默认是从小到大排序</li>\n<li>如果排序列表有多个，则优先按写在前面的排序列表排序。对每个排序列表，可以分别指定是升序或者降序</li>\n</ul>\n<h4 id=\"举例-3\"><a class=\"markdownIt-Anchor\" href=\"#举例-3\">#</a> 举例</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 查询员工信息，要求工资从高到低排序<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> salary <span class=\"hljs-keyword\">ASC</span>;<br># 查询员工信息，要求工资从低到高排序<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> salary <span class=\"hljs-keyword\">DESC</span>;<br># 查询部门编号大于等于<span class=\"hljs-number\">90</span>的员工信息，要求按入职时间从小到大排序<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> department_id <span class=\"hljs-operator\">&gt;=</span> <span class=\"hljs-number\">90</span> <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> hire_date <span class=\"hljs-keyword\">ASC</span>;<br># 按年薪的高低显示员工信息（按表达式排序）<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> salary <span class=\"hljs-operator\">*</span> <span class=\"hljs-number\">12</span> <span class=\"hljs-operator\">*</span> (<span class=\"hljs-number\">1</span> <span class=\"hljs-operator\">+</span> IFNULL(commision_pac, <span class=\"hljs-number\">0</span>)) <span class=\"hljs-keyword\">ASC</span>;<br># 按姓的长度显示员工信息（按函数排序）<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> LENGTH(last_name) <span class=\"hljs-keyword\">ASC</span>;<br># 查询员工信息，按照工资排序，若工资相同，则按员工编号排序（多个字段排序）<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> salary <span class=\"hljs-keyword\">ASC</span>, employee_id <span class=\"hljs-keyword\">DESC</span>;<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"常见函数\"><a class=\"markdownIt-Anchor\" href=\"#常见函数\">#</a> 常见函数</h3>\n<p>语法：SELECT 函数名 () [FROM 表]；</p>\n<p>分类：</p>\n<ul>\n<li>单行函数</li>\n<li>分组函数：用作统计用，输入多个数据，输出一个数据</li>\n</ul>\n<h4 id=\"字符函数\"><a class=\"markdownIt-Anchor\" href=\"#字符函数\">#</a> 字符函数</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\">#<span class=\"hljs-number\">1</span>、LENGTH()：用于获取参数值的字节个数<br><span class=\"hljs-keyword\">SELECT</span> LENGTH(<span class=\"hljs-string\">&#x27;john&#x27;</span>);<br><span class=\"hljs-keyword\">SELECT</span> LENGTH(<span class=\"hljs-string\">&#x27;张三丰hahaha&#x27;</span>); # utf<span class=\"hljs-number\">-8</span>中一个汉字占<span class=\"hljs-number\">3</span>个字节<br># <span class=\"hljs-number\">2</span>、CONCAT（）：拼接字符串<br><span class=\"hljs-keyword\">SELECT</span> CONCAT(first_name, <span class=\"hljs-string\">&#x27;_&#x27;</span>, last_name) <span class=\"hljs-keyword\">AS</span> 姓名 <span class=\"hljs-keyword\">FROM</span> employees;<br>#<span class=\"hljs-number\">3</span>、<span class=\"hljs-built_in\">UPPER</span>(),<span class=\"hljs-built_in\">LOWER</span>():将字符转成大写、小写<br><span class=\"hljs-keyword\">SELECT</span> CONCAT(<span class=\"hljs-built_in\">UPPER</span>(first_name), <span class=\"hljs-built_in\">LOWER</span>(last_name)) <span class=\"hljs-keyword\">AS</span> 姓名 <span class=\"hljs-keyword\">FROM</span> employees;<br># <span class=\"hljs-number\">4</span>、SUBSTR,SUBSTRING<br># 注意：<span class=\"hljs-keyword\">SQL</span>语言中，索引从<span class=\"hljs-number\">1</span>开始！！！！！！<br><span class=\"hljs-keyword\">SELECT</span> SUBSTR(<span class=\"hljs-string\">&#x27;12345678&#x27;</span>, <span class=\"hljs-number\">6</span>) # 截取从索引位置为<span class=\"hljs-number\">6</span>开始的字串<br><span class=\"hljs-keyword\">SELECT</span> SUBSTR(<span class=\"hljs-string\">&#x27;12345678&#x27;</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>) # 截取从索引位置为<span class=\"hljs-number\">1</span>，字符长度为<span class=\"hljs-number\">3</span>的字串<br># <span class=\"hljs-number\">5</span>、INSTR(expr1, expr2)：判断expr2在expr1首次出现的起始索引位置，若不存在，则返回<span class=\"hljs-number\">0</span><br><span class=\"hljs-keyword\">SELECT</span> INSTR(<span class=\"hljs-string\">&#x27;12341234&#x27;</span>,<span class=\"hljs-string\">&#x27;123&#x27;</span>); # 输出是<span class=\"hljs-number\">1</span><br># <span class=\"hljs-number\">6</span>、<span class=\"hljs-built_in\">TRIM</span>()<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">TRIM</span>(<span class=\"hljs-string\">&#x27;   1234   &#x27;</span>); # 去除字符前后的空格<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">TRIM</span>(<span class=\"hljs-string\">&#x27;a&#x27;</span> <span class=\"hljs-keyword\">FROM</span> <span class=\"hljs-string\">&#x27;aaaa1234aaaaaaa&#x27;</span>); # 去除字符前后的<span class=\"hljs-string\">&#x27;a&#x27;</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">TRIM</span>(<span class=\"hljs-string\">&#x27;aa&#x27;</span> <span class=\"hljs-keyword\">FROM</span> <span class=\"hljs-string\">&#x27;aaaaa1234aaaaaaa&#x27;</span>); # 以<span class=\"hljs-string\">&#x27;aa&#x27;</span>为单位去除字符前后的<span class=\"hljs-string\">&#x27;aa&#x27;</span>，这里的输出是<span class=\"hljs-string\">&#x27;a1234a&#x27;</span><br># <span class=\"hljs-number\">7</span>、LPAD()：用指定的字符实现左填充到指定长度<br><span class=\"hljs-keyword\">SELECT</span> LPAD(<span class=\"hljs-string\">&#x27;ABC&#x27;</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-string\">&#x27;*&#x27;</span>); # 输出是<span class=\"hljs-string\">&#x27;*******ABC&#x27;</span><br><span class=\"hljs-keyword\">SELECT</span> LPAD(<span class=\"hljs-string\">&#x27;ABC&#x27;</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;*&#x27;</span>); # 输出是<span class=\"hljs-string\">&#x27;AB&#x27;</span><br># <span class=\"hljs-number\">8</span>、RPAD()：用指定的字符实现左填充到指定长度<br># <span class=\"hljs-number\">9</span>、REPLACE():替换<br><span class=\"hljs-keyword\">SELECT</span> REPLACE(<span class=\"hljs-string\">&#x27;ABC&#x27;</span>, <span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;B&#x27;</span>) # 把<span class=\"hljs-string\">&#x27;ABC&#x27;</span>中的所有<span class=\"hljs-string\">&#x27;A&#x27;</span>换成<span class=\"hljs-string\">&#x27;C&#x27;</span><br></code></pre></div></td></tr></table></figure>\n<h4 id=\"数学函数\"><a class=\"markdownIt-Anchor\" href=\"#数学函数\">#</a> 数学函数</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># <span class=\"hljs-number\">1</span>、round(x)：四舍五入<br><span class=\"hljs-keyword\">SELECT</span> ROUND(<span class=\"hljs-number\">1.65</span>); # <span class=\"hljs-number\">2</span><br><span class=\"hljs-keyword\">SELECT</span> ROUND(<span class=\"hljs-number\">-1.65</span>); # <span class=\"hljs-number\">-2</span><br><span class=\"hljs-keyword\">SELECT</span> ROUND(<span class=\"hljs-number\">-1.45</span>); # <span class=\"hljs-number\">-1</span><br># <span class=\"hljs-number\">2</span>、ROUND(x, y)：照第y位小数四舍五入<br># <span class=\"hljs-number\">3</span>、<span class=\"hljs-built_in\">CEIL</span>(X)：返回大于等于x的最小整数<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">CEIL</span>(<span class=\"hljs-number\">1.01</span>); # <span class=\"hljs-number\">2</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">CEIL</span>(<span class=\"hljs-number\">1.00</span>); # <span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">CEIL</span>(<span class=\"hljs-number\">-1.01</span>); # <span class=\"hljs-number\">-1</span><br># <span class=\"hljs-number\">4</span>、<span class=\"hljs-built_in\">FLOOR</span>(x)：返回小于等于x的最大整数<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">CEIL</span>(<span class=\"hljs-number\">1.01</span>); # <span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">CEIL</span>(<span class=\"hljs-number\">1.00</span>); # <span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">CEIL</span>(<span class=\"hljs-number\">-1.01</span>); # <span class=\"hljs-number\">-2</span><br># <span class=\"hljs-number\">5</span>、<span class=\"hljs-keyword\">TRUNCATE</span>(x, y)：让x保留y位小数<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">TRUNCATE</span>(<span class=\"hljs-number\">1.6999</span>, <span class=\"hljs-number\">1</span>); # <span class=\"hljs-number\">1.6</span><br># <span class=\"hljs-number\">6</span>、<span class=\"hljs-built_in\">MOD</span>(a,b)：取余  <span class=\"hljs-operator\">=</span> a <span class=\"hljs-operator\">-</span> a <span class=\"hljs-operator\">/</span> b <span class=\"hljs-operator\">*</span> b<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MOD</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">3</span>); # <span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MOD</span>(<span class=\"hljs-number\">-10</span>, <span class=\"hljs-number\">-3</span>); # <span class=\"hljs-number\">-1</span><br></code></pre></div></td></tr></table></figure>\n<h4 id=\"日期函数\"><a class=\"markdownIt-Anchor\" href=\"#日期函数\">#</a> 日期函数</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># <span class=\"hljs-number\">1</span>、NOW():返回当前系统日期 <span class=\"hljs-operator\">+</span> 时间<br><span class=\"hljs-keyword\">SELECT</span> NOW();<br># <span class=\"hljs-number\">2</span>、CURDATE()：返回当年系统日期，不包含时间<br><span class=\"hljs-keyword\">SELECT</span> CURDATE(); # <span class=\"hljs-number\">2021</span><span class=\"hljs-number\">-11</span><span class=\"hljs-number\">-08</span><br># <span class=\"hljs-number\">3</span>、CURTIME()：获取当前时间，不包含日期<br><span class=\"hljs-keyword\">SELECT</span> CURTIME(); # <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">17</span>:<span class=\"hljs-number\">43</span><br># <span class=\"hljs-number\">4</span>、获取指定部分：年，月，日，时，分，秒<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">YEAR</span>(NOW());<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">YEAR</span>(<span class=\"hljs-string\">&#x27;2021-11-08&#x27;</span>); # <span class=\"hljs-number\">2021</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">MONTH</span>(NOW());<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">DAY</span>(NOW());<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">HOUR</span>(NOW());<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">MINUTE</span>(NOW());<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">SECOND</span>(NOW());<br># <span class=\"hljs-number\">5</span>、STR_TO_DATE():将日期格式的字符串转换成指定格式的日期<br><span class=\"hljs-keyword\">SELECT</span> STR_TO_DATE(<span class=\"hljs-string\">&#x27;1998-3-02&#x27;</span>,<span class=\"hljs-string\">&#x27;%Y-%c-%d&#x27;</span>) <br># <span class=\"hljs-number\">6</span>、DATA_FORMATE()：将日期转换成字符<br><span class=\"hljs-keyword\">SELECT</span> DATE_FORMAT(NOW(),<span class=\"hljs-string\">&#x27;%y-%m-%d&#x27;</span>);<br># DATEDIFF(exp1, exp2)：求两个日期时间之差<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"流程控制函数\"><a class=\"markdownIt-Anchor\" href=\"#流程控制函数\">#</a> 流程控制函数</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># IF()：实现if<span class=\"hljs-operator\">-</span><span class=\"hljs-keyword\">else</span>的效果<br><span class=\"hljs-keyword\">SELECT</span> IF(expr1, expr2, expr3); # 若expr1为真，返回expr2，否则expr3<br># <span class=\"hljs-keyword\">CASE</span>函数，使用一：类似于Java中switch <span class=\"hljs-keyword\">case</span>的效果<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\t格式： case 要判断的字段或表达式</span><br><span class=\"hljs-comment\">\twhen 常量1 then 要显示的值或语句1;（值的时候不加&#x27;;&#x27;，语句的时候加&#x27;;&#x27;）</span><br><span class=\"hljs-comment\">\twhen 常量2 then 要显示的值或语句2;</span><br><span class=\"hljs-comment\">\t...</span><br><span class=\"hljs-comment\">\telse 要显示的值或语句2;</span><br><span class=\"hljs-comment\">\tend [as new_name]</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">SELECT</span> salary, department_id,<br><span class=\"hljs-keyword\">CASE</span> department_id <br><span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-number\">30</span> <span class=\"hljs-keyword\">THEN</span> salary <span class=\"hljs-operator\">*</span> <span class=\"hljs-number\">1.1</span><br><span class=\"hljs-keyword\">WHEN</span> <span class=\"hljs-number\">40</span> <span class=\"hljs-keyword\">THEN</span> salary <span class=\"hljs-operator\">*</span> <span class=\"hljs-number\">1.2</span><br><span class=\"hljs-keyword\">ELSE</span> salary <span class=\"hljs-operator\">*</span> <span class=\"hljs-number\">1.2</span><br><span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> <span class=\"hljs-string\">&#x27;新工资&#x27;</span> <br><span class=\"hljs-keyword\">FROM</span> employees<br># <span class=\"hljs-keyword\">CASE</span>函数，使用二：类似于Java中的多重if<br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\tCASE</span><br><span class=\"hljs-comment\">\tWHEN 条件1 THEN 要显示的值或语句1;（值的时候不加&#x27;;&#x27;，语句的时候加&#x27;;&#x27;）</span><br><span class=\"hljs-comment\">\tWHEN 条件2 THEN 要显示的值1或语句2;</span><br><span class=\"hljs-comment\">\t...</span><br><span class=\"hljs-comment\">\tELSE 要显示的值1或语句2;</span><br><span class=\"hljs-comment\">\tEND</span><br><span class=\"hljs-comment\">*/</span><br><span class=\"hljs-keyword\">SELECT</span> salary,<br><span class=\"hljs-keyword\">CASE</span><br><span class=\"hljs-keyword\">WHEN</span> salary <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">12000</span> <span class=\"hljs-keyword\">THEN</span> <span class=\"hljs-string\">&#x27;A&#x27;</span><br><span class=\"hljs-keyword\">WHEN</span> salary <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">10000</span> <span class=\"hljs-keyword\">THEN</span> <span class=\"hljs-string\">&#x27;B&#x27;</span><br><span class=\"hljs-keyword\">ELSE</span> <span class=\"hljs-string\">&#x27;C&#x27;</span><br><span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> rank<br><span class=\"hljs-keyword\">FROM</span> employees<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"其他函数\"><a class=\"markdownIt-Anchor\" href=\"#其他函数\">#</a> 其他函数</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># VERSION()：版本号<br># DATABASE()：查看当前数据库<br># <span class=\"hljs-keyword\">USER</span>()：当前用户<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"聚合函数\"><a class=\"markdownIt-Anchor\" href=\"#聚合函数\">#</a> 聚合函数</h4>\n<p>SUM、AVG、MAX、MIN、COUNT</p>\n<ul>\n<li>sum，avg 一般用于处理数值型</li>\n<li>max、min、count 可以处理任何类型</li>\n<li>以上聚合函数都会忽略 NULL 值，求平均时，分母也是忽略 NULL 的</li>\n<li>可以和 distinct 搭配</li>\n<li>和聚集函数一同查询的字段<strong>只能是 GROUP BY 之后</strong>的字段</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># SUM<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">SUM</span>(salary) <br><span class=\"hljs-keyword\">FROM</span> employees; # 求工资之和<br># 配合使用<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">SUM</span>(salary), <span class=\"hljs-built_in\">MAX</span>(salary) <br><span class=\"hljs-keyword\">FROM</span> employees; # 求总和以及最大值<br># <span class=\"hljs-built_in\">COUNT</span>() 计算不为<span class=\"hljs-keyword\">NULL</span>的数量 <br># 和<span class=\"hljs-keyword\">DISTINCT</span>搭配使用，去重<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">SUM</span>(<span class=\"hljs-keyword\">DISTINCT</span> salary), <span class=\"hljs-built_in\">SUM</span>(salary) <br><span class=\"hljs-keyword\">FROM</span> employees;<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-keyword\">DISTINCT</span> salary) <br><span class=\"hljs-keyword\">FROM</span> employees;<br># <span class=\"hljs-built_in\">COUNT</span>()的详细介绍<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span> (<span class=\"hljs-operator\">*</span>) <br><span class=\"hljs-keyword\">FROM</span> employees; # 统计总行数（对于每一行，只要有一个字段不为<span class=\"hljs-keyword\">NULL</span>，就加<span class=\"hljs-number\">1</span>）<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(常量值) <br><span class=\"hljs-keyword\">FROM</span> employees; # 统计总行数 <br><span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">\t效率对比：</span><br><span class=\"hljs-comment\">\tMYISAM存储引擎下，COUNT(*)效率高</span><br><span class=\"hljs-comment\">\tINNODB存储引擎下，COUNT(*)和COUNT(1)效率差不多，比COUNT(常量值)要高一些</span><br><span class=\"hljs-comment\">\t推荐使用COUNT(*)</span><br><span class=\"hljs-comment\">*/</span><br></code></pre></div></td></tr></table></figure>\n<h3 id=\"分组查询\"><a class=\"markdownIt-Anchor\" href=\"#分组查询\">#</a> 分组查询</h3>\n<ul>\n<li>\n<p>语法</p>\n<blockquote>\n<p>SELECT 查询列表 FROM 查询列表 [WHERE 字句]  [ GROUP BY 子句  [ HAVING 子句 ] ]  [ ORDER BY 子句 ]</p>\n</blockquote>\n</li>\n<li>\n<p>要求查询列表是分组函数和<em> GROUP BY</em> 后出现的字段</p>\n</li>\n<li>\n<p><em>WHERE 子句</em>的执行顺序先于<em> GROUP BY</em>，<em>HAVING 子句</em>的执行顺序后于<em> GROUP BY</em></p>\n</li>\n<li>\n<p>WHERE 子句的数据源是原始表，而 HAVING 子句的数据源是 GROUP BY 的筛选结果，所以在 WHERE 子句不能直接使用聚合函数</p>\n</li>\n<li>\n<p>GROUP BY 子句支持单字段分组，也支持多字段分组（多个字段之间用逗号隔开，和顺序无关），也支持函数或表达式。</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 查询每个工种的平均工资<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">AVG</span>(salary), job_id <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> job_id;<br># 查询每个领导手下员工中有奖金的员工的最高工工资<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MAX</span>(salary), manager_id <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> commission_pac <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> manager_id;<br># 复杂的分组查询，分组后的筛选<br># 查询那个部门的员工人数 <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">2</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>), department_id <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> department_id <br><span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">2</span>;<br># 查询每个工种有奖金的员工的最高工资大于<span class=\"hljs-number\">12000</span>的工种编号和最高工资<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MAX</span>(salary), job_id <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> commission_pac <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span><br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> job_id <span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">MAX</span>(salary) <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">12000</span>;<br># 查询领导编号 <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">102</span>的每个领导手下的最低工资大于<span class=\"hljs-number\">5000</span>的领导编号是哪个，以及最低工资<br><span class=\"hljs-keyword\">SELECT</span> manager_id, <span class=\"hljs-built_in\">MIN</span>(salary) <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> manager_id <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">102</span> <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> manager_id <br><span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">MIN</span>(salary) <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">5000</span><br># 按表达式或函数分组<br># 例：按照员工姓名分组，查询每组员工的人数，筛选出员工个数 <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">5</span>的有哪些<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>), LENGTH(last_name) <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> LENGTH(last_name) <br><span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">COUNT</span>(last_name) <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">5</span>;<br># 按多个字段分组<br># 例：查询每个部门每个工种的员工的平均工资<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">AVG</span>(salary), department_id, job_id <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> job_id, department_id;<br># 添加排序<br># 查询每个部门每个工种的员工的平均工资，并按平均工资从小到大排序<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">AVG</span>(salary), department_id, job_id <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> job_id, department_id <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-built_in\">AVG</span>(salary) <span class=\"hljs-keyword\">ASC</span><br></code></pre></div></td></tr></table></figure>\n<h3 id=\"连接查询\"><a class=\"markdownIt-Anchor\" href=\"#连接查询\">#</a> 连接查询</h3>\n<ul>\n<li>\n<p>语法</p>\n<blockquote>\n<p>SELECT 查询列表 FROM A, B [WHERE 子句] [ 其他子句 ]</p>\n</blockquote>\n</li>\n<li>\n<p>查询的数据源是 A 和 B 的笛卡尔积，若 A 有 m 行，B 有 n 行，则 A 和 B 的笛卡尔积有 mn 行。</p>\n</li>\n<li>\n<p>通常需要使用 WHERE 子句进行筛选</p>\n</li>\n<li>\n<p>MySQL 不支持全外连接</p>\n</li>\n</ul>\n<h4 id=\"等值连接\"><a class=\"markdownIt-Anchor\" href=\"#等值连接\">#</a> 等值连接</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 等值连接<br># 例：查询女生对应的男生<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-string\">&#x27;name&#x27;</span>, boy_name <br><span class=\"hljs-keyword\">FROM</span> girls, boys <br><span class=\"hljs-keyword\">WHERE</span> girls.boyfriend_id <span class=\"hljs-operator\">=</span> boys.id;<br># 例：查询员工名和对应的部门名<br><span class=\"hljs-keyword\">SELECT</span> last_name, department_name <br><span class=\"hljs-keyword\">FROM</span> employees, departments <br><span class=\"hljs-keyword\">WHERE</span> employees.department_id <span class=\"hljs-operator\">=</span> departmens.departmen_id;<br># 为表起别名，起了别名后，就不能使用原来的表名了<br># 查询员工名、工种号、工种名<br><span class=\"hljs-keyword\">SELECT</span> last_name, e.job_id <span class=\"hljs-comment\">/*因为两个表都有job_id字段，所以要指明*/</span>, job_title <br><span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">AS</span> e, jobs <span class=\"hljs-keyword\">AS</span> j <br><span class=\"hljs-keyword\">WHERE</span> e.job_id <span class=\"hljs-operator\">=</span> j.job_id;<br># 配合筛选<br># 查询有奖金的员工名、部门名<br><span class=\"hljs-keyword\">SELECT</span> last_name, department_name <br><span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">AS</span> e, dempartments <span class=\"hljs-keyword\">AS</span> d<br><span class=\"hljs-keyword\">WHERE</span> e.<span class=\"hljs-string\">&#x27;deparrment_id&#x27;</span> <span class=\"hljs-operator\">=</span> d.<span class=\"hljs-string\">&#x27;departmen_id&#x27;</span> <br><span class=\"hljs-keyword\">AND</span> e.commission_id <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>;<br># 配合分组<br># 查询每个城市的部门个数<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>), city <br><span class=\"hljs-keyword\">FROM</span> departments, locations <br><span class=\"hljs-keyword\">WHERE</span> departments.location_id <span class=\"hljs-operator\">=</span> locations.id <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> city;<br># 查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资<br><span class=\"hljs-keyword\">SELECT</span> department_name, manager_id, <span class=\"hljs-built_in\">MIN</span>(salary) <br><span class=\"hljs-keyword\">FROM</span> departments, employees<br><span class=\"hljs-keyword\">WHERE</span> departments.manager_id <span class=\"hljs-operator\">=</span> employees.manager_id <br><span class=\"hljs-keyword\">AND</span> commissioin_id <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span><br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> department_name;<br># 配合排序<br># 查询每个工种的工种名和员工个数，按员工个数降序<br><span class=\"hljs-keyword\">SELECT</span> job_title, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <br><span class=\"hljs-keyword\">FROM</span> employees, jobs <br><span class=\"hljs-keyword\">WHERE</span> emoloyees.job_id <span class=\"hljs-operator\">=</span> jobs.job_id <br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> job_title <span class=\"hljs-keyword\">DESC</span>;<br># 多表连接<br># 例：查询员工名，部门名和所在城市，按员工名降序排序<br><span class=\"hljs-keyword\">SELECT</span> last_name, department_name, city<br><span class=\"hljs-keyword\">FROM</span> employees e, departments d, locations l<br><span class=\"hljs-keyword\">WHERE</span> e.department_id <span class=\"hljs-operator\">=</span> d.department_id <span class=\"hljs-keyword\">AND</span> d.location_id <span class=\"hljs-operator\">=</span> l.location_id <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> last_name <span class=\"hljs-keyword\">DESC</span>;<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"非等值连接\"><a class=\"markdownIt-Anchor\" href=\"#非等值连接\">#</a> 非等值连接</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 非等值连接<br># 例：查询员工的工资和工资等级<br><span class=\"hljs-keyword\">SELECT</span> salary, grade_level <br><span class=\"hljs-keyword\">FROM</span> employees, job_grades <br><span class=\"hljs-keyword\">WHERE</span> employees.salary <span class=\"hljs-keyword\">BETWEEN</span> job_grades.lowest_salary <span class=\"hljs-keyword\">AND</span> job_grades.highest_salary;<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"自连接\"><a class=\"markdownIt-Anchor\" href=\"#自连接\">#</a> 自连接</h4>\n<ul>\n<li>使用自连接<strong>必须起别名</strong></li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例：查询员工名和其上级的名字<br><span class=\"hljs-keyword\">SELECT</span> A.last_name, B.last_name <br><span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">AS</span> A, employees <span class=\"hljs-keyword\">AS</span> B<br><span class=\"hljs-keyword\">WHERE</span> A.manager_id <span class=\"hljs-operator\">=</span> B.id;<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"sql99语法\"><a class=\"markdownIt-Anchor\" href=\"#sql99语法\">#</a> SQL99 语法</h4>\n<ul>\n<li>\n<p>语法：</p>\n<blockquote>\n<p>SELECT 查询列表</p>\n<p>FROM 表 1 别名 [连接类型] JOIN 表 2 别名</p>\n<p>ON 连接条件</p>\n<p>[WHERE 子句]</p>\n<p>[ GROUP BY 子句</p>\n<p>[HAVING 子句] ]</p>\n<p>[ORDER BY 子句]</p>\n</blockquote>\n</li>\n<li>\n<p>分类</p>\n<ul>\n<li>\n<p>内连接：INNER</p>\n</li>\n<li>\n<p>外连接</p>\n<ul>\n<li>左外连接：LEFT [OUTER]</li>\n<li>右外连接：RIGHT [OUTER]</li>\n<li>全外连接：FULL [OUTER]</li>\n</ul>\n</li>\n<li>\n<p>交叉连接：CROSS</p>\n</li>\n</ul>\n</li>\n<li>\n<p>注意：如果有多个连接，则必须每个连接后面跟一个 ON 子句，不能写在一起</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 内连接 -- </span><br># 等值连接<br># 例：查询员工名、部门名<br><span class=\"hljs-keyword\">SELECT</span> last_name, department_name <br><span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">AS</span> e <br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> departmens <span class=\"hljs-keyword\">AS</span> d<br><span class=\"hljs-keyword\">ON</span> e.department_id <span class=\"hljs-operator\">=</span> d.department_id;<br># 非等值连接<br># 例：查询员工的工资级别，按工资从小到大排序<br><span class=\"hljs-keyword\">SELECT</span> salary,grade_level<br><span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">AS</span> e<br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> job_grades <span class=\"hljs-keyword\">AS</span> g<br><span class=\"hljs-keyword\">ON</span> e.salary <span class=\"hljs-keyword\">BETWEEN</span> g.lowest_sal <span class=\"hljs-keyword\">AND</span> g.highest_sal<br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> salary <span class=\"hljs-keyword\">ASC</span>;<br># 自连接<br># 例：查询员工名和他领导的名字<br><span class=\"hljs-keyword\">SELECT</span> e.last_name, m.last_name<br><span class=\"hljs-keyword\">FROM</span> employees e<br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> employees m<br><span class=\"hljs-keyword\">ON</span> e.manager_id <span class=\"hljs-operator\">=</span> m.employee_id;<br></code></pre></div></td></tr></table></figure>\n<h5 id=\"外连接\"><a class=\"markdownIt-Anchor\" href=\"#外连接\">#</a> 外连接</h5>\n<ul>\n<li>\n<p>外连接查询结果 = 内连接结果 + 主表中有而从表中没有的记录（以 NULL 值显示）</p>\n</li>\n<li>\n<p>左外连接，LEFT JOIN 左边的是主表</p>\n</li>\n<li>\n<p>右外连接，RIGHT JOIN 右边的是主表</p>\n</li>\n<li>\n<p>MySQL<strong> 不支持</strong>全外连接</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211111143515166.png\" alt=\"外连接对比\"></p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 外连接：用于查询一个表中有，另一个表中没有的情况<br># 例：查询男朋友不在男神表中的女神名<br><span class=\"hljs-keyword\">SELECT</span> grils.name, boys.name<br><span class=\"hljs-keyword\">FROM</span> grils<br><span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">OUTER</span> <span class=\"hljs-keyword\">JOIN</span> boys<br><span class=\"hljs-keyword\">ON</span> girls.boyfriend_id <span class=\"hljs-operator\">=</span> boys.id<br><span class=\"hljs-keyword\">WHERE</span> boys.id <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span>;<br># 例：查询哪个部门没有员工<br><span class=\"hljs-keyword\">SELECT</span> department_name, employee_id<br><span class=\"hljs-keyword\">FROM</span> departments<br><span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">OUTER</span> <span class=\"hljs-keyword\">JOIN</span> employees<br><span class=\"hljs-keyword\">ON</span> departments.department_id <span class=\"hljs-operator\">=</span> employees.department_id<br><span class=\"hljs-keyword\">WHERE</span> employee_id <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span>;<br># 全外连接 <span class=\"hljs-operator\">=</span> 内连接 <span class=\"hljs-operator\">+</span> 表<span class=\"hljs-number\">1</span>中有表<span class=\"hljs-number\">2</span>中没有 <span class=\"hljs-operator\">+</span> 表<span class=\"hljs-number\">1</span>中没有表<span class=\"hljs-number\">2</span>有<br># 交叉连接：其实就是笛卡尔积<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">CROSS</span> <span class=\"hljs-keyword\">JOIN</span> departments;<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"子查询\"><a class=\"markdownIt-Anchor\" href=\"#子查询\">#</a> 子查询</h3>\n<ul>\n<li>\n<p>含义：出现在其他语句中的 SELECT 语句。主查询可以是 UPDATE, INSERT, DELETE, SELECT</p>\n</li>\n<li>\n<p>按照子查询出现的位置分类</p>\n<ul>\n<li>SELECT 后面</li>\n<li>FROM 后面</li>\n<li>WHERE 或 HAVING 后面</li>\n<li>EXISTS 后面（相关子查询）</li>\n</ul>\n</li>\n<li>\n<p>多行子查询的操作符：IN, NOT IN, ANY, SOME, ALL（ANY 和 SOME 是一样的）</p>\n</li>\n</ul>\n<h4 id=\"放在where或having后面\"><a class=\"markdownIt-Anchor\" href=\"#放在where或having后面\">#</a> 放在 WHERE 或 HAVING 后面</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 放在<span class=\"hljs-keyword\">WHERE</span>或<span class=\"hljs-keyword\">HAVING</span>后面<br># 例<span class=\"hljs-number\">1</span>：谁的工资比Abel高<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees <br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-operator\">&gt;</span> (<br>    <span class=\"hljs-keyword\">SELECT</span> salary <br>    <span class=\"hljs-keyword\">FROM</span> employees <br>    <span class=\"hljs-keyword\">WHERE</span> last_name <span class=\"hljs-operator\">=</span> &quot;Abel&quot;<br>);<br># 例<span class=\"hljs-number\">2</span>：查询job_id与<span class=\"hljs-number\">141</span>号员工相同，salary比<span class=\"hljs-number\">143</span>号员工多的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">WHERE</span> job_id <span class=\"hljs-operator\">=</span> (<br>    <span class=\"hljs-keyword\">SELECT</span> job_id <br>    <span class=\"hljs-keyword\">FROM</span> employees <br>    <span class=\"hljs-keyword\">WHERE</span> employee_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">141</span><br>) <span class=\"hljs-keyword\">AND</span> salary <span class=\"hljs-operator\">&gt;</span> (<br>    <span class=\"hljs-keyword\">SELECT</span> salary <br>    <span class=\"hljs-keyword\">FROM</span> employees <br>    <span class=\"hljs-keyword\">WHERE</span> employee_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">143</span><br>);<br># 例<span class=\"hljs-number\">3</span>：查询工资最少的员工的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-operator\">=</span> （<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MIN</span>(salary)<br>\t<span class=\"hljs-keyword\">FROM</span> employees<br>);<br># 例<span class=\"hljs-number\">4</span>：查询最低工资大于<span class=\"hljs-number\">50</span>号部门的最低工资的部门信息<br><span class=\"hljs-keyword\">SELECT</span> department_id, <span class=\"hljs-built_in\">MIN</span>(salary)<br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> department_id<br><span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">MIN</span>(salary) <span class=\"hljs-operator\">&gt;</span> (<br>    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MIN</span>(salary) <br>    <span class=\"hljs-keyword\">FROM</span> employees <br>    <span class=\"hljs-keyword\">WHERE</span> department_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">50</span><br>);<br># 非法使用标量子查询<br><span class=\"hljs-keyword\">SELECT</span> department_id, <span class=\"hljs-built_in\">MIN</span>(salary)<br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> department_id<br><span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">MIN</span>(salary) <span class=\"hljs-operator\">&gt;</span> ( # 这里的结果是一个数salary <span class=\"hljs-operator\">&gt;</span> 一个列。 应该改成 salary <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">all</span> (..) <br>    <span class=\"hljs-keyword\">SELECT</span> salary <br>    <span class=\"hljs-keyword\">FROM</span> employees <br>    <span class=\"hljs-keyword\">WHERE</span> department_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">50</span><br>);<br># 例<span class=\"hljs-number\">5</span>：返回location_id是<span class=\"hljs-number\">1400</span>或<span class=\"hljs-number\">1700</span>的部门中所有员工姓名<br><span class=\"hljs-keyword\">SELECT</span> last_name<br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">WHERE</span> department_id <span class=\"hljs-keyword\">in</span> ( # 或 <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">ANY</span>(...)<br>    <span class=\"hljs-keyword\">SELECT</span> department_id <br>    <span class=\"hljs-keyword\">FROM</span> departments<br>    <span class=\"hljs-keyword\">WHERE</span> location_id <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-number\">1400</span>, <span class=\"hljs-number\">1700</span>)<br>);<br># 例<span class=\"hljs-number\">6</span>：返回其他工种中比job_id为<span class=\"hljs-string\">&#x27;IT_PROG&#x27;</span>工种任意工资低的员工的信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span><br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">WHERE</span> salary <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-keyword\">all</span>(<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">DISTINCT</span> salary<br>\t<span class=\"hljs-keyword\">FROM</span> employees<br>\t<span class=\"hljs-keyword\">WHERE</span> job_id <span class=\"hljs-operator\">=</span> &quot;IT_PROG&quot;<br>) <span class=\"hljs-keyword\">AND</span> job_id <span class=\"hljs-operator\">&lt;&gt;</span> &quot;IT_PROG&quot;;<br># 例<span class=\"hljs-number\">7</span>：查询员工编号最小并且工资最高的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">WHERE</span> (employee_id, salary) <span class=\"hljs-operator\">=</span> ( ####### 这种写法不常用<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">MIN</span>(employee_id), <span class=\"hljs-built_in\">MAX</span>(salary)<br>\t<span class=\"hljs-keyword\">FROM</span> employees<br>);<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"放在select后面\"><a class=\"markdownIt-Anchor\" href=\"#放在select后面\">#</a> 放在 SELECT 后面</h4>\n<ul>\n<li>只支持标量子查询</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例<span class=\"hljs-number\">1</span>：查询每个部门的员工个数<br><span class=\"hljs-keyword\">SELECT</span> departments.<span class=\"hljs-operator\">*</span>, (<br>    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <br>    <span class=\"hljs-keyword\">FROM</span> employees<br>    <span class=\"hljs-keyword\">WHERE</span> employee_id <span class=\"hljs-operator\">=</span> departments.department_id <span class=\"hljs-operator\">=</span> employees.department_id<br>) <br><span class=\"hljs-keyword\">FROM</span> departments;<br># 例<span class=\"hljs-number\">2</span>：查询员工号为<span class=\"hljs-number\">102</span>的部门名<br><span class=\"hljs-keyword\">SELECT</span> department_name<br><span class=\"hljs-keyword\">FROM</span> departments <span class=\"hljs-keyword\">AS</span> d<br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> employees <span class=\"hljs-keyword\">AS</span> e<br><span class=\"hljs-keyword\">ON</span> d.department_id <span class=\"hljs-operator\">=</span> e.department_id<br><span class=\"hljs-keyword\">WHERE</span> e.employee_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">102</span>;<br></code></pre></div></td></tr></table></figure>\n<p>#### 放在 FROM 后面</p>\n<ul>\n<li>FROM 后面的子查询必须起别名</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例<span class=\"hljs-number\">1</span>：查询每个部门的平均工资的工资等级<br><span class=\"hljs-keyword\">SELECT</span> avg_dep.ag, avg_dep.department_id, g.grade_level<br><span class=\"hljs-keyword\">FROM</span> (<br>    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">AVG</span>(salary) <span class=\"hljs-keyword\">AS</span> ag, department_id<br>\t<span class=\"hljs-keyword\">FROM</span> employees<br>\t<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> department_id<br>) <span class=\"hljs-keyword\">AS</span> avg_dep<br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> job_grades <span class=\"hljs-keyword\">AS</span> g<br><span class=\"hljs-keyword\">ON</span> avg_dep.ag <span class=\"hljs-keyword\">BETWEEN</span> g.lowest_sal <span class=\"hljs-keyword\">AND</span> g.highest_sal;<br></code></pre></div></td></tr></table></figure>\n<p>#### 放在 EXISTS 后面</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">EXISTS</span>(完整的查询语句)：若括号中查询语句不为空，则返回<span class=\"hljs-number\">1</span>，否则返回<span class=\"hljs-number\">0</span><br># 例<span class=\"hljs-number\">1</span>：查询有员工的部门名<br><span class=\"hljs-keyword\">SELECT</span> department_name<br><span class=\"hljs-keyword\">FROM</span> departments<br><span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">EXISTS</span>(<br>    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span><br>    <span class=\"hljs-keyword\">FROM</span> employees<br>    <span class=\"hljs-keyword\">WHERE</span> employees.department_id <span class=\"hljs-operator\">=</span> departments.department_id<br>);<br># 可以用<span class=\"hljs-keyword\">IN</span>代替<br><span class=\"hljs-keyword\">SELECT</span> department_name<br><span class=\"hljs-keyword\">FROM</span> departments<br><span class=\"hljs-keyword\">WHERE</span> department_id <span class=\"hljs-keyword\">IN</span>(<br>    <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">DISTINCT</span> department_id <br>    <span class=\"hljs-keyword\">FROM</span> employees<br>);<br># 例<span class=\"hljs-number\">2</span>：查询没有女朋友的男生信息<br># 可以用<span class=\"hljs-keyword\">IN</span>实现<br><span class=\"hljs-keyword\">SELECT</span> b.<span class=\"hljs-operator\">*</span><br><span class=\"hljs-keyword\">FROM</span> boys<br><span class=\"hljs-keyword\">WHERE</span> b.id <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">IN</span>(<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">DISTINCT</span> boyfriend_id<br>\t<span class=\"hljs-keyword\">FROM</span> girls<br>);<br># 也可以用<span class=\"hljs-keyword\">EXISTS</span>代替<span class=\"hljs-keyword\">IN</span><br><span class=\"hljs-keyword\">SELECT</span> b.<span class=\"hljs-operator\">*</span><br><span class=\"hljs-keyword\">FROM</span> boys<br><span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span>(<br>\t<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-keyword\">DISTINCT</span> boyfriend_id<br>\t<span class=\"hljs-keyword\">FROM</span> girls<br>    <span class=\"hljs-keyword\">WHERE</span> b.id <span class=\"hljs-operator\">=</span> girls.boyfriend_id<br>);<br><br></code></pre></div></td></tr></table></figure>\n<h3 id=\"分页查询\"><a class=\"markdownIt-Anchor\" href=\"#分页查询\">#</a> 分页查询</h3>\n<ul>\n<li>\n<p>使用情景：如果要查询的数据过多，可以分多页显示（比如淘宝商品不是一次显示完的，这样可以提高速度）</p>\n</li>\n<li>\n<p>语法：</p>\n<p>​\t\tSELECT 查询列表</p>\n<p>​\t    FROM 表</p>\n<p>​        [JOIN TYPE] JOIN 表</p>\n<p>​\t\tON 连接条件</p>\n<p>​\t\tWHERE 筛选条件</p>\n<p>​\t\tGROUP BY</p>\n<p>​\t\tHAVING</p>\n<p>​\t\tORDER BY</p>\n<p>​\t\tLIMIT offset，size</p>\n</li>\n<li>\n<p>offset 表示要显示条目的起始索引（索引位置从 0 开始），size 表示要显示的条目个数</p>\n</li>\n<li>\n<p>LIMIT 语句在语法上和执行顺序上都是最后一步</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例：查询前五条员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> employees LIMIT <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">5</span>; # 等价于 <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> employees LIMIT <span class=\"hljs-number\">5</span>;(默认从第一条数据开始)<br># 显示有奖金的工资最高的<span class=\"hljs-number\">10</span>名员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span><br><span class=\"hljs-keyword\">FROM</span> employees<br><span class=\"hljs-keyword\">WHERE</span> commission_pct <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span><br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> salary <span class=\"hljs-keyword\">DESC</span><br>LIMIT <span class=\"hljs-number\">10</span>;<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"联合查询\"><a class=\"markdownIt-Anchor\" href=\"#联合查询\">#</a> 联合查询</h3>\n<ul>\n<li>UNION：将多个查询语句的结果合并成一个结果</li>\n<li>语法：查询语句 1 UNION 查询语句 2 UNION 查询语句 3 …</li>\n<li>应用场景：要查询的结果来自于多个表，且多个表之间没有直接的连接关系，但<strong>查询的信息一致</strong>（查询的字段值必须相同）</li>\n<li>注意\n<ul>\n<li>要求多条查询语句要查询的列数一致</li>\n<li>要求多条查询语句查询的每一列的类型和顺序最好要一致（不报错，但没意义）</li>\n<li>UNION 关键字<strong>默认是去重的</strong>，如果想要包含重复项，可以使用 UNION ALL</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例：查询部门编号<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">90</span>或邮箱包含a的员工信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">WHERE</span> email <span class=\"hljs-keyword\">LIKE</span> <span class=\"hljs-string\">&#x27;%a%&#x27;</span> <br><span class=\"hljs-keyword\">UNION</span><br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> employees <span class=\"hljs-keyword\">WHERE</span> department_id <span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-number\">90</span>;<br># 查询中国用户表中的男性用户信息和外国用户表中的女性用户信息<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> t_ca <span class=\"hljs-keyword\">WHERE</span> gender <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;male&#x27;</span><br><span class=\"hljs-keyword\">UNION</span> <br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> t_ua <span class=\"hljs-keyword\">WHERE</span> gender <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;female&#x27;</span>;<br></code></pre></div></td></tr></table></figure>\n<h2 id=\"dml语言\"><a class=\"markdownIt-Anchor\" href=\"#dml语言\">#</a> DML 语言</h2>\n<h3 id=\"插入语句\"><a class=\"markdownIt-Anchor\" href=\"#插入语句\">#</a> 插入语句</h3>\n<ul>\n<li>\n<p>语法：</p>\n<ul>\n<li>方式一：INSERT INTO 表名 (字段名 1, 字段名 2, …) VALUES (值 1，值 2，……);</li>\n<li>方式二：INSERT INTO 表名 SET 列名 = 值，列名 = 值，……</li>\n</ul>\n</li>\n<li>\n<p>注意</p>\n<ul>\n<li>插入的值的类型必须与列的类型一致或兼容（顺序、个数必须相同，如果某字段值为空，那就写 NULL）</li>\n<li>可以为 NULL 的字段值，插入的时候可以为 NULL</li>\n<li>不可以为 NULL 的列，必须有值</li>\n<li>可以省略列名，但默认是所有插入所有列，且顺序和表中一致</li>\n</ul>\n</li>\n<li>\n<p>方式一支持一次插入多行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> girls(id, name, gender, birthday, phone, photo, boyfriend_id)<br><span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-number\">13</span>,<span class=\"hljs-string\">&#x27;Angela&#x27;</span>, <span class=\"hljs-string\">&#x27;girl&#x27;</span>, <span class=\"hljs-string\">&#x27;2001-02-12&#x27;</span>, <span class=\"hljs-string\">&#x27;13100000000&#x27;</span>, <span class=\"hljs-keyword\">NULL</span>, <span class=\"hljs-number\">2</span>),<br>\t(<span class=\"hljs-number\">14</span>,<span class=\"hljs-string\">&#x27;Angela1&#x27;</span>, <span class=\"hljs-string\">&#x27;girl&#x27;</span>, <span class=\"hljs-string\">&#x27;2001-03-12&#x27;</span>, <span class=\"hljs-string\">&#x27;13100000020&#x27;</span>, <span class=\"hljs-keyword\">NULL</span>, <span class=\"hljs-number\">4</span>),<br>\t(<span class=\"hljs-number\">15</span>,<span class=\"hljs-string\">&#x27;Angela1&#x27;</span>, <span class=\"hljs-string\">&#x27;girl&#x27;</span>, <span class=\"hljs-string\">&#x27;2001-04-12&#x27;</span>, <span class=\"hljs-string\">&#x27;13100000400&#x27;</span>, <span class=\"hljs-keyword\">NULL</span>, <span class=\"hljs-number\">6</span>);<br></code></pre></div></td></tr></table></figure>\n</li>\n<li>\n<p>方式一支持子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> girls(id, name, phone)<br><span class=\"hljs-keyword\">SELECT</span> id, boy_name, phone_number # 这里指把子查询的结果插入到表中，这样可以实现一次性插入多行<br><span class=\"hljs-keyword\">FROM</span> boys<br><span class=\"hljs-keyword\">WHERE</span> id <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-number\">3</span>;<br></code></pre></div></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"举例-4\"><a class=\"markdownIt-Anchor\" href=\"#举例-4\">#</a> 举例</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 若photo值可以为<span class=\"hljs-keyword\">NULL</span>，则以下<span class=\"hljs-number\">4</span>种方式等价<br># ①<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> girls(id, name, gender, birthday, phone, photo, boyfriend_id)<br><span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-number\">13</span>,<span class=\"hljs-string\">&#x27;Angela&#x27;</span>, <span class=\"hljs-string\">&#x27;girl&#x27;</span>, <span class=\"hljs-string\">&#x27;2001-02-12&#x27;</span>, <span class=\"hljs-string\">&#x27;13100000000&#x27;</span>, <span class=\"hljs-keyword\">NULL</span>, <span class=\"hljs-number\">2</span>);<br># ②<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> girls<br><span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-number\">13</span>,<span class=\"hljs-string\">&#x27;Angela&#x27;</span>, <span class=\"hljs-string\">&#x27;girl&#x27;</span>, <span class=\"hljs-string\">&#x27;2001-02-12&#x27;</span>, <span class=\"hljs-string\">&#x27;13100000000&#x27;</span>, <span class=\"hljs-keyword\">NULL</span>, <span class=\"hljs-number\">2</span>);<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> girls(id, name, gender, birthday, phone, boyfriend_id)<br># ③<br><span class=\"hljs-keyword\">VALUES</span>(<span class=\"hljs-number\">13</span>,<span class=\"hljs-string\">&#x27;Angela&#x27;</span>, <span class=\"hljs-string\">&#x27;girl&#x27;</span>, <span class=\"hljs-string\">&#x27;2001-02-12&#x27;</span>, <span class=\"hljs-string\">&#x27;13100000000&#x27;</span>, <span class=\"hljs-number\">2</span>);<br># ④<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> girls<br><span class=\"hljs-keyword\">SET</span> name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;Angela&#x27;</span>,<br>\tid <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">13</span>,<br>\tgender <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;girl&#x27;</span><br>\tbirthday <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;2001-02-12&#x27;</span><br>\tphone <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;13100000000&#x27;</span><br>\tboyfriend_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span>;<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"修改语句\"><a class=\"markdownIt-Anchor\" href=\"#修改语句\">#</a> 修改语句</h3>\n<p>#### 修改单表记录</p>\n<ul>\n<li>语法：UPDATE 表名 SET 字段名 1 = 新值 1，字段名 2 = 新值 2，…… WHERE 筛选条件</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例<span class=\"hljs-number\">1</span>：修改girls表中姓唐的女生的电话为<span class=\"hljs-number\">13899999999</span><br>UPDATE girls<br><span class=\"hljs-keyword\">SET</span> phone <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;13899999999&#x27;</span><br><span class=\"hljs-keyword\">WHERE</span> name <span class=\"hljs-keyword\">LIKE</span> <span class=\"hljs-string\">&#x27;唐%&#x27;</span>;<br># 例<span class=\"hljs-number\">2</span>：修改boys表中id为<span class=\"hljs-number\">2</span>的人名称为张飞，魅力值<span class=\"hljs-number\">10</span><br>UPDATE boys<br><span class=\"hljs-keyword\">SET</span> boy_name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;张飞&#x27;</span>,<br>\tusercp <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">10</span><br><span class=\"hljs-keyword\">WHERE</span> id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span>;\t<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"修改多表记录\"><a class=\"markdownIt-Anchor\" href=\"#修改多表记录\">#</a> 修改多表记录</h4>\n<ul>\n<li>语法：\n<ul>\n<li>sql92：UPDATE 表 1 别名，表 2 别名 SET 列 = 值，… WHERE 连接条件 AND 筛选条件；</li>\n<li>sql99：UPDATE 表 1 别名 连接类型 表 2 别名 ON 连接条件 SET 列 = 值，… WHERE 连接条件 AND 筛选条件；</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 例<span class=\"hljs-number\">1</span>：修改张无忌的女朋友们的手机号为<span class=\"hljs-number\">114</span><br>UPDATE boys b<br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> girls g<br><span class=\"hljs-keyword\">ON</span> b.id <span class=\"hljs-operator\">=</span> g.boyfriend_id<br><span class=\"hljs-keyword\">SET</span> g.phone <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;114&#x27;</span><br><span class=\"hljs-keyword\">WHERE</span> b.name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;张无忌&#x27;</span>;<br># 例<span class=\"hljs-number\">2</span>：修改没有男朋友的女生的男朋友编号为<span class=\"hljs-number\">2</span><br>UPDATE girls g<br><span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> boys b<br><span class=\"hljs-keyword\">ON</span> g.boyfriend_id <span class=\"hljs-operator\">=</span> b.id<br><span class=\"hljs-keyword\">SET</span> g.boyfriend_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span><br><span class=\"hljs-keyword\">WHERE</span> g.boyfriend_id <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span>;<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"删除语句\"><a class=\"markdownIt-Anchor\" href=\"#删除语句\">#</a> 删除语句</h3>\n<ul>\n<li>\n<p>语法</p>\n<ul>\n<li>方式一：DELETE 要删的表名 FROM 表名 WHERE 筛选条件</li>\n<li>方式二：TRUNCATE TABLE 表名 **（删除整张表）**</li>\n</ul>\n</li>\n<li>\n<p>假如要删除的表中有自增长列，用 delete 删除后，再插入数据，自增长的列从断点开始，而 TRUNCATE 删除后，再插入数据，自增长的列从 1 开始</p>\n</li>\n<li>\n<p>DELETE 有返回值（比如：共 3 行受影响）；TRUNCATE 没有返回值（会显示：共 0 行受影响）</p>\n</li>\n<li>\n<p>TRUNCATE 删除<strong>不能回滚</strong>，DELETE 删除可以回滚</p>\n</li>\n</ul>\n<h4 id=\"单表删除\"><a class=\"markdownIt-Anchor\" href=\"#单表删除\">#</a> 单表删除</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 删除手机号以<span class=\"hljs-number\">9</span>结尾的女生信息<br><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">FROM</span> girls<br><span class=\"hljs-keyword\">WHERE</span> phone <span class=\"hljs-keyword\">LIKE</span> <span class=\"hljs-string\">&#x27;%9&#x27;</span>;<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"多表删除\"><a class=\"markdownIt-Anchor\" href=\"#多表删除\">#</a> 多表删除</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 删除张无忌的女朋友的信息<br><span class=\"hljs-keyword\">DELETE</span> girls # 这里只会删除girls表中的数据<br># <span class=\"hljs-keyword\">DELETE</span> girls， boys # 这样就会删除girls和boys两个表中的信息<br><span class=\"hljs-keyword\">FROM</span> girls <br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> boys<br><span class=\"hljs-keyword\">ON</span> boys.id <span class=\"hljs-operator\">=</span> girls.boyfriend_id<br><span class=\"hljs-keyword\">WHERE</span> boys.name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;张无忌&#x27;</span><br><br># 删除黄晓明的信息和他女朋友的信息<br><span class=\"hljs-keyword\">DELETE</span> girls, boys # 两个表中的信息都会被删除<br><span class=\"hljs-keyword\">FROM</span> boys<br><span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> girls<br><span class=\"hljs-keyword\">ON</span> boys.id <span class=\"hljs-operator\">=</span> girls.boyfriend_id<br><span class=\"hljs-keyword\">WHERE</span> boys.name <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;黄晓明&#x27;</span><br></code></pre></div></td></tr></table></figure>\n<h2 id=\"ddl语言\"><a class=\"markdownIt-Anchor\" href=\"#ddl语言\">#</a> DDL 语言</h2>\n<h3 id=\"库管理\"><a class=\"markdownIt-Anchor\" href=\"#库管理\">#</a> 库管理</h3>\n<ul>\n<li>\n<p>库的创建</p>\n<ul>\n<li>语法：CREATE DATABASE [IF NOT EXISTS] 库名；</li>\n</ul>\n</li>\n<li>\n<p>更改库的字符集</p>\n<ul>\n<li>语法：ALTER DATABASE 库名 CHARACTER SET 字符集名</li>\n</ul>\n</li>\n<li>\n<p>库的删除</p>\n<ul>\n<li>语法：DROP DATABASE [IF EXISTS] 库名</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"表管理\"><a class=\"markdownIt-Anchor\" href=\"#表管理\">#</a> 表管理</h3>\n<h4 id=\"创建create\"><a class=\"markdownIt-Anchor\" href=\"#创建create\">#</a> 创建：CREATE</h4>\n<ul>\n<li>\n<p>语法：</p>\n<ul>\n<li>\n<p>CREATE TABLE [IF NOT EXISTS] 表名 (</p>\n<p>​\t字段名 字段类型 [长度 约束])，</p>\n<p>​\t字段名 字段类型 [长度 约束])，</p>\n<p>​\t字段名 字段类型 [长度 约束])，</p>\n<p>​\t……</p>\n<p>);</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"># 创建表book<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> book(<br>\tid <span class=\"hljs-type\">INT</span>, # 书的编号<br>    `name` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">20</span>), # 书名<br>    price <span class=\"hljs-keyword\">DOUBLE</span>, # 价格<br>    author_id <span class=\"hljs-type\">INT</span> # 作者编号<br>);<br></code></pre></div></td></tr></table></figure>\n<h4 id=\"修改alter\"><a class=\"markdownIt-Anchor\" href=\"#修改alter\">#</a> 修改：ALTER</h4>\n<ul>\n<li>\n<p>修改列名</p>\n<ul>\n<li>\n<p>ALTER TABLE 表名 CHANGE COLUMN 原名 新名 类型；</p>\n</li>\n<li>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> books CHANGE <span class=\"token keyword\">COLUMN</span> author_id author <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div></td></tr><tr><td data-num=\"2\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token comment\">--code￼29--></span></pre></div></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>添加新列</p>\n<ul>\n<li>\n<p>ALTER TABLE 表名 ADD COLUMN 列名 类型；</p>\n</li>\n<li>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> books <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">COLUMN</span> publish_time <span class=\"token keyword\">DATETIME</span><span class=\"token punctuation\">;</span></pre></div></td></tr><tr><td data-num=\"2\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token comment\">--code￼30--></span></pre></div></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>修改表名</p>\n<ul>\n<li>\n<p>ALTER TABLE 表名 RENAME TO 新名字；</p>\n</li>\n<li>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> books <span class=\"token keyword\">RENAME</span> <span class=\"token keyword\">TO</span> my_books<span class=\"token punctuation\">;</span></pre></div></td></tr><tr><td data-num=\"2\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token comment\">--code￼31--></span></pre></div></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"复制表\"><a class=\"markdownIt-Anchor\" href=\"#复制表\">#</a> 复制表</h4>\n<ul>\n<li>\n<p>仅仅复制表的结构</p>\n<ul>\n<li>\n<p>CREATE TABLE 表名 LIKE 源表名；</p>\n</li>\n<li>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> book_copy <span class=\"token operator\">LIKE</span> books<span class=\"token punctuation\">;</span></pre></div></td></tr><tr><td data-num=\"2\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token comment\">--code￼32--></span></pre></div></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>仅仅复制表的部分字段</p>\n<ul>\n<li>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> books_copy</pre></div></td></tr><tr><td data-num=\"2\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> author_id</pre></div></td></tr><tr><td data-num=\"3\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">FROM</span> books</pre></div></td></tr><tr><td data-num=\"4\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token keyword\">WHERE</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 筛选条件永远为 false，所以最后复制过去的只有 id 和 author_id 两个字段</span></pre></div></td></tr><tr><td data-num=\"5\"></td><td><div class=\"hljs code-wrapper\"><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token comment\">--code￼33--></span></pre></div></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"浮点数\"><a class=\"markdownIt-Anchor\" href=\"#浮点数\">#</a> 浮点数</h4>\n<ul>\n<li>包括两种：float（4 字节），double（8 字节）</li>\n<li>写法：FLOAT (M, D), DOUBLE (M, D)</li>\n</ul>\n<h4 id=\"定点数\"><a class=\"markdownIt-Anchor\" href=\"#定点数\">#</a> 定点数</h4>\n<ul>\n<li>\n<p>写法：DEC (M, D)</p>\n</li>\n<li>\n<p>DEC()</p>\n</li>\n<li>\n<p>浮点数</p>\n</li>\n<li>\n<p>char</p>\n</li>\n<li>\n<p>varchar</p>\n</li>\n<li>\n<p>test</p>\n</li>\n<li>\n<p>blob（较长的二进制数据）</p>\n</li>\n<li></li>\n</ul>\n<h2 id=\"tcl语言\"><a class=\"markdownIt-Anchor\" href=\"#tcl语言\">#</a> TCL 语言</h2>\n<h2 id=\"视图\"><a class=\"markdownIt-Anchor\" href=\"#视图\">#</a> 视图</h2>\n<h2 id=\"存储过程和函数\"><a class=\"markdownIt-Anchor\" href=\"#存储过程和函数\">#</a> 存储过程和函数</h2>\n",
            "tags": [
                "学习笔记",
                "MySQL"
            ]
        }
    ]
}