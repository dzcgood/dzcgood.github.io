{
    "version": "https://jsonfeed.org/version/1",
    "title": "DzcGood • All posts by \"jdbc\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/12/23/JDBC/",
            "url": "http://example.com/2021/12/23/JDBC/",
            "title": "MySql安装及JDBC的使用",
            "date_published": "2021-12-22T17:41:57.000Z",
            "content_html": "<h1 id=\"mysql安装及jdbc的使用\"><a class=\"markdownIt-Anchor\" href=\"#mysql安装及jdbc的使用\">#</a> MySql 安装及 JDBC 的使用</h1>\n<h2 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\">#</a> 问题描述</h2>\n<ul>\n<li>在 Java 语言环境下，使用 ODBC 连接 MySQL 数据库，通过 SQL 语句完成对数据库的基本操作：创建数据表、插入数据、删除数据、修改数据、删除数据表、跨数据表操作</li>\n<li>实现额外功能：事务支持、索引支持、多用户（多客户端）同时访问数据库，记录它们的访问性能</li>\n<li>数据库内的初始数据至少有 5 个表格，至少共 100,000 条数据</li>\n</ul>\n<h2 id=\"环境\"><a class=\"markdownIt-Anchor\" href=\"#环境\">#</a> 环境</h2>\n<ul>\n<li>语言： <code>Java11</code></li>\n<li>开发环境： <code>IDEA 2021.1.1 x64</code></li>\n<li>数据库： <code>MySQL 8.0.26</code></li>\n<li>数据库部署环境： <code>CentOS Linux 8.2.2004</code></li>\n</ul>\n<h2 id=\"mysql环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#mysql环境搭建\">#</a> MySQL 环境搭建</h2>\n<p>首先使用 <code>wget</code>  命令获取 MySQL 安装包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205194455806.png\" alt=\"下载MySQL\"></p>\n<p>安装 MySQL 的依赖 <code>libaio库</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">yum install libaio<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205194728506.png\" alt=\"安装libaio库\"></p>\n<p>然后使用 <code>tar命令</code> 解压</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">tar -xvf mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205195059898.png\" alt=\"解压安装包\"></p>\n<p>将解压后的文件夹重命名为 <code>mysql</code> ，并且移动到 <code>/usr/local/</code>  目录下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">mv mysql-8.0.26-linux-glibc2.12-x86_64 /usr/local/mysql<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205195246696.png\" alt=\"移动\"></p>\n<p>创建存放数据库数据的文件夹  <code>data</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">cd /usr/local/mysql<br>mkdir data<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205195451681.png\" alt=\"创建data文件夹\"></p>\n<p>在 mysql 目录下新建  <code>tmp 文件夹</code> ，并修改文件夹的权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">mkdir tmp<br>chmod 777 /tmp<br></code></pre></div></td></tr></table></figure>\n<p>创建 <code>mysql用户组</code> 和 <code>mysql 用户</code> ，并且将 mysql 目录极其下面所有文件权限分配给 mysql 用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">groupadd mysql<br>useradd -g mysql mysql<br>chown -R mysql.mysql /usr/local/mysql/<br></code></pre></div></td></tr></table></figure>\n<p>进行数据库初始化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205200113298.png\" alt=\"初始化MySQL\"></p>\n<p>修改 mysql 的配置信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">vim /etc/my.cny<br><span class=\"hljs-meta\">#</span><span class=\"bash\"> 向配置文件中添加以下内容</span><br>[mysqld]<br>basedir=/usr/local/mysql   <br>datadir=/usr/local/mysql/data<br>socket=/usr/local/mysql/mysql.sock<br>character-set-server=utf8<br>port=3306<br>sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES<br>[client]<br>socket=/usr/local/mysql/mysql.sock<br>default-character-set=utf8<br></code></pre></div></td></tr></table></figure>\n<p>将 mysql 注册为服务，并检查是否注册成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">chkconfig --add mysql<br>chkconfig --list mysql<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205200919886.png\" alt=\"将mysql注册为服务\"></p>\n<p>启动服务，并查看服务状态</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">service mysql start<br>service mysql status<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205201113005.png\" alt=\"启动服务并查看状态\"></p>\n<p>将 <code>mysql命令</code> 软连接到 <code>/usr/bin</code>  用户执行目录下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">ln -s /usr/local/mysql/bin/mysql /usr/bin<br></code></pre></div></td></tr></table></figure>\n<p>连接 mysql 服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">mysql -uroot -p<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205201628974.png\" alt=\"连接mysql服务\"></p>\n<p>设置允许 root 用户远程连接</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\">USE mysql<br>UPDATE <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">SET</span> host <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;%&#x27;</span> <span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;root&#x27;</span>;<br># 刷新以立即生效<br>FLUSH PRIVILEGES;<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205202053132.png\" alt=\"设置允许root用户远程连接\"></p>\n<h2 id=\"使用的数据库说明\"><a class=\"markdownIt-Anchor\" href=\"#使用的数据库说明\">#</a> 使用的数据库说明</h2>\n<p>为了使得接下来的操作能够顺利进行，首先需要现在服务器端创建一个 database。</p>\n<h3 id=\"sql脚本\"><a class=\"markdownIt-Anchor\" href=\"#sql脚本\">#</a> SQL 脚本</h3>\n<p>首先执行 SQL 脚本（脚本内容见源码部分）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs shell\">mysql -uroot -p<br><span class=\"hljs-meta\">mysql&gt;</span><span class=\"bash\"> <span class=\"hljs-built_in\">source</span> /root/tools/MySQL/myemployees.sql</span><br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205214739140.png\" alt=\"执行脚本部分结果\"></p>\n<p>查看执行结果</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SHOW</span> DATABASES;<br>USE myemployees;<br><span class=\"hljs-keyword\">SHOW</span> TABLES;<br></code></pre></div></td></tr></table></figure>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205214958067.png\" alt=\"脚本执行结果\"></p>\n<p>可以看到创建了一个名为 <code>myemployees</code>  的数据库，其中包含五张表： <code>departments</code> ,  <code>employees</code> ,  <code>job_grades</code> ,  <code>jobs</code> ,  <code>locations</code> 。</p>\n<h3 id=\"数据库描述\"><a class=\"markdownIt-Anchor\" href=\"#数据库描述\">#</a> 数据库描述</h3>\n<p>这是一个关于企业员工信息管理的数据库，其中包含了部门信息，雇员信息，工作种类，收入等级，地点的信息，以下是各张表的字段描述：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205220201057.png\" alt=\"departments表结构\"></p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205220301808.png\" alt=\"employees表结构\"></p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205220348783.png\" alt=\"job_grades表结构\"></p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205220554836.png\" alt=\"jobs表结构\"></p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205220659359.png\" alt=\"locations表结构\"></p>\n<h2 id=\"使用客户机访问mysql\"><a class=\"markdownIt-Anchor\" href=\"#使用客户机访问mysql\">#</a> 使用客户机访问 MySQL</h2>\n<p>选择使用 MySQL 官方提供的 <code>mysql-connector-j</code>  来连接 MySQL，需要在 maven 中添加以下依赖：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>8.0.26<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></div></td></tr></table></figure>\n<p>一共创建了两个类</p>\n<ul>\n<li>第一个类是 <code>MySqlOperation</code> ，其中封装了建立连接，增删改查等操作</li>\n<li>第二个类是 <code>ConnectionTest</code>  用于测试各类操作</li>\n</ul>\n<p>以下是建立连接和释放连接的函数，其作用分别是创建连接释放连接：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.sql.Connection;<br><span class=\"hljs-keyword\">import</span> java.sql.DriverManager;<br><span class=\"hljs-keyword\">import</span> java.sql.SQLException;<br><span class=\"hljs-keyword\">import</span> java.sql.Statement;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> DzcGood</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2021/12/5 - 21:00</span><br><span class=\"hljs-comment\"> *</span><br><span class=\"hljs-comment\"> * 此类提供有关数据库的各项操作，包括获取数据库连接对象，增删改查等各项操作</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MySqlOperation</span> </span>&#123;<br>    <span class=\"hljs-comment\">/**数据库连接对象*/</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> Connection con = <span class=\"hljs-keyword\">null</span>;<br><br>    <span class=\"hljs-comment\">/**Statement类对象*/</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> Statement stmt = <span class=\"hljs-keyword\">null</span>;<br><br>    <span class=\"hljs-comment\">/**JDBC驱动名及数据库URL*/</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String JDBC_DRIVER = <span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String DB_URL = <span class=\"hljs-string\">&quot;jdbc:mysql://59.110.238.134:3306/&quot;</span> +<br>            <span class=\"hljs-string\">&quot;myemployees?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC&quot;</span>;<br><br>    <span class=\"hljs-comment\">/**数据库的用户名与密码，需要根据自己的设置*/</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String USER = <span class=\"hljs-string\">&quot;root&quot;</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String PASSWORD = <span class=\"hljs-string\">&quot;wodeQfeima110&quot;</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 用于创建数据库连接</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getConnection</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-comment\">//注册JDBC驱动</span><br>            Class.forName(JDBC_DRIVER);<br>            <span class=\"hljs-comment\">//建立连接</span><br>            System.out.println(<span class=\"hljs-string\">&quot;正在连接数据库……&quot;</span>);<br>            con = DriverManager.getConnection(DB_URL, USER, PASSWORD);<br>            <span class=\"hljs-comment\">//获取Statement对象</span><br>            stmt = con.createStatement();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (con != <span class=\"hljs-keyword\">null</span>) &#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;连接创建成功！&quot;</span>);<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;连接创建失败！&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 关闭数据库连接</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">closeConnection</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-keyword\">if</span> (con != <span class=\"hljs-keyword\">null</span>) &#123;<br>            <span class=\"hljs-keyword\">try</span> &#123;<br>                System.out.println(<span class=\"hljs-string\">&quot;正在关闭连接……&quot;</span>);<br>                con.close();<br>                System.out.println(<span class=\"hljs-string\">&quot;连接已关闭！Catch you later~&quot;</span>);<br>            &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>                throwables.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n<p>接下来编写测试函数进行连接，测试是否连接成功</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">  *测试能否正常连接服务端数据库</span><br><span class=\"hljs-comment\">  */</span><br><span class=\"hljs-meta\">@Test</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">connect</span><span class=\"hljs-params\">()</span></span>&#123;<br>    MySqlOperation.getConnection();<br>    MySqlOperation.closeConnection();<br>&#125;<br></code></pre></div></td></tr></table></figure>\n<p>运行结果如下：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205225231564.png\" alt=\"连接测试\"></p>\n<h2 id=\"数据库基本操作\"><a class=\"markdownIt-Anchor\" href=\"#数据库基本操作\">#</a> 数据库基本操作</h2>\n<p>在 <code>MySqlOperation类</code> 中添加执行更新相关、查询相关的 sql 语句的函数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">  * 执行更新相关的SQL语句</span><br><span class=\"hljs-comment\">  * <span class=\"hljs-doctag\">@param</span> sql 要执行的SQL语句</span><br><span class=\"hljs-comment\">  * */</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">executeUpdate</span><span class=\"hljs-params\">(String sql)</span></span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (stmt != <span class=\"hljs-keyword\">null</span>) &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            stmt.executeUpdate(sql);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">  * 执行查询相关的SQL语句</span><br><span class=\"hljs-comment\">  * <span class=\"hljs-doctag\">@param</span> sql 要执行的SQL语句</span><br><span class=\"hljs-comment\">  * */</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> ResultSet <span class=\"hljs-title\">executeQuery</span><span class=\"hljs-params\">(String sql)</span></span>&#123;<br>    ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">if</span> (stmt != <span class=\"hljs-keyword\">null</span>) &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            rs = stmt.executeQuery(sql);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> rs;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n<h3 id=\"创建数据表\"><a class=\"markdownIt-Anchor\" href=\"#创建数据表\">#</a> 创建数据表</h3>\n<p>此过程中，将创建一个名为 boys 的表格，其中记录了 <code>id</code>  和 <code>name</code></p>\n<p><code>ConnectionTest类</code> 中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 测试能否正常创建表格</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">createTableTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//将创建一个名为boys的表格，其中记录了`id`和`name`</span><br>        <span class=\"hljs-comment\">//先查询原有的表格</span><br>        MySqlOperation.getConnection();<br>        String sql1 = <span class=\"hljs-string\">&quot;show tables;&quot;</span>;<br>        ResultSet rs = MySqlOperation.executeQuery(sql1);<br>        System.out.print(<span class=\"hljs-string\">&quot;现有的表如下：&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                System.out.print(rs.getString(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;, &quot;</span>);<br>            &#125;<br>            System.out.println();<br>            <span class=\"hljs-comment\">//新建一个表格</span><br>            String sql2 = <span class=\"hljs-string\">&quot;create table boys(id INT, name varchar(20));&quot;</span>;<br>            MySqlOperation.executeUpdate(sql2);<br>            <span class=\"hljs-comment\">//查询执行新建后的表格</span><br>            rs = MySqlOperation.executeQuery(sql1);<br>            System.out.print(<span class=\"hljs-string\">&quot;新建表格后，现有的表如下：&quot;</span>);<br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                System.out.print(rs.getString(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;, &quot;</span>);<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        System.out.println();<br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205233209004.png\" alt=\"创建数据表执行结果\"></p>\n<p>在服务机中查询表格，可见新增了一个名为 <code>boys</code>  的表格，说明执行正确</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211205233421266.png\" alt=\"服务器中查询结果\"></p>\n<h3 id=\"插入数据\"><a class=\"markdownIt-Anchor\" href=\"#插入数据\">#</a> 插入数据</h3>\n<p>先执行以下脚本，其功能是随机生成 100000 条数据，并插入到 boys 表中（执行时间略长）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs sql\">USE myemployees;<br>DELIMITER $<br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">PROCEDURE</span> insert_values()<br><span class=\"hljs-keyword\">BEGIN</span> <br>\t# 计数器<br>\t<span class=\"hljs-keyword\">DECLARE</span> i <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">1</span>;<br>\t# 接下来随机生成一个名字串，名字长度为<span class=\"hljs-number\">6</span>位<br>\t<span class=\"hljs-keyword\">DECLARE</span> str <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">6</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>\t<span class=\"hljs-keyword\">DECLARE</span> j <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">DECLARE</span> const_str <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">52</span>) <span class=\"hljs-keyword\">DEFAULT</span> &quot;abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;; <br>\ttag1: WHILE i <span class=\"hljs-operator\">&lt;=</span> <span class=\"hljs-number\">100000</span> DO<br>\t\t<span class=\"hljs-keyword\">SET</span> str <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>\t\t<span class=\"hljs-keyword\">SET</span> j <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br>\t\ttag2: WHILE j <span class=\"hljs-operator\">&lt;=</span> <span class=\"hljs-number\">6</span> DO<br>\t\t\t# 每次随机生成一个字母并添加到str中<br>\t\t\t<span class=\"hljs-keyword\">SET</span> str <span class=\"hljs-operator\">=</span> CONCAT(str, SUBSTR(const_str, RAND()<span class=\"hljs-operator\">*</span><span class=\"hljs-number\">52</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>));<br>\t\t\t<span class=\"hljs-keyword\">SET</span> j <span class=\"hljs-operator\">=</span> j <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span>;<br>\t\t<span class=\"hljs-keyword\">END</span> WHILE tag2;<br>\t\t<span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> boys <span class=\"hljs-keyword\">VALUES</span>(i, str);<br>\t\t<span class=\"hljs-keyword\">SET</span> i <span class=\"hljs-operator\">=</span> i <span class=\"hljs-operator\">+</span> <span class=\"hljs-number\">1</span>;<br>\t<span class=\"hljs-keyword\">END</span> WHILE tag1;<br>\t\t<br><span class=\"hljs-keyword\">END</span> $<br>DELIMITER ;<br><br><span class=\"hljs-keyword\">CALL</span> insert_values();<br></code></pre></div></td></tr></table></figure>\n<p>接下来，试着在新增的 <code>boys</code>  表中插入数据，就插入我的学号和姓名吧</p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 在新增的`boys`表中插入数据(20192121026, DengZhiChao)</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">insertTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//创建连接</span><br>        MySqlOperation.getConnection();<br>        <span class=\"hljs-comment\">//插入前有几条数据</span><br>        ResultSet rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select count(*) from boys;&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            rs.next();<br>            System.out.println(<span class=\"hljs-string\">&quot;插入前，boys表中有&quot;</span> + rs.getInt(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;条数据&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//编写SQL语句，因为学号20192121026超过int范围了所以改成2121026</span><br>        String sql = <span class=\"hljs-string\">&quot;insert into boys values(2121026,\\&quot;DengZhiChao\\&quot;);&quot;</span>;<br>        <span class=\"hljs-comment\">//调用MySqlOperation中的方法</span><br>        MySqlOperation.executeUpdate(sql);<br>        <span class=\"hljs-comment\">//验证结果，插入后有几条数据</span><br>        rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select count(*) from boys;&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            rs.next();<br>            System.out.println(<span class=\"hljs-string\">&quot;插入后，boys表中有&quot;</span> + rs.getInt(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;条数据&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//释放连接</span><br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206010511434.png\" alt=\"插入数据执行结果\"></p>\n<p>在服务机中查询表格中的所有值，可见新增了一条值为 <code>(2121026, 'DengZhiChao')</code>  的记录，说明插入成功</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206010700732.png\" alt=\"服务器查询插入结果\"></p>\n<h3 id=\"修改数据\"><a class=\"markdownIt-Anchor\" href=\"#修改数据\">#</a> 修改数据</h3>\n<p>接下来，把刚才插入的数据 <code>(2121026, 'DengZhiChao')</code>  改成 <code>(2121026, 'DzcGood')</code></p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 把刚才插入的数据`(2121026, &#x27;DengZhiChao&#x27;)`改成`(2121026, &#x27;DzcGood&#x27;)`</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">modifyTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//建立连接</span><br>        MySqlOperation.getConnection();<br>        <span class=\"hljs-comment\">//编写SQL语句</span><br>        String sql = <span class=\"hljs-string\">&quot;update boys set name = \\&quot;DzcGood\\&quot; where id = 2121026;&quot;</span>;<br>        <span class=\"hljs-comment\">//调用MySqlOperation中的方法</span><br>        MySqlOperation.executeUpdate(sql);<br>        <span class=\"hljs-comment\">//验证结果</span><br>        System.out.print(<span class=\"hljs-string\">&quot;执行修改数据后，boys表中id为2121026对应的name为：&quot;</span>);<br>        ResultSet rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select name from boys where id = 2121026;&quot;</span>);<br>        <span class=\"hljs-comment\">//输出结果</span><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                System.out.println(rs.getString(<span class=\"hljs-string\">&quot;name&quot;</span>));<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//释放连接</span><br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206010911525.png\" alt=\"修改数据执行结果\"></p>\n<p>在服务机中查询表格中的所有值，可见学号 <code>2121026</code>  对应的 <code>name</code>  值为 <code>DzcGood</code> ，说明修改成功</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206011005937.png\" alt=\"服务器查询修改结果\"></p>\n<h3 id=\"删除数据\"><a class=\"markdownIt-Anchor\" href=\"#删除数据\">#</a> 删除数据</h3>\n<p>接下来将数据 <code>(2121026, 'DzcGood')</code>  从 <code>boys表</code> 中删除</p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     *将数据`(2121026, &#x27;DzcGood&#x27;)`从`boys表`中删除</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deleteTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//建立连接</span><br>        MySqlOperation.getConnection();<br>        <span class=\"hljs-comment\">//删除前有几条数据</span><br>        ResultSet rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select count(*) from boys;&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            rs.next();<br>            System.out.println(<span class=\"hljs-string\">&quot;删除前，boys表中有&quot;</span> + rs.getInt(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;条数据&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//编写SQL语句</span><br>        String sql = <span class=\"hljs-string\">&quot;delete from boys where id = 2121026;&quot;</span>;<br>        <span class=\"hljs-comment\">//调用MySqlOperation中的方法</span><br>        MySqlOperation.executeUpdate(sql);<br>        <span class=\"hljs-comment\">//验证结果，删除后有几条数据</span><br>        rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select count(*) from boys;&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            rs.next();<br>            System.out.println(<span class=\"hljs-string\">&quot;执行修改数据后，boys表中还有&quot;</span> + rs.getInt(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;条数据&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//释放连接</span><br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206011216013.png\" alt=\"删除数据执行结果\"></p>\n<p>在服务器中查询 <code>id</code>  为 <code>2121026</code>  的行数量，发现查询到的数量为 <code>0</code> ，说明删除成功</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206011429427.png\" alt=\"服务器查询删除结果\"></p>\n<h3 id=\"删除数据表\"><a class=\"markdownIt-Anchor\" href=\"#删除数据表\">#</a> 删除数据表</h3>\n<p>接下来将 <code>boys表</code> 删除</p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 删除表格boys</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dropTableTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//先查询原有的表格</span><br>        MySqlOperation.getConnection();<br>        String sql1 = <span class=\"hljs-string\">&quot;show tables;&quot;</span>;<br>        ResultSet rs = MySqlOperation.executeQuery(sql1);<br>        System.out.print(<span class=\"hljs-string\">&quot;现有的表如下：&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                System.out.print(rs.getString(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;, &quot;</span>);<br>            &#125;<br>            System.out.println();<br>            <span class=\"hljs-comment\">//删除表格boys</span><br>            String sql2 = <span class=\"hljs-string\">&quot;drop table if exists boys;&quot;</span>;<br>            MySqlOperation.executeUpdate(sql2);<br>            <span class=\"hljs-comment\">//查询删除boys表格后的表格</span><br>            rs = MySqlOperation.executeQuery(sql1);<br>            System.out.print(<span class=\"hljs-string\">&quot;删除表格后，现有的表如下：&quot;</span>);<br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                System.out.print(rs.getString(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;, &quot;</span>);<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        System.out.println();<br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206012019341.png\" alt=\"删除表格执行结果\"></p>\n<p>在服务器中执行 <code>show tables;</code>  命令，可以看到， <code>boys</code>  表格已经不存在了</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206012210523.png\" alt=\"服务器查询删除表格结果\"></p>\n<h3 id=\"跨数据表操作\"><a class=\"markdownIt-Anchor\" href=\"#跨数据表操作\">#</a> 跨数据表操作</h3>\n<p>以 <code>join</code>  为例，查询每个 <code>department</code>  对应的 <code>manager</code>  姓名，这里需要用到 <code>departments</code>  和 <code>employees</code>  两张表</p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     *查询每个`department`对应的`manager`姓名，这里需要用到`departments`和`employees`两张表</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">joinTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//建立连接</span><br>        MySqlOperation.getConnection();<br>        <span class=\"hljs-comment\">//编写sql语句</span><br>        String sql = <span class=\"hljs-string\">&quot;SELECT d.department_name, e.last_name FROM departments AS d &quot;</span> +<br>                <span class=\"hljs-string\">&quot;INNER JOIN employees AS e ON d.manager_id = e.employee_id;&quot;</span>;<br>        <span class=\"hljs-comment\">//调用MySqlOperation的方法</span><br>        ResultSet rs = MySqlOperation.executeQuery(sql);<br>        <span class=\"hljs-comment\">//输出结果</span><br>        System.out.println(<span class=\"hljs-string\">&quot;department_name manager_name&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                System.out.print(rs.getString(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot; &quot;</span>);<br>                System.out.println(rs.getString(<span class=\"hljs-number\">2</span>));<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//释放连接</span><br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206013341304.png\" alt=\"join操作执行结果\"></p>\n<h2 id=\"额外功能\"><a class=\"markdownIt-Anchor\" href=\"#额外功能\">#</a> 额外功能</h2>\n<h3 id=\"事务\"><a class=\"markdownIt-Anchor\" href=\"#事务\">#</a> 事务</h3>\n<p>设置 <code>autocommit = 0</code>  后，向 <code>job_grades</code>  表中插入一条数据，然后将其回滚</p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 事务测试</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">transactionTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//建立连接</span><br>        MySqlOperation.getConnection();<br>        <span class=\"hljs-comment\">//设置autocommit</span><br>        MySqlOperation.setAutoCommit(<span class=\"hljs-keyword\">false</span>);<br>        <span class=\"hljs-comment\">//插入数据</span><br>        MySqlOperation.executeUpdate(<span class=\"hljs-string\">&quot;insert into job_grades values(&#x27;G&#x27;, 40001, 50000);&quot;</span>);<br>        <span class=\"hljs-comment\">//查询数据条数</span><br>        ResultSet rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select count(*) from job_grades;&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-comment\">//输出</span><br>            rs.next();<br>            System.out.println(<span class=\"hljs-string\">&quot;插入后，job_grades表共有&quot;</span> + rs.getInt(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;条数据&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//回滚</span><br>        System.out.println(<span class=\"hljs-string\">&quot;开始回滚……&quot;</span>);<br>        MySqlOperation.rollback();<br>        <span class=\"hljs-comment\">//查询数据条数</span><br>        rs = MySqlOperation.executeQuery(<span class=\"hljs-string\">&quot;select count(*) from job_grades;&quot;</span>);<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-comment\">//输出</span><br>            rs.next();<br>            System.out.println(<span class=\"hljs-string\">&quot;回滚，job_grades表共有&quot;</span> + rs.getInt(<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&quot;条数据&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-comment\">//释放连接</span><br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p><code>MySqlOperation</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 设置autocommit</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> b autocommit的值</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setAutoCommit</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">boolean</span> b)</span></span>&#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            con.setAutoCommit(b);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>    &#125;<br>    <br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 回滚</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">rollback</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            con.rollback();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206090530564.png\" alt=\"事务执行结果\"></p>\n<p>在服务器端查询 <code>job_grades</code>  表中的数据条数，结果是 <code>6</code>  条，说明插入操作已被回滚</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206090930886.png\" alt=\"服务器查询事务执行结果\"></p>\n<h3 id=\"索引\"><a class=\"markdownIt-Anchor\" href=\"#索引\">#</a> 索引</h3>\n<p>为了让索引的效果更明显，把 <code>boys</code>  表再次生成一下，可以看到，有一条值为 <code>(98000, 'XSyOwT')</code>  的数据，接下来，通过对比创建索引前和创建索引后查询到这条数据的时间来验证索引的效果</p>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 对boys表创建索引，对比使用索引前和使用索引后的效率差别</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">indexTest</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//建立连接</span><br>        MySqlOperation.getConnection();<br>        String sql = <span class=\"hljs-string\">&quot;select * from boys where id = 98000;&quot;</span>;<br>        System.out.println(<span class=\"hljs-string\">&quot;查询id值为98000的数据……&quot;</span>);<br>        <span class=\"hljs-keyword\">long</span> before = System.currentTimeMillis();<br>        MySqlOperation.executeQuery(sql);<br>        <span class=\"hljs-keyword\">long</span> after = System.currentTimeMillis();<br>        System.out.println(<span class=\"hljs-string\">&quot;创建索引前，耗时&quot;</span> + (after - before) + <span class=\"hljs-string\">&quot;ms&quot;</span>);<br>        <span class=\"hljs-comment\">//创建索引</span><br>        MySqlOperation.executeUpdate(<span class=\"hljs-string\">&quot;alter table boys add index index_test(id);&quot;</span>);<br>        System.out.println(<span class=\"hljs-string\">&quot;创建索引后再次查询id值为98000的数据……&quot;</span>);<br>        <span class=\"hljs-comment\">//再次查询</span><br>        before = System.currentTimeMillis();<br>        MySqlOperation.executeQuery(sql);<br>        after = System.currentTimeMillis();<br>        System.out.println(<span class=\"hljs-string\">&quot;创建索引后，耗时&quot;</span> + (after - before) + <span class=\"hljs-string\">&quot;ms&quot;</span>);<br>        <span class=\"hljs-comment\">//释放连接</span><br>        MySqlOperation.closeConnection();<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>执行结果：<br>\n创建索引前，耗时 258ms，创建索引后，耗时 71ms，效率提升还是很明显的。</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206095242655.png\" alt=\"索引执行结果\"></p>\n<h3 id=\"多用户\"><a class=\"markdownIt-Anchor\" href=\"#多用户\">#</a> 多用户</h3>\n<p>创建多个线程，每个线程创建一个 mysql 连接，分别对 <code>boys</code>  表执行查询操作，并记录每个线程所用的时间</p>\n<p><code>MySqlOperation</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 创建size个连接对象，并返回</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Connection[] getConnections(<span class=\"hljs-keyword\">int</span> size) &#123;<br>        Connection[] cons = <span class=\"hljs-keyword\">new</span> Connection[size];<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-comment\">//注册JDBC驱动</span><br>            Class.forName(JDBC_DRIVER);<br>            <span class=\"hljs-comment\">//建立连接</span><br>            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; size; i++) &#123;<br>                cons[i] = DriverManager.getConnection(DB_URL, USER, PASSWORD);<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> cons;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p><code>ConnectionTest</code>  类中的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 测试多用户执行效率</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span></span>&#123;<br>        <span class=\"hljs-comment\">//创建100个连接对象</span><br>        <span class=\"hljs-keyword\">final</span> Connection[] cons = MySqlOperation.getConnections(<span class=\"hljs-number\">10</span>);<br>        <span class=\"hljs-comment\">//存储用时</span><br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span>[] time = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">long</span>[<span class=\"hljs-number\">100</span>];<br>        <span class=\"hljs-comment\">//编写查询语句</span><br>        <span class=\"hljs-keyword\">final</span> String sql = <span class=\"hljs-string\">&quot;select * from boys where id = &quot;</span>;<br>        <span class=\"hljs-comment\">//开启100个线程</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; cons.length; i++) &#123;<br>            <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">int</span> temp = i;<br>            Thread thread = <span class=\"hljs-keyword\">new</span> Thread(<span class=\"hljs-keyword\">new</span> Runnable() &#123;<br>                <span class=\"hljs-meta\">@Override</span><br>                <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">()</span> </span>&#123;<br>                    <span class=\"hljs-comment\">//统计用时</span><br>                    <span class=\"hljs-keyword\">long</span> before = System.currentTimeMillis();<br>                    <span class=\"hljs-comment\">//查询98000，98001，98002……</span><br>                    <span class=\"hljs-keyword\">try</span> &#123;<br>                        cons[temp].createStatement().executeQuery(sql + (<span class=\"hljs-number\">98000</span> + temp) + <span class=\"hljs-string\">&quot;;&quot;</span>);<br>                        <span class=\"hljs-keyword\">long</span> after = System.currentTimeMillis();<br>                        time[temp] = after - before;<br>                        System.out.println(<span class=\"hljs-string\">&quot;线程&quot;</span> + temp +<span class=\"hljs-string\">&quot;耗时&quot;</span> + time[temp] + <span class=\"hljs-string\">&quot;ms&quot;</span>);<br>                        <span class=\"hljs-comment\">//关闭连接</span><br>                        cons[temp].close();<br>                    &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>                        throwables.printStackTrace();<br>                    &#125;<br>                &#125;<br>            &#125;);<br>            thread.start();<br>        &#125;<br>    &#125;<br></code></pre></div></td></tr></table></figure>\n<p>当用户数量为 <code>10</code>  名时，平均耗时 <code>140ms</code>  左右，当用户数量增加到 <code>100名</code> 时，平均耗时就增加到了 <code>200ms</code>  左右</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206110036245.png\" alt=\"用户数为10\"></p>\n<p>用户数 100 执行结果：</p>\n<p><img src=\"https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211206105452319.png\" alt=\"用户数为100\"></p>\n",
            "tags": [
                "学习笔记",
                "MySql",
                "JDBC"
            ]
        }
    ]
}