<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>DzcGood • Posts by &#34;面向offer学习记录&#34; category</title>
    <link href="http://example.com" />
    <updated>2021-12-22T17:41:57.000Z</updated>
    <category term="leetcode" />
    <category term="数组" />
    <category term="二分查找" />
    <category term="编译原理" />
    <category term="SCNU-CS" />
    <category term="Linux" />
    <category term="锁" />
    <category term="MySQL" />
    <category term="学习笔记" />
    <category term="Redis" />
    <category term="Jedis" />
    <category term="JavaSE" />
    <category term="XLEX" />
    <category term="MySql" />
    <category term="JDBC" />
    <entry>
        <id>http://example.com/2021/12/23/JDBC/</id>
        <title>MySql安装及JDBC的使用</title>
        <link rel="alternate" href="http://example.com/2021/12/23/JDBC/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;094ba7de4431489e83f1dcf0128c46a937e7069ead0fcb6a682608293c8b2ff4&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-shrink&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-shrink&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-shrink&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-shrink&#34;&gt;您好, 这里需要密码，如果你确实想看，可以联系我&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="学习笔记" />
        <category term="MySql" />
        <category term="JDBC" />
        <updated>2021-12-22T17:41:57.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/11/29/Redis/</id>
        <title>使用Jedis连接Redis</title>
        <link rel="alternate" href="http://example.com/2021/11/29/Redis/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;9117cd013302f62772042a8f8a86f0355a2d2b79f061f4862d3326ed8be1883c&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-shrink&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-shrink&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-shrink&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-shrink&#34;&gt;您好, 这里需要密码，如果你确实想看，可以联系我&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="学习笔记" />
        <category term="Redis" />
        <category term="Jedis" />
        <updated>2021-11-28T16:20:35.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/11/06/MySQL/</id>
        <title>MySQL基础</title>
        <link rel="alternate" href="http://example.com/2021/11/06/MySQL/"/>
        <content type="html">&lt;h1 id=&#34;mysql学习记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql学习记录&#34;&gt;#&lt;/a&gt; MySQL 学习记录&lt;/h1&gt;
&lt;h2 id=&#34;服务的启动与关闭&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务的启动与关闭&#34;&gt;#&lt;/a&gt; 服务的启动与关闭&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;启动：net start 服务名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭：net stop 服务名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;服务端的登录和退出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务端的登录和退出&#34;&gt;#&lt;/a&gt; 服务端的登录和退出&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方法一：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;登录&lt;/strong&gt;：打开 MySQL 8.0 Command Line Client，输入密码即可。这种方式只能是 root 用户使用，不推荐&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;退出&lt;/strong&gt;：exit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法二：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;登录&lt;/strong&gt;：通过 windows cmd 输入指令 mysql -h 服务器 ip -P 端口号 -u 用户 -p 密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;例如&lt;/strong&gt;： mysql -h localhost -P 3306 -u root -p 123456&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：-p 和空格之间&lt;strong&gt;不能有空格&lt;/strong&gt; 如果是本机登录，则 - h，-P 可以省略&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;退出&lt;/strong&gt;：exit&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见命令&#34;&gt;#&lt;/a&gt; 常见命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看当前所有数据库：&lt;mark&gt;&lt;em&gt;show databases;&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开指定的库：&lt;mark&gt;&lt;em&gt;use 库名；&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看当前库所有表：&lt;mark&gt;&lt;em&gt;show tables;&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看其他库所有表：&lt;mark&gt;&lt;em&gt;show tables from 库名；&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建表：&lt;em&gt;create table 表名 (&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​				&lt;em&gt;列名 列类型，&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​				&lt;em&gt;列名 列类型，&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​				&lt;em&gt;…&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;em&gt;);&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看表结构：&lt;mark&gt;&lt;em&gt;desc 表名；&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看服务器版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式一：&lt;/p&gt;
&lt;p&gt;登录到 mysql 服务端后，select version ();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式二：&lt;/p&gt;
&lt;p&gt;windows cmd 输入 ==&lt;em&gt;mysql --version&lt;/em&gt;&lt;mark&gt; 或&lt;/mark&gt;&lt;em&gt; mysql -V&lt;/em&gt;==&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mysql的语法规范&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql的语法规范&#34;&gt;#&lt;/a&gt; MySQL 的语法规范&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;不区分&lt;/strong&gt;&lt;/em&gt;大小写，但建议关键字大写，表名和列名小写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每条命令最好用分号结尾&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每条命令根据需要，可以进行&lt;em&gt;&lt;strong&gt;缩进或换行&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注释&lt;/p&gt;
&lt;p&gt;单行注释：# 注释文字&lt;/p&gt;
&lt;p&gt;单行注释：-- 注释文字（注意‘–’后必须有空格）&lt;/p&gt;
&lt;p&gt;多行注释：/* 注释文字 */&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dql语言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dql语言&#34;&gt;#&lt;/a&gt; DQL 语言&lt;/h2&gt;
&lt;h3 id=&#34;基础查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础查询&#34;&gt;#&lt;/a&gt; 基础查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法：SELECT 查询列表 FROM 表名；&lt;/li&gt;
&lt;li&gt;查询列表可以是：表中的字段&lt;/li&gt;
&lt;li&gt;查询的结果是一个虚拟的表格&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字符型&lt;/strong&gt;和&lt;strong&gt;日期型&lt;/strong&gt;的常量值必须用&lt;strong&gt;引号&lt;/strong&gt;引起来&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;举例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#举例&#34;&gt;#&lt;/a&gt; 举例&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 查询单个字段&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# 查询多个字段&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name, salary, email &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# 查询所有字段&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# 查询常量&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;;&lt;br&gt;# 查询表达式&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;98&lt;/span&gt;;&lt;br&gt;# 查询函数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; VERSION();&lt;br&gt;# 为字段起别名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; 姓, first_name &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; 名 &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees; # 方式一&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name 姓, first_name 名 &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees; # 方式二&lt;br&gt;# 特殊情况：查询salary，显示结果为&lt;span class=&#34;hljs-keyword&#34;&gt;out&lt;/span&gt; put&lt;br&gt;# 有特殊符号的，建议加上双引号&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &amp;quot;out put&amp;quot; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# 去重&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; department_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/* &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	&amp;#x27;+&amp;#x27;号的作用，在MySQL中，&amp;#x27;+&amp;#x27;只有加法运算的作用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	SELECT &amp;#x27;123&amp;#x27; + 90:如果出现字符型，试图转换成数值型，转换成功则继续做加法；转换失败，就会把字符型看成0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	SELECT &amp;#x27;John&amp;#x27; + 90 结果是90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	SELECT NULL + 90 只要出现NULL，结果一定是NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# CONCAT()函数&lt;br&gt;# 案例：查询员工姓名连接成一个字段，并显示为&amp;quot;姓名&amp;quot;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; CONCAT(last_name, first_name) &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; 姓名 &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# IFNULL函数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; IFNULL(exp1, exp2) # 如果exp1为空，就返回exp2；否则返回exp1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;条件查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#条件查询&#34;&gt;#&lt;/a&gt; 条件查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法：SELECT 查询列表 FROM 表名 WHERE 筛选条件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;筛选条件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;条件表达式： &amp;gt;  &amp;lt;=  !=  &amp;lt;&amp;gt;  &amp;gt;=  &amp;lt;=&lt;/li&gt;
&lt;li&gt;逻辑表达式：&amp;amp;&amp;amp;，||，!，and，or，not&lt;/li&gt;
&lt;li&gt;模糊查询：like，between and，not between and，in，is null,，is not null&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;举例-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#举例-2&#34;&gt;#&lt;/a&gt; 举例&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;********************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;				条件表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;********************************************			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 查询员工工资大于&lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt;的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;********************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;				逻辑表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;********************************************			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 查询工资在&lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt;到&lt;span class=&#34;hljs-number&#34;&gt;20000&lt;/span&gt;之间的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;20000&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;********************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;				模糊查询&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;********************************************			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	模糊查询：LIKE，一般和通配符配合使用。不但可以查字符型，也可以查数值型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	&amp;#x27;%&amp;#x27;代表0或n个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	&amp;#x27;_&amp;#x27;代表一个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	\_代表转义字符&amp;#x27;_&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 查询员工名中包含&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; first_name &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%a%&amp;#x27;&lt;/span&gt;;&lt;br&gt;# 查询员工名第三个字符为&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;，第五个字符为&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;e&amp;#x27;&lt;/span&gt;的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; first_name &lt;span class=&#34;hljs-keyword&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;__a_e%&amp;#x27;&lt;/span&gt;&lt;br&gt;# 查询员工名第三个字符为&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt;的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; first_name &lt;span class=&#34;hljs-keyword&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;_\_%&amp;#x27;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; first_name &lt;span class=&#34;hljs-keyword&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;_$_%&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;ESCAPE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;$&amp;#x27;&lt;/span&gt;; # 这里表示&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;$&amp;#x27;&lt;/span&gt;是转义字符，推荐使用这种&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	BETWEEN a AND b 的区间是闭区间[a,b]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	b必须&amp;gt;=a，否则筛选出来的结果是0条&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 查询工资在&lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt;到&lt;span class=&#34;hljs-number&#34;&gt;20000&lt;/span&gt;之间的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;BETWEEN&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;20000&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	IN列表的值类型必须一致或兼容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	不支持通配符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 查询员工的工种编号是IT_PROG, AD_VP, AD_PRES中的一个的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; job_id &lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; (&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;IT_PROG&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;AD_VP&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;AD_PRES&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	&amp;#x27;=&amp;#x27;不能用于判断NULL值，要使用IS NULL或IS NOT NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 查询没有奖金的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; commission_pac &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;# 必须写成&lt;span class=&#34;hljs-keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;，不能写成 &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;&lt;br&gt;# 查询有奖金的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; commission_pac &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;# 必须写成&lt;span class=&#34;hljs-keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;，不能写成 &lt;span class=&#34;hljs-operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;&lt;br&gt;# 安全等于&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;&amp;lt;=&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt; 可以写成&lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;&lt;br&gt;# 查询工资为&lt;span class=&#34;hljs-number&#34;&gt;12000&lt;/span&gt;的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;12000&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	IS NULL只能判断NULL值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	&amp;lt;=&amp;gt; 既可以判断NULL值，也可以判断普通的数值，但可读性较低&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# ISNULL(expr)如果expr是&lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;，就返回&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;，否则返回&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; ISNULL(commission_pac) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;一个坑&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一个坑&#34;&gt;#&lt;/a&gt; 一个坑&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问&lt;/strong&gt;：SELECT * FROM employees 和 SELECT * FROM employees WHERE first_name LIKE ‘%%’ AND last_name LIKE &#39;%%&#39; 效果一样吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答&lt;/strong&gt;：不一样，如果 first_name 或 last_name 中包含 NULL 值，则不一样。因为 NULL LIKE ’%%‘是错的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;排序查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排序查询&#34;&gt;#&lt;/a&gt; 排序查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法：SELECT 查询列表 FROM 表名 [WHERE 子句] ORDER BY 排序列表 [asc | desc]；&lt;/li&gt;
&lt;li&gt;默认是从小到大排序&lt;/li&gt;
&lt;li&gt;如果排序列表有多个，则优先按写在前面的排序列表排序。对每个排序列表，可以分别指定是升序或者降序&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;举例-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#举例-3&#34;&gt;#&lt;/a&gt; 举例&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 查询员工信息，要求工资从高到低排序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;;&lt;br&gt;# 查询员工信息，要求工资从低到高排序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;DESC&lt;/span&gt;;&lt;br&gt;# 查询部门编号大于等于&lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt;的员工信息，要求按入职时间从小到大排序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; department_id &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; hire_date &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;;&lt;br&gt;# 按年薪的高低显示员工信息（按表达式排序）&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; (&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; IFNULL(commision_pac, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)) &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;;&lt;br&gt;# 按姓的长度显示员工信息（按函数排序）&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; LENGTH(last_name) &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;;&lt;br&gt;# 查询员工信息，按照工资排序，若工资相同，则按员工编号排序（多个字段排序）&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;, employee_id &lt;span class=&#34;hljs-keyword&#34;&gt;DESC&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;常见函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见函数&#34;&gt;#&lt;/a&gt; 常见函数&lt;/h3&gt;
&lt;p&gt;语法：SELECT 函数名 () [FROM 表]；&lt;/p&gt;
&lt;p&gt;分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单行函数&lt;/li&gt;
&lt;li&gt;分组函数：用作统计用，输入多个数据，输出一个数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;字符函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符函数&#34;&gt;#&lt;/a&gt; 字符函数&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;#&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;、LENGTH()：用于获取参数值的字节个数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; LENGTH(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; LENGTH(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;张三丰hahaha&amp;#x27;&lt;/span&gt;); # utf&lt;span class=&#34;hljs-number&#34;&gt;-8&lt;/span&gt;中一个汉字占&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;个字节&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;、CONCAT（）：拼接字符串&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; CONCAT(first_name, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt;, last_name) &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; 姓名 &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;#&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;、&lt;span class=&#34;hljs-built_in&#34;&gt;UPPER&lt;/span&gt;(),&lt;span class=&#34;hljs-built_in&#34;&gt;LOWER&lt;/span&gt;():将字符转成大写、小写&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; CONCAT(&lt;span class=&#34;hljs-built_in&#34;&gt;UPPER&lt;/span&gt;(first_name), &lt;span class=&#34;hljs-built_in&#34;&gt;LOWER&lt;/span&gt;(last_name)) &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; 姓名 &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;、SUBSTR,SUBSTRING&lt;br&gt;# 注意：&lt;span class=&#34;hljs-keyword&#34;&gt;SQL&lt;/span&gt;语言中，索引从&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;开始！！！！！！&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; SUBSTR(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;12345678&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;) # 截取从索引位置为&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;开始的字串&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; SUBSTR(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;12345678&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;) # 截取从索引位置为&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;，字符长度为&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;的字串&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;、INSTR(expr1, expr2)：判断expr2在expr1首次出现的起始索引位置，若不存在，则返回&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; INSTR(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;12341234&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;123&amp;#x27;&lt;/span&gt;); # 输出是&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;、&lt;span class=&#34;hljs-built_in&#34;&gt;TRIM&lt;/span&gt;()&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;TRIM&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;   1234   &amp;#x27;&lt;/span&gt;); # 去除字符前后的空格&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;TRIM&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;aaaa1234aaaaaaa&amp;#x27;&lt;/span&gt;); # 去除字符前后的&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;TRIM&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;aa&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;aaaaa1234aaaaaaa&amp;#x27;&lt;/span&gt;); # 以&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;aa&amp;#x27;&lt;/span&gt;为单位去除字符前后的&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;aa&amp;#x27;&lt;/span&gt;，这里的输出是&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a1234a&amp;#x27;&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;、LPAD()：用指定的字符实现左填充到指定长度&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; LPAD(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ABC&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;); # 输出是&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;*******ABC&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; LPAD(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ABC&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;); # 输出是&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;AB&amp;#x27;&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;、RPAD()：用指定的字符实现左填充到指定长度&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;、REPLACE():替换&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; REPLACE(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ABC&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;B&amp;#x27;&lt;/span&gt;) # 把&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ABC&amp;#x27;&lt;/span&gt;中的所有&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;换成&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;C&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;数学函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数学函数&#34;&gt;#&lt;/a&gt; 数学函数&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;、round(x)：四舍五入&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; ROUND(&lt;span class=&#34;hljs-number&#34;&gt;1.65&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; ROUND(&lt;span class=&#34;hljs-number&#34;&gt;-1.65&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;-2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; ROUND(&lt;span class=&#34;hljs-number&#34;&gt;-1.45&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;、ROUND(x, y)：照第y位小数四舍五入&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;、&lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(X)：返回大于等于x的最小整数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1.01&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1.00&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;-1.01&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;、&lt;span class=&#34;hljs-built_in&#34;&gt;FLOOR&lt;/span&gt;(x)：返回小于等于x的最大整数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1.01&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1.00&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;CEIL&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;-1.01&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;-2&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;、&lt;span class=&#34;hljs-keyword&#34;&gt;TRUNCATE&lt;/span&gt;(x, y)：让x保留y位小数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TRUNCATE&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1.6999&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;1.6&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;、&lt;span class=&#34;hljs-built_in&#34;&gt;MOD&lt;/span&gt;(a,b)：取余  &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;hljs-operator&#34;&gt;-&lt;/span&gt; a &lt;span class=&#34;hljs-operator&#34;&gt;/&lt;/span&gt; b &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; b&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MOD&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MOD&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;-10&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;-3&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;日期函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日期函数&#34;&gt;#&lt;/a&gt; 日期函数&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;、NOW():返回当前系统日期 &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; 时间&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; NOW();&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;、CURDATE()：返回当年系统日期，不包含时间&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; CURDATE(); # &lt;span class=&#34;hljs-number&#34;&gt;2021&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;-11&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;-08&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;、CURTIME()：获取当前时间，不包含日期&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; CURTIME(); # &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;43&lt;/span&gt;&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;、获取指定部分：年，月，日，时，分，秒&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;YEAR&lt;/span&gt;(NOW());&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;YEAR&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2021-11-08&amp;#x27;&lt;/span&gt;); # &lt;span class=&#34;hljs-number&#34;&gt;2021&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;MONTH&lt;/span&gt;(NOW());&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DAY&lt;/span&gt;(NOW());&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;HOUR&lt;/span&gt;(NOW());&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;MINUTE&lt;/span&gt;(NOW());&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SECOND&lt;/span&gt;(NOW());&lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;、STR_TO_DATE():将日期格式的字符串转换成指定格式的日期&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; STR_TO_DATE(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;1998-3-02&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%Y-%c-%d&amp;#x27;&lt;/span&gt;) &lt;br&gt;# &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;、DATA_FORMATE()：将日期转换成字符&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; DATE_FORMAT(NOW(),&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%y-%m-%d&amp;#x27;&lt;/span&gt;);&lt;br&gt;# DATEDIFF(exp1, exp2)：求两个日期时间之差&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;流程控制函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流程控制函数&#34;&gt;#&lt;/a&gt; 流程控制函数&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# IF()：实现if&lt;span class=&#34;hljs-operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;的效果&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; IF(expr1, expr2, expr3); # 若expr1为真，返回expr2，否则expr3&lt;br&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;函数，使用一：类似于Java中switch &lt;span class=&#34;hljs-keyword&#34;&gt;case&lt;/span&gt;的效果&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	格式： case 要判断的字段或表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	when 常量1 then 要显示的值或语句1;（值的时候不加&amp;#x27;;&amp;#x27;，语句的时候加&amp;#x27;;&amp;#x27;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	when 常量2 then 要显示的值或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	else 要显示的值或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	end [as new_name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary, department_id,&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt; department_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;40&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ELSE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;新工资&amp;#x27;&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;函数，使用二：类似于Java中的多重if&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	CASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	WHEN 条件1 THEN 要显示的值或语句1;（值的时候不加&amp;#x27;;&amp;#x27;，语句的时候加&amp;#x27;;&amp;#x27;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	WHEN 条件2 THEN 要显示的值1或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	ELSE 要显示的值1或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	END&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary,&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;12000&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;B&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;C&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; rank&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;其他函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他函数&#34;&gt;#&lt;/a&gt; 其他函数&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# VERSION()：版本号&lt;br&gt;# DATABASE()：查看当前数据库&lt;br&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;USER&lt;/span&gt;()：当前用户&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;聚合函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#聚合函数&#34;&gt;#&lt;/a&gt; 聚合函数&lt;/h4&gt;
&lt;p&gt;SUM、AVG、MAX、MIN、COUNT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sum，avg 一般用于处理数值型&lt;/li&gt;
&lt;li&gt;max、min、count 可以处理任何类型&lt;/li&gt;
&lt;li&gt;以上聚合函数都会忽略 NULL 值，求平均时，分母也是忽略 NULL 的&lt;/li&gt;
&lt;li&gt;可以和 distinct 搭配&lt;/li&gt;
&lt;li&gt;和聚集函数一同查询的字段&lt;strong&gt;只能是 GROUP BY 之后&lt;/strong&gt;的字段&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# SUM&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;SUM&lt;/span&gt;(salary) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees; # 求工资之和&lt;br&gt;# 配合使用&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;SUM&lt;/span&gt;(salary), &lt;span class=&#34;hljs-built_in&#34;&gt;MAX&lt;/span&gt;(salary) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees; # 求总和以及最大值&lt;br&gt;# &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;() 计算不为&lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;的数量 &lt;br&gt;# 和&lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt;搭配使用，去重&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;SUM&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; salary), &lt;span class=&#34;hljs-built_in&#34;&gt;SUM&lt;/span&gt;(salary) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; salary) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;# &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;()的详细介绍&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt; (&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees; # 统计总行数（对于每一行，只要有一个字段不为&lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;，就加&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;）&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(常量值) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees; # 统计总行数 &lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	效率对比：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	MYISAM存储引擎下，COUNT(*)效率高&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	INNODB存储引擎下，COUNT(*)和COUNT(1)效率差不多，比COUNT(常量值)要高一些&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	推荐使用COUNT(*)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;分组查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组查询&#34;&gt;#&lt;/a&gt; 分组查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SELECT 查询列表 FROM 查询列表 [WHERE 字句]  [ GROUP BY 子句  [ HAVING 子句 ] ]  [ ORDER BY 子句 ]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要求查询列表是分组函数和&lt;em&gt; GROUP BY&lt;/em&gt; 后出现的字段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;WHERE 子句&lt;/em&gt;的执行顺序先于&lt;em&gt; GROUP BY&lt;/em&gt;，&lt;em&gt;HAVING 子句&lt;/em&gt;的执行顺序后于&lt;em&gt; GROUP BY&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WHERE 子句的数据源是原始表，而 HAVING 子句的数据源是 GROUP BY 的筛选结果，所以在 WHERE 子句不能直接使用聚合函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GROUP BY 子句支持单字段分组，也支持多字段分组（多个字段之间用逗号隔开，和顺序无关），也支持函数或表达式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 查询每个工种的平均工资&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;AVG&lt;/span&gt;(salary), job_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; job_id;&lt;br&gt;# 查询每个领导手下员工中有奖金的员工的最高工工资&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MAX&lt;/span&gt;(salary), manager_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; commission_pac &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; manager_id;&lt;br&gt;# 复杂的分组查询，分组后的筛选&lt;br&gt;# 查询那个部门的员工人数 &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;), department_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; department_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;&lt;br&gt;# 查询每个工种有奖金的员工的最高工资大于&lt;span class=&#34;hljs-number&#34;&gt;12000&lt;/span&gt;的工种编号和最高工资&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MAX&lt;/span&gt;(salary), job_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; commission_pac &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; job_id &lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MAX&lt;/span&gt;(salary) &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;12000&lt;/span&gt;;&lt;br&gt;# 查询领导编号 &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;102&lt;/span&gt;的每个领导手下的最低工资大于&lt;span class=&#34;hljs-number&#34;&gt;5000&lt;/span&gt;的领导编号是哪个，以及最低工资&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; manager_id, &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; manager_id &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;102&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; manager_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary) &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;5000&lt;/span&gt;&lt;br&gt;# 按表达式或函数分组&lt;br&gt;# 例：按照员工姓名分组，查询每组员工的人数，筛选出员工个数 &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;的有哪些&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;), LENGTH(last_name) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; LENGTH(last_name) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(last_name) &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;;&lt;br&gt;# 按多个字段分组&lt;br&gt;# 例：查询每个部门每个工种的员工的平均工资&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;AVG&lt;/span&gt;(salary), department_id, job_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; job_id, department_id;&lt;br&gt;# 添加排序&lt;br&gt;# 查询每个部门每个工种的员工的平均工资，并按平均工资从小到大排序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;AVG&lt;/span&gt;(salary), department_id, job_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; job_id, department_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;AVG&lt;/span&gt;(salary) &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;连接查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#连接查询&#34;&gt;#&lt;/a&gt; 连接查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SELECT 查询列表 FROM A, B [WHERE 子句] [ 其他子句 ]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查询的数据源是 A 和 B 的笛卡尔积，若 A 有 m 行，B 有 n 行，则 A 和 B 的笛卡尔积有 mn 行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通常需要使用 WHERE 子句进行筛选&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 不支持全外连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;等值连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#等值连接&#34;&gt;#&lt;/a&gt; 等值连接&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 等值连接&lt;br&gt;# 例：查询女生对应的男生&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;, boy_name &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; girls, boys &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; girls.boyfriend_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; boys.id;&lt;br&gt;# 例：查询员工名和对应的部门名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name, department_name &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees, departments &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employees.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; departmens.departmen_id;&lt;br&gt;# 为表起别名，起了别名后，就不能使用原来的表名了&lt;br&gt;# 查询员工名、工种号、工种名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name, e.job_id &lt;span class=&#34;hljs-comment&#34;&gt;/*因为两个表都有job_id字段，所以要指明*/&lt;/span&gt;, job_title &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; e, jobs &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; j &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; e.job_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; j.job_id;&lt;br&gt;# 配合筛选&lt;br&gt;# 查询有奖金的员工名、部门名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name, department_name &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; e, dempartments &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; d&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; e.&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;deparrment_id&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; d.&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;departmen_id&amp;#x27;&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; e.commission_id &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;# 配合分组&lt;br&gt;# 查询每个城市的部门个数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;), city &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments, locations &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; departments.location_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; locations.id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; city;&lt;br&gt;# 查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_name, manager_id, &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments, employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; departments.manager_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; employees.manager_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; commissioin_id &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; department_name;&lt;br&gt;# 配合排序&lt;br&gt;# 查询每个工种的工种名和员工个数，按员工个数降序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; job_title, &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees, jobs &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; emoloyees.job_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; jobs.job_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; job_title &lt;span class=&#34;hljs-keyword&#34;&gt;DESC&lt;/span&gt;;&lt;br&gt;# 多表连接&lt;br&gt;# 例：查询员工名，部门名和所在城市，按员工名降序排序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name, department_name, city&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees e, departments d, locations l&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; e.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; d.department_id &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; d.location_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; l.location_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; last_name &lt;span class=&#34;hljs-keyword&#34;&gt;DESC&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;非等值连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#非等值连接&#34;&gt;#&lt;/a&gt; 非等值连接&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 非等值连接&lt;br&gt;# 例：查询员工的工资和工资等级&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary, grade_level &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees, job_grades &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employees.salary &lt;span class=&#34;hljs-keyword&#34;&gt;BETWEEN&lt;/span&gt; job_grades.lowest_salary &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; job_grades.highest_salary;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;自连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自连接&#34;&gt;#&lt;/a&gt; 自连接&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;使用自连接&lt;strong&gt;必须起别名&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例：查询员工名和其上级的名字&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; A.last_name, B.last_name &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; A, employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; B&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; A.manager_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; B.id;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;sql99语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql99语法&#34;&gt;#&lt;/a&gt; SQL99 语法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SELECT 查询列表&lt;/p&gt;
&lt;p&gt;FROM 表 1 别名 [连接类型] JOIN 表 2 别名&lt;/p&gt;
&lt;p&gt;ON 连接条件&lt;/p&gt;
&lt;p&gt;[WHERE 子句]&lt;/p&gt;
&lt;p&gt;[ GROUP BY 子句&lt;/p&gt;
&lt;p&gt;[HAVING 子句] ]&lt;/p&gt;
&lt;p&gt;[ORDER BY 子句]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;内连接：INNER&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外连接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左外连接：LEFT [OUTER]&lt;/li&gt;
&lt;li&gt;右外连接：RIGHT [OUTER]&lt;/li&gt;
&lt;li&gt;全外连接：FULL [OUTER]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交叉连接：CROSS&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：如果有多个连接，则必须每个连接后面跟一个 ON 子句，不能写在一起&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 内连接 -- &lt;/span&gt;&lt;br&gt;# 等值连接&lt;br&gt;# 例：查询员工名、部门名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name, department_name &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; e &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; departmens &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; d&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; e.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; d.department_id;&lt;br&gt;# 非等值连接&lt;br&gt;# 例：查询员工的工资级别，按工资从小到大排序&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary,grade_level&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; e&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; job_grades &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; g&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; e.salary &lt;span class=&#34;hljs-keyword&#34;&gt;BETWEEN&lt;/span&gt; g.lowest_sal &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; g.highest_sal&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;;&lt;br&gt;# 自连接&lt;br&gt;# 例：查询员工名和他领导的名字&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; e.last_name, m.last_name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees e&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; employees m&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; e.manager_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; m.employee_id;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;外连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#外连接&#34;&gt;#&lt;/a&gt; 外连接&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;外连接查询结果 = 内连接结果 + 主表中有而从表中没有的记录（以 NULL 值显示）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;左外连接，LEFT JOIN 左边的是主表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;右外连接，RIGHT JOIN 右边的是主表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL&lt;strong&gt; 不支持&lt;/strong&gt;全外连接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211111143515166.png&#34; alt=&#34;外连接对比&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 外连接：用于查询一个表中有，另一个表中没有的情况&lt;br&gt;# 例：查询男朋友不在男神表中的女神名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; grils.name, boys.name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; grils&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;OUTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; girls.boyfriend_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; boys.id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; boys.id &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;# 例：查询哪个部门没有员工&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_name, employee_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;OUTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; departments.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; employees.department_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employee_id &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;# 全外连接 &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; 内连接 &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; 表&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;中有表&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;中没有 &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; 表&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;中没有表&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;有&lt;br&gt;# 交叉连接：其实就是笛卡尔积&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CROSS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; departments;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;子查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#子查询&#34;&gt;#&lt;/a&gt; 子查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;含义：出现在其他语句中的 SELECT 语句。主查询可以是 UPDATE, INSERT, DELETE, SELECT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照子查询出现的位置分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SELECT 后面&lt;/li&gt;
&lt;li&gt;FROM 后面&lt;/li&gt;
&lt;li&gt;WHERE 或 HAVING 后面&lt;/li&gt;
&lt;li&gt;EXISTS 后面（相关子查询）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多行子查询的操作符：IN, NOT IN, ANY, SOME, ALL（ANY 和 SOME 是一样的）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;放在where或having后面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#放在where或having后面&#34;&gt;#&lt;/a&gt; 放在 WHERE 或 HAVING 后面&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 放在&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt;或&lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt;后面&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;：谁的工资比Abel高&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; (&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; last_name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &amp;quot;Abel&amp;quot;&lt;br&gt;);&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;：查询job_id与&lt;span class=&#34;hljs-number&#34;&gt;141&lt;/span&gt;号员工相同，salary比&lt;span class=&#34;hljs-number&#34;&gt;143&lt;/span&gt;号员工多的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; job_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; (&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; job_id &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employee_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;141&lt;/span&gt;&lt;br&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; (&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employee_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;143&lt;/span&gt;&lt;br&gt;);&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;：查询工资最少的员工的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; （&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary)&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;);&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;：查询最低工资大于&lt;span class=&#34;hljs-number&#34;&gt;50&lt;/span&gt;号部门的最低工资的部门信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_id, &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; department_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary) &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; (&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary) &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;50&lt;/span&gt;&lt;br&gt;);&lt;br&gt;# 非法使用标量子查询&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_id, &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; department_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(salary) &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; ( # 这里的结果是一个数salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; 一个列。 应该改成 salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;all&lt;/span&gt; (..) &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;50&lt;/span&gt;&lt;br&gt;);&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;：返回location_id是&lt;span class=&#34;hljs-number&#34;&gt;1400&lt;/span&gt;或&lt;span class=&#34;hljs-number&#34;&gt;1700&lt;/span&gt;的部门中所有员工姓名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; last_name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; department_id &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; ( # 或 &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;ANY&lt;/span&gt;(...)&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_id &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; location_id &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; (&lt;span class=&#34;hljs-number&#34;&gt;1400&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1700&lt;/span&gt;)&lt;br&gt;);&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;：返回其他工种中比job_id为&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;IT_PROG&amp;#x27;&lt;/span&gt;工种任意工资低的员工的信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;all&lt;/span&gt;(&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; salary&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; job_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &amp;quot;IT_PROG&amp;quot;&lt;br&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; job_id &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &amp;quot;IT_PROG&amp;quot;;&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;：查询员工编号最小并且工资最高的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; (employee_id, salary) &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; ( ####### 这种写法不常用&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;MIN&lt;/span&gt;(employee_id), &lt;span class=&#34;hljs-built_in&#34;&gt;MAX&lt;/span&gt;(salary)&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;放在select后面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#放在select后面&#34;&gt;#&lt;/a&gt; 放在 SELECT 后面&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;只支持标量子查询&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;：查询每个部门的员工个数&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; departments.&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;, (&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;) &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employee_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; departments.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; employees.department_id&lt;br&gt;) &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments;&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;：查询员工号为&lt;span class=&#34;hljs-number&#34;&gt;102&lt;/span&gt;的部门名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; d&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; e&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; d.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; e.department_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; e.employee_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;102&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;放在from后面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#放在from后面&#34;&gt;#&lt;/a&gt; 放在 FROM 后面&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;FROM 后面的子查询必须起别名&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;：查询每个部门的平均工资的工资等级&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; avg_dep.ag, avg_dep.department_id, g.grade_level&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; (&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;AVG&lt;/span&gt;(salary) &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; ag, department_id&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; department_id&lt;br&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; avg_dep&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; job_grades &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; g&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; avg_dep.ag &lt;span class=&#34;hljs-keyword&#34;&gt;BETWEEN&lt;/span&gt; g.lowest_sal &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; g.highest_sal;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;放在exists后面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#放在exists后面&#34;&gt;#&lt;/a&gt; 放在 EXISTS 后面&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;EXISTS&lt;/span&gt;(完整的查询语句)：若括号中查询语句不为空，则返回&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;，否则返回&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;：查询有员工的部门名&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;EXISTS&lt;/span&gt;(&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; employees.department_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; departments.department_id&lt;br&gt;);&lt;br&gt;# 可以用&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt;代替&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; department_name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; departments&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; department_id &lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt;(&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; department_id &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;);&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;：查询没有女朋友的男生信息&lt;br&gt;# 可以用&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt;实现&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; b.&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; b.id &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt;(&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; boyfriend_id&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; girls&lt;br&gt;);&lt;br&gt;# 也可以用&lt;span class=&#34;hljs-keyword&#34;&gt;EXISTS&lt;/span&gt;代替&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; b.&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;EXISTS&lt;/span&gt;(&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DISTINCT&lt;/span&gt; boyfriend_id&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; girls&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; b.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girls.boyfriend_id&lt;br&gt;);&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;分页查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分页查询&#34;&gt;#&lt;/a&gt; 分页查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用情景：如果要查询的数据过多，可以分多页显示（比如淘宝商品不是一次显示完的，这样可以提高速度）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;​		SELECT 查询列表&lt;/p&gt;
&lt;p&gt;​	    FROM 表&lt;/p&gt;
&lt;p&gt;​        [JOIN TYPE] JOIN 表&lt;/p&gt;
&lt;p&gt;​		ON 连接条件&lt;/p&gt;
&lt;p&gt;​		WHERE 筛选条件&lt;/p&gt;
&lt;p&gt;​		GROUP BY&lt;/p&gt;
&lt;p&gt;​		HAVING&lt;/p&gt;
&lt;p&gt;​		ORDER BY&lt;/p&gt;
&lt;p&gt;​		LIMIT offset，size&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;offset 表示要显示条目的起始索引（索引位置从 0 开始），size 表示要显示的条目个数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LIMIT 语句在语法上和执行顺序上都是最后一步&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例：查询前五条员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees LIMIT &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;; # 等价于 &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees LIMIT &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;;(默认从第一条数据开始)&lt;br&gt;# 显示有奖金的工资最高的&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;名员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; commission_pct &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; salary &lt;span class=&#34;hljs-keyword&#34;&gt;DESC&lt;/span&gt;&lt;br&gt;LIMIT &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;联合查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#联合查询&#34;&gt;#&lt;/a&gt; 联合查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UNION：将多个查询语句的结果合并成一个结果&lt;/li&gt;
&lt;li&gt;语法：查询语句 1 UNION 查询语句 2 UNION 查询语句 3 …&lt;/li&gt;
&lt;li&gt;应用场景：要查询的结果来自于多个表，且多个表之间没有直接的连接关系，但&lt;strong&gt;查询的信息一致&lt;/strong&gt;（查询的字段值必须相同）&lt;/li&gt;
&lt;li&gt;注意
&lt;ul&gt;
&lt;li&gt;要求多条查询语句要查询的列数一致&lt;/li&gt;
&lt;li&gt;要求多条查询语句查询的每一列的类型和顺序最好要一致（不报错，但没意义）&lt;/li&gt;
&lt;li&gt;UNION 关键字&lt;strong&gt;默认是去重的&lt;/strong&gt;，如果想要包含重复项，可以使用&lt;strong&gt; UNION ALL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例：查询部门编号&lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt;或邮箱包含a的员工信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; email &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%a%&amp;#x27;&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; department_id &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt;;&lt;br&gt;# 查询中国用户表中的男性用户信息和外国用户表中的女性用户信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; t_ca &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; gender &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;male&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; t_ua &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; gender &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;female&amp;#x27;&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;dml语言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dml语言&#34;&gt;#&lt;/a&gt; DML 语言&lt;/h2&gt;
&lt;h3 id=&#34;插入语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#插入语句&#34;&gt;#&lt;/a&gt; 插入语句&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式一：INSERT INTO 表名 (字段名 1, 字段名 2, …) VALUES (值 1，值 2，……);&lt;/li&gt;
&lt;li&gt;方式二：INSERT INTO 表名 SET 列名 = 值，列名 = 值，……&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入的值的类型必须与列的类型一致或兼容（顺序、个数必须相同，如果某字段值为空，那就写 NULL）&lt;/li&gt;
&lt;li&gt;可以为 NULL 的字段值，插入的时候可以为 NULL&lt;/li&gt;
&lt;li&gt;不可以为 NULL 的列，必须有值&lt;/li&gt;
&lt;li&gt;可以省略列名，但默认是所有插入所有列，且顺序和表中一致&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式一支持一次插入多行&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; girls(id, name, gender, birthday, phone, photo, boyfriend_id)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-02-12&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000000&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;),&lt;br&gt;	(&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-03-12&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000020&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;),&lt;br&gt;	(&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-04-12&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000400&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式一支持子查询&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; girls(id, name, phone)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; id, boy_name, phone_number # 这里指把子查询的结果插入到表中，这样可以实现一次性插入多行&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;举例-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#举例-4&#34;&gt;#&lt;/a&gt; 举例&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 若photo值可以为&lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;，则以下&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;种方式等价&lt;br&gt;# ①&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; girls(id, name, gender, birthday, phone, photo, boyfriend_id)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-02-12&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000000&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;# ②&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; girls&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-02-12&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000000&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; girls(id, name, gender, birthday, phone, boyfriend_id)&lt;br&gt;# ③&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-02-12&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000000&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;# ④&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; girls&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Angela&amp;#x27;&lt;/span&gt;,&lt;br&gt;	id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;,&lt;br&gt;	gender &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl&amp;#x27;&lt;/span&gt;&lt;br&gt;	birthday &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;2001-02-12&amp;#x27;&lt;/span&gt;&lt;br&gt;	phone &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13100000000&amp;#x27;&lt;/span&gt;&lt;br&gt;	boyfriend_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;修改语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改语句&#34;&gt;#&lt;/a&gt; 修改语句&lt;/h3&gt;
&lt;h4 id=&#34;修改单表记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改单表记录&#34;&gt;#&lt;/a&gt; 修改单表记录&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;语法：UPDATE 表名 SET 字段名 1 = 新值 1，字段名 2 = 新值 2，…… WHERE 筛选条件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;：修改girls表中姓唐的女生的电话为&lt;span class=&#34;hljs-number&#34;&gt;13899999999&lt;/span&gt;&lt;br&gt;UPDATE girls&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; phone &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;13899999999&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;唐%&amp;#x27;&lt;/span&gt;;&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;：修改boys表中id为&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;的人名称为张飞，魅力值&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;&lt;br&gt;UPDATE boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; boy_name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;张飞&amp;#x27;&lt;/span&gt;,&lt;br&gt;	usercp &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;	&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;修改多表记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改多表记录&#34;&gt;#&lt;/a&gt; 修改多表记录&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;语法：
&lt;ul&gt;
&lt;li&gt;sql92：UPDATE 表 1 别名，表 2 别名 SET 列 = 值，… WHERE 连接条件 AND 筛选条件；&lt;/li&gt;
&lt;li&gt;sql99：UPDATE 表 1 别名 连接类型 表 2 别名 ON 连接条件 SET 列 = 值，… WHERE 连接条件 AND 筛选条件；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;：修改张无忌的女朋友们的手机号为&lt;span class=&#34;hljs-number&#34;&gt;114&lt;/span&gt;&lt;br&gt;UPDATE boys b&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; girls g&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; b.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; g.boyfriend_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; g.phone &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;114&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; b.name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;张无忌&amp;#x27;&lt;/span&gt;;&lt;br&gt;# 例&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;：修改没有男朋友的女生的男朋友编号为&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&lt;br&gt;UPDATE girls g&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; boys b&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; g.boyfriend_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; b.id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; g.boyfriend_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; g.boyfriend_id &lt;span class=&#34;hljs-keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;删除语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除语句&#34;&gt;#&lt;/a&gt; 删除语句&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式一：DELETE 要删的表名 FROM 表名 WHERE 筛选条件 [LIMIT 子句]&lt;/li&gt;
&lt;li&gt;方式二：TRUNCATE TABLE 表名 **（删除整张表）**&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假如要删除的表中有自增长列，用 delete 删除后，再插入数据，自增长的列从断点开始，而 TRUNCATE 删除后，再插入数据，自增长的列从 1 开始&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DELETE 有返回值（比如：共 3 行受影响）；TRUNCATE 没有返回值（会显示：共 0 行受影响）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TRUNCATE 删除&lt;strong&gt;不能回滚&lt;/strong&gt;，DELETE 删除可以回滚&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;单表删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#单表删除&#34;&gt;#&lt;/a&gt; 单表删除&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 删除手机号以&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;结尾的女生信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; girls&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; phone &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%9&amp;#x27;&lt;/span&gt;;&lt;br&gt;# LIMIT配合删除语句&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; girls LIMIT &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;; # 删除第一条数据&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;多表删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多表删除&#34;&gt;#&lt;/a&gt; 多表删除&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 删除张无忌的女朋友的信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; girls # 这里只会删除girls表中的数据&lt;br&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; girls， boys # 这样就会删除girls和boys两个表中的信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; girls &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; boys.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girls.boyfriend_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; boys.name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;张无忌&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;# 删除黄晓明的信息和他女朋友的信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; girls, boys # 两个表中的信息都会被删除&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; girls&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; boys.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girls.boyfriend_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; boys.name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;黄晓明&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;ddl语言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ddl语言&#34;&gt;#&lt;/a&gt; DDL 语言&lt;/h2&gt;
&lt;h3 id=&#34;库管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#库管理&#34;&gt;#&lt;/a&gt; 库管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;库的创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法：CREATE DATABASE [IF NOT EXISTS] 库名；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改库的字符集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法：ALTER DATABASE 库名 CHARACTER SET 字符集名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;库的删除&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法：DROP DATABASE [IF EXISTS] 库名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;表管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#表管理&#34;&gt;#&lt;/a&gt; 表管理&lt;/h3&gt;
&lt;h4 id=&#34;创建create&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建create&#34;&gt;#&lt;/a&gt; 创建：CREATE&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CREATE TABLE [IF NOT EXISTS] 表名 (&lt;/p&gt;
&lt;p&gt;​	字段名 字段类型 [长度 约束])，&lt;/p&gt;
&lt;p&gt;​	字段名 字段类型 [长度 约束])，&lt;/p&gt;
&lt;p&gt;​	字段名 字段类型 [长度 约束])，&lt;/p&gt;
&lt;p&gt;​	……&lt;/p&gt;
&lt;p&gt;);&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 创建表book&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; book(&lt;br&gt;	id &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;, # 书的编号&lt;br&gt;    `name` &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;), # 书名&lt;br&gt;    price &lt;span class=&#34;hljs-keyword&#34;&gt;DOUBLE&lt;/span&gt;, # 价格&lt;br&gt;    author_id &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; # 作者编号&lt;br&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;修改alter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改alter&#34;&gt;#&lt;/a&gt; 修改：ALTER&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改列名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ALTER TABLE 表名 CHANGE COLUMN 原名 新名 类型；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; books CHANGE &lt;span class=&#34;token keyword&#34;&gt;COLUMN&lt;/span&gt; author_id author &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼29--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加新列&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ALTER TABLE 表名 ADD COLUMN 列名 类型 [FIRST | AFTER 字段名]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 添加在第一列&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; books &lt;span class=&#34;token keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COLUMN&lt;/span&gt; publish_time &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FIRST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 添加在 author 列后面&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; books &lt;span class=&#34;token keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COLUMN&lt;/span&gt; publish_time &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AFTER&lt;/span&gt; author&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼30--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改表名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ALTER TABLE 表名 RENAME TO 新名字；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; books &lt;span class=&#34;token keyword&#34;&gt;RENAME&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TO&lt;/span&gt; my_books&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼31--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;复制表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#复制表&#34;&gt;#&lt;/a&gt; 复制表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;仅仅复制表的结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CREATE TABLE 表名 LIKE 源表名；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; book_copy &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; books&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼32--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;仅仅复制表的部分字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; books_copy&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; author_id&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; books&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 筛选条件永远为 false，所以最后复制过去的只有 id 和 author_id 两个字段&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼33--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;浮点数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮点数&#34;&gt;#&lt;/a&gt; 浮点数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;包括两种：float（4 字节），double（8 字节）&lt;/li&gt;
&lt;li&gt;写法：FLOAT (M, D), DOUBLE (M, D)&lt;/li&gt;
&lt;li&gt;M 代表整数部分和小数部分的长度总和，D 代表精确到小数点后几位，超过范围，则插入临界值&lt;/li&gt;
&lt;li&gt;M 和 D 都可以省略，会根据插入的数值的精度来决定精度&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;定点数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定点数&#34;&gt;#&lt;/a&gt; 定点数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;写法：DEC (M, D) 或 DECIMAL (M, D)&lt;/li&gt;
&lt;li&gt;M 代表整数部分和小数部分的长度总和，D 代表精确到小数点后几位，超过范围，则插入临界值&lt;/li&gt;
&lt;li&gt;M 和 D 都可以省略，默认 M = 10，D = 0&lt;/li&gt;
&lt;li&gt;精度相比浮点数较高，对精度要求较高的情况下可以选择定点数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;字符型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符型&#34;&gt;#&lt;/a&gt; 字符型&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;保存较短的文本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;char (M)：固定长度的字符，M 可省略，默认为 1，效率较高，但耗费空间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;varchar (M)：可变长度的字符，M 不可省略，效率较低，但节省空间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;enum：枚举&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; enum_table&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;	a &lt;span class=&#34;token keyword&#34;&gt;enum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; enum_table &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 插入成功&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; enum_table &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 插入成功&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; enum_table &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 插入成功&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; enum_table &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 插入成功，但实际插入的是 &#39;a&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; enum_table &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;m&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 插入失败&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼34--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;binary，varbinary：用于保存较小的二进制数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保存较长的文本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;blob（较长的二进制数据）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;日期型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日期型&#34;&gt;#&lt;/a&gt; 日期型&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DATE&lt;/strong&gt;：只保存日期&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TIME&lt;/strong&gt;：只保存时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATETIME&lt;/strong&gt;：可以保存日期和时间，与时区无关&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YEAR&lt;/strong&gt;：只保存年份&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TIMESTAMP&lt;/strong&gt;：时间戳，和实际时区有关，范围是 1970 年到 2038 年&lt;/li&gt;
&lt;li&gt;查询当前程序时区：SHOW VARIABLES LIKE ‘time_zone’&lt;/li&gt;
&lt;li&gt;设置程序时区：SET time_zone 时区&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;约束&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#约束&#34;&gt;#&lt;/a&gt; 约束&lt;/h3&gt;
&lt;p&gt;含义：用于限制表中的数据，以保证表中数据的准确和可靠性&lt;/p&gt;
&lt;h4 id=&#34;分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NOT NULL&lt;/strong&gt;：非空约束，用于保证该字段的值不能为空&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DEFAULT&lt;/strong&gt;：默认约束，保证该字段有默认值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PRIMARY KEY&lt;/strong&gt;：主键约束，保证该字段具有唯一性、非空性，一张表最多有一个主键，可以多个列共同组成一个主键&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UNIQUE&lt;/strong&gt;：唯一约束，保证该字段具有唯一性，但可以为 NULL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CHECK&lt;/strong&gt;：检查约束（MySQL8 开始支持）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FOREIGN KEY&lt;/strong&gt;：外键约束，保证该字段值必须来自于主表的关联列的值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主键约束和唯一约束的对比：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;保证唯一性&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;是否允许为空&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;一张表是否可以有多个&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;是否允许组合&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;主键约束&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√，但不推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;唯一约束&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√，但不推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;外键的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要求在从表中设置外键关系&lt;/li&gt;
&lt;li&gt;从表的外键列的类型和主表的关联列的类型要求一致或兼容，名称无要求&lt;/li&gt;
&lt;li&gt;主表的关联列必须是一个 key（一般是主键或唯一键）&lt;/li&gt;
&lt;li&gt;插入数据时，应该先插入主表，再插入从表&lt;/li&gt;
&lt;li&gt;删除数据时，应该先删除从表，在删除主表&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主键删除数据时，外键数据的处理方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;==CASCADE：== 级联删除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;==SET NULL：== 置空删除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; my_table &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 置空删除&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; my_table &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASCADE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 级联删除&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼35--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;修改表时添加约束&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改表时添加约束&#34;&gt;#&lt;/a&gt; 修改表时添加约束&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;添加列级约束：ALTER TABLE 表名 MODIFY COLUMN 字段名 字段类型 新约束；&lt;/li&gt;
&lt;li&gt;添加表级别约束：ALTER TABLE 表名 ADD [CONSTRAINT 约束名] 约束类型 (字段名) [ 外键的引用 ]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;列级约束和表级约束对比：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;位置&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;支持的约束类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;是否可以起约束名&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;列级约束&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;列的后面&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;除了外键&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;表级约束&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;所有列的下面&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;除了 DEFAULT 和 NOT NULL&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student(&lt;br&gt;	id &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt;,&lt;br&gt;    stu_name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;)L,&lt;br&gt;    gender &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt;,&lt;br&gt;    seat &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;,&lt;br&gt;    majorID &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;,&lt;br&gt;);&lt;br&gt;# 添加非空约束&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student MODIFY &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; stu_name &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;;&lt;br&gt;# 添加主键约束，，&lt;span class=&#34;hljs-keyword&#34;&gt;CONSTRAINT&lt;/span&gt;可选&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student MODIFY &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; stu_name &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student &lt;span class=&#34;hljs-keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY(stu_name);&lt;br&gt;# 添加唯一约束，，&lt;span class=&#34;hljs-keyword&#34;&gt;CONSTRAINT&lt;/span&gt;可选&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student MODIFY &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; stu_name &lt;span class=&#34;hljs-keyword&#34;&gt;UNIQUE&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student &lt;span class=&#34;hljs-keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;UNIQUE&lt;/span&gt;(stu_name);&lt;br&gt;# 添加外键约束，&lt;span class=&#34;hljs-keyword&#34;&gt;CONSTRAINT&lt;/span&gt;可选&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student &lt;span class=&#34;hljs-keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;CONSTRAINT&lt;/span&gt; fk_student_major &lt;span class=&#34;hljs-keyword&#34;&gt;FOREIGN&lt;/span&gt; KEY(major_id) &lt;span class=&#34;hljs-keyword&#34;&gt;REFERENCES&lt;/span&gt; major(id);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;删除约束&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除约束&#34;&gt;#&lt;/a&gt; 删除约束&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 删除非空约束&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student MODIFY &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; stu_name;&lt;br&gt;# 删除主键约束&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student MODIFY &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; stu_name;&lt;br&gt;# 或&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student &lt;span class=&#34;hljs-keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY;&lt;br&gt;# 删除唯一约束&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student &lt;span class=&#34;hljs-keyword&#34;&gt;DROP&lt;/span&gt; INDEX 约束名;&lt;br&gt;# 删除外键约束&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; student &lt;span class=&#34;hljs-keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FOREIGN&lt;/span&gt; KEY 约束名;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;标识列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标识列&#34;&gt;#&lt;/a&gt; 标识列&lt;/h3&gt;
&lt;p&gt;含义：又成为自增长列，可以不用手动插入值，系统提供默认的序列值&lt;/p&gt;
&lt;p&gt;语法：列名 类型 [约束] AUTO_INCREMENT&lt;/p&gt;
&lt;p&gt;设置标识列:&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 在创建表时设置标识列&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; tab_identity(&lt;br&gt;    id &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY AUTO_INCREMENT,&lt;br&gt;    name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;)&lt;br&gt;)&lt;br&gt;&lt;br&gt;# 这样，在插入时，就不需要插入id这个字段&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; tab_identity &lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john&amp;#x27;&lt;/span&gt;);&lt;br&gt;# 或&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; tab_identity(name) &lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john&amp;#x27;&lt;/span&gt;);&lt;br&gt;# 实际上还是可以自己插入id这个值的&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; tab_identity &lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john&amp;#x27;&lt;/span&gt;); # 这样会插入一条数据(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john&amp;#x27;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 也可以在修改表的时候设置标识列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; tab_identity &lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; id &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY AUTO_INCREMENT;&lt;br&gt;# 删除标识列&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; tab_identity &lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; id &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一张表&lt;strong&gt;只能有一个&lt;/strong&gt;标识列，且标识列&lt;strong&gt;必须是一个键&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;标识列的类型&lt;strong&gt;必须是数值型&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可以修改每次增加的数值：&lt;strong&gt;SET AOTU_INCREMENT_INCREMENT = 步长；&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可以通过手动插入，设置起始值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcl语言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcl语言&#34;&gt;#&lt;/a&gt; TCL 语言&lt;/h2&gt;
&lt;h3 id=&#34;事务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务&#34;&gt;#&lt;/a&gt; 事务&lt;/h3&gt;
&lt;p&gt;含义：一个或一组 SQL 语句组成一个执行单元，这个执行单元要么全部执行，要么全部不执行。&lt;/p&gt;
&lt;p&gt;查看数据库支持的存储引擎：==SHOW ENGINES；== 可以看到，默认的存储引擎是 InnoDB。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211116224930803.png&#34; alt=&#34;数据库存储引擎&#34;&gt;&lt;/p&gt;
&lt;p&gt;InnoDB 支持事务，MyISAM 和 MEMORY 不支持事务。&lt;/p&gt;
&lt;h4 id=&#34;事务的属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务的属性&#34;&gt;#&lt;/a&gt; 事务的属性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原子性&lt;/strong&gt;：指事物是一个不可分割的工作单位，&lt;mark&gt;事物中的操作要么都发生，要么都不发生。&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一致性&lt;/strong&gt;：事务必须使数据库从一个一致性状态变换到另一个一致性状态&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隔离性&lt;/strong&gt;：一个事务的执行不能被其他事物干扰（这取决于隔离级别）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久性&lt;/strong&gt;：一个事务一旦被提交，其对数据库的改变就是永久性的&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;事务的创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务的创建&#34;&gt;#&lt;/a&gt; 事务的创建&lt;/h4&gt;
&lt;p&gt;隐式事务：事务没有明显的开启和结束的标记，如 INSERT, UPDATE, DELETE 语句&lt;/p&gt;
&lt;p&gt;显式事务：事务具有明显的开启和结束的标记。前提：&lt;mark&gt;必须通过 SET AUTOCOMMIT = 0; 设置自动提交功能为禁用&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;显示事务的创建：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 开启事务&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; AUTOCOMMIT &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;START&lt;/span&gt; TRANSACTION;# 这句话可选，只要写了&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; AUTOCOMMIT &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; 即可&lt;br&gt;# 步骤二：编写事务中的&lt;span class=&#34;hljs-keyword&#34;&gt;SQL&lt;/span&gt;语句（&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt;, UPDATE, &lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt;，其他的写了也没用）&lt;br&gt;# 结束事务，以下两个语句二选一&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;COMMIT&lt;/span&gt;; # 提交事务&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ROLLBACK&lt;/span&gt;; # 回滚事务&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DELETE 和 TRUNCATE 在事务使用时的区别：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;能否回滚&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DELETE&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;TRUNCATE&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;事务的隔离级别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务的隔离级别&#34;&gt;#&lt;/a&gt; 事务的隔离级别&lt;/h4&gt;
&lt;p&gt;查看当前隔离级别：&lt;mark&gt;SELECT @@TRANSACTION_ISOLATION&lt;/mark&gt;(MySQL8)&lt;/p&gt;
&lt;p&gt;修改隔离级别：&lt;mark&gt;SET SESSION / GLOBAL TRANSACTION ISOLATION LEVEL 隔离级别&lt;/mark&gt;，SESSION 对当前连接有效，GLOBAL 对全局有效，修改的时候要写成&lt;mark&gt;中间的’-&#39; 要换成空格！&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;事务隔离级别（从低到高）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;隔离级别&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;脏读&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;不可重复读&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;幻读&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;READ-UNCOMMITTED&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;READ-COMMITTED&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;REPEATABLE-READ&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;√&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;SERIALIZABLE&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;savepoint的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#savepoint的使用&#34;&gt;#&lt;/a&gt; SAVEPOINT 的使用&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;savepoint&lt;/span&gt;的使用&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; AUTOCOMMIT &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;START&lt;/span&gt; TRANSACTION;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; account &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;25&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SAVEPOINT&lt;/span&gt; a; # 设置保存点A&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; account &lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;19&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TO&lt;/span&gt; a; # 回滚到存档点a&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;视图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#视图&#34;&gt;#&lt;/a&gt; 视图&lt;/h2&gt;
&lt;p&gt;含义：虚拟表，和普通表一样使用，是通过表动态生成的数据，其中只保存了 SQL 逻辑，&lt;strong&gt;不保存查询结果&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;创建视图：&lt;mark&gt;CREATE VIEW 视图名 AS 查询语句&lt;/mark&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 创建视图，查询员工中包含字符a的员工名、部门名和工种信息&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;VIEW&lt;/span&gt; my_view &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; e.last_name, department_name, e.job_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employee e&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; departments d &lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; e.departmen_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; d.department_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; jobs j &lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; e.job_id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; j.job_id&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; e.last_name &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%a%&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;修改视图：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;CREATE OR REPLACE VIEW 视图名 AS 查询语句&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;ALTER VIEW 视图名 AS 查询语句&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;删除视图：&lt;/strong&gt;&lt;mark&gt;DROP VIEW 视图名，视图名，……&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看视图信息：&lt;/strong&gt;&lt;mark&gt;DESC 视图名&lt;/mark&gt; 或 &lt;mark&gt;SHOW CREATE VIEW 视图名&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;具备以下特点的视图不允许更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;包含以下关键字的 SQL 语句：分组函数、DISTINCT、GROUP BY、HAVING、UNION、UNION ALL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常量视图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SELECT 中包含子查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用上了连接语句（能 UPDATE，不能 INSERT、DELETE）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图的创建过程中用到了不能更新的另一个视图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WHERE 子句的子查询引用了 FROM 子句中的表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# WHERE 子句的子查询引用了 FROM 子句中的表&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VIEW&lt;/span&gt; my_view &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; employee_id &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; manager_id&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼42--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;会话变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#会话变量&#34;&gt;#&lt;/a&gt; 会话变量&lt;/h4&gt;
&lt;p&gt;作用域：仅仅针对于&lt;mark&gt;当前会话&lt;/mark&gt;连接有效&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 查看所有会话变量&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SHOW&lt;/span&gt; SESSION VARIABLES; # &lt;span class=&#34;hljs-keyword&#34;&gt;SHOW&lt;/span&gt; VARIBALES效果是一样的 &lt;br&gt;# 查看部分会话变量&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SHOW&lt;/span&gt; SESSION VARIABLES &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;%char%&amp;#x27;&lt;/span&gt;;&lt;br&gt;# 查看指定的某个会话变量&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; @&lt;span class=&#34;hljs-variable&#34;&gt;@SESSION&lt;/span&gt;.TRANSACTION_ISOLATION;&lt;br&gt;# 修改某个会话变量&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; @&lt;span class=&#34;hljs-variable&#34;&gt;@SESSION&lt;/span&gt;.TRANSACTION_ISOLATION &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; SERIALIZABLE;&lt;br&gt;# 或&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; SESSION TRANSACTION_ISOLATION &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; SERIALIZABLE;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;自定义变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自定义变量&#34;&gt;#&lt;/a&gt; 自定义变量&lt;/h3&gt;
&lt;h4 id=&#34;用户变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户变量&#34;&gt;#&lt;/a&gt; 用户变量&lt;/h4&gt;
&lt;p&gt;作用域：针对于当前会话连接有效，可以在任何地方使用，即可以放在 begin end 里面或外面&lt;/p&gt;
&lt;p&gt;声明并初始化（&lt;mark&gt;在声明时必须初始化&lt;/mark&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;SET @用户变量名 = 值&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;SET @用户变量名 := 值&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;SELECT @用户变量名 := 值&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赋值：&lt;/p&gt;
&lt;p&gt;方式一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;SET @用户变量名 = 值&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;SET @用户变量名 := 值&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;SELECT @用户变量名 := 值&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方式二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SELECT 字段 INTO 变量名 FROM 表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 例子，将变量名 @count 赋值为 employees 表的数据条数&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@count&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--code￼44--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;存储过程和函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储过程和函数&#34;&gt;#&lt;/a&gt; 存储过程和函数&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;含义&lt;/strong&gt;：类似于 Java 中的方法&lt;/p&gt;
&lt;h3 id=&#34;存储过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储过程&#34;&gt;#&lt;/a&gt; 存储过程&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;含义&lt;/strong&gt;：一组预先编译号的 SQL 语句的集合，可以理解成批处理语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提高代码的重用性&lt;/li&gt;
&lt;li&gt;简化操作&lt;/li&gt;
&lt;li&gt;减少编译次数并且减少了和数据库服务器的连接次数，提高了效率&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建语法&#34;&gt;#&lt;/a&gt; 创建语法&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; 存储过程名(参数列表)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	存储过程体(一组合法的&lt;span class=&#34;hljs-keyword&#34;&gt;SQL&lt;/span&gt;语句)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数列表包含三部分：&lt;mark&gt;参数模式 参数名 参数类型&lt;/mark&gt;，如：IN stuname VARCHAR (20)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;IN&lt;/mark&gt;：该参数可以作为输入，也就是说该参数需要调用方传入值&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;OUT&lt;/mark&gt;：该参数可以作为输出，也就是说该参数可以作为返回值&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;INOUT&lt;/mark&gt;：该参数既可以作为输入，又可以作为输出；既需要传入值，又可以返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果存储函数体只有一句话，BEGIN END 可以省略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储过程体的每条 SQL 语句的结尾要求必须加分号，存储过程的结尾可以使用&lt;mark&gt; DELIMITER&lt;/mark&gt; 重新设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法：&lt;mark&gt;DELIMITER 结束标记&lt;/mark&gt;，如 DELIMITER $&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;调用语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调用语法&#34;&gt;#&lt;/a&gt; 调用语法&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;CALL 存储过程名 (实参列表)；&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;空参&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#空参&#34;&gt;#&lt;/a&gt; 空参&lt;/h5&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 空参列表&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 案例：插入2条数据到admin表中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 定义存储过程&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test()&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; admin &lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0000&lt;/span&gt;),(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;john2&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;0001&lt;/span&gt;); # 这里必须加分号&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test();&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;in&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#in&#34;&gt;#&lt;/a&gt; IN&lt;/h5&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 带&lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt;模式参数的存储过程&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 根据女生名，查询对应的男生信息&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test2(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;))&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; boys.&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;RIGHT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; girls &lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; boys.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girls.boyfriend_id&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; girls.name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; name&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test2(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;my_girl_name&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 案例2：创建存储过程实现用户是否登录成功&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test3(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; username &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;), &lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; `password` &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;))&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; # 声明并初始化&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;result&lt;/span&gt; # 将查询结果赋值给&lt;span class=&#34;hljs-keyword&#34;&gt;result&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; admin&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; admin.username &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; username &lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; admin.password &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; `password`;&lt;br&gt;	&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; IF(&lt;span class=&#34;hljs-keyword&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;成功&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;失败&amp;#x27;&lt;/span&gt;); # 打印结果&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test2(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;my_name&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;my_password&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;out&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#out&#34;&gt;#&lt;/a&gt; OUT&lt;/h5&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 根据女生名，返回对应的男生名&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test3(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; girl_name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;), &lt;span class=&#34;hljs-keyword&#34;&gt;OUT&lt;/span&gt; boy_name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;))&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; boys.boy_name &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; boy_name&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; girls &lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; boys.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girls.boyfriend_id&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; girls.name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girl_name;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@boy&lt;/span&gt;_name;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test3(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl_name&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-variable&#34;&gt;@boy&lt;/span&gt;_name);&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 根据女生名，查询男生名和其对应的魅力值&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test4(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; girl_name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;), &lt;span class=&#34;hljs-keyword&#34;&gt;OUT&lt;/span&gt; boy_name &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;), &lt;span class=&#34;hljs-keyword&#34;&gt;OUT&lt;/span&gt; user_cp &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; boys.boy_name, boys.user_cp &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; boy_name, user_cp&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; boys&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;INNER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;JOIN&lt;/span&gt; girls &lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; boys.id &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girls.boyfriend_id&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; girls.name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; girl_name;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@boy&lt;/span&gt;_name;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@user&lt;/span&gt;_cp;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test4(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;girl_name&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-variable&#34;&gt;@boy&lt;/span&gt;_name, &lt;span class=&#34;hljs-variable&#34;&gt;@user&lt;/span&gt;_cp);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;inout&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inout&#34;&gt;#&lt;/a&gt; INOUT&lt;/h5&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 传入a和b两个值，最终a和b翻倍并返回&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test5(&lt;span class=&#34;hljs-keyword&#34;&gt;INOUT&lt;/span&gt; a &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;INOUT&lt;/span&gt; b &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; a &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; b &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; b &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@m&lt;/span&gt; :&lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@n&lt;/span&gt; :&lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test5(&lt;span class=&#34;hljs-variable&#34;&gt;@m&lt;/span&gt;, &lt;span class=&#34;hljs-variable&#34;&gt;@n&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;删除存储过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除存储过程&#34;&gt;#&lt;/a&gt; 删除存储过程&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;DROP PROCEDURE 存储过程名&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;查看存储过程的信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看存储过程的信息&#34;&gt;#&lt;/a&gt; 查看存储过程的信息&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;SHOW CREATE PROCEDURE 存储过程名；&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;函数&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;有且只有一个返回&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;存储过程&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;0 个返回或多个返回&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;创建函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建函数&#34;&gt;#&lt;/a&gt; 创建函数&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;mark&gt;CREATE FUNCTION 函数名 (参数列表) RETURNS 返回类型&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;创建类型&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;BEGIN&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​						&lt;mark&gt;函数体&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;END&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数列表包含两部分：参数名 参数类型&lt;/li&gt;
&lt;li&gt;函数体一定要有 RETURN 语句，如果没有，会报错&lt;/li&gt;
&lt;li&gt;若函数体只有一句话，则可以省略 BEGIN END&lt;/li&gt;
&lt;li&gt;要使用 MELIMITER 语句设置结束标记&lt;/li&gt;
&lt;li&gt;8.0 版本 MySQL 创建函数需要在 RETURNS TYPE 后面，BEGIN 前面加上创建类型，一般有下面这几种类型：
&lt;ul&gt;
&lt;li&gt;==DETERMINISTIC：== 不确定的&lt;/li&gt;
&lt;li&gt;==NO SQL：== 没有 SQL 语句&lt;/li&gt;
&lt;li&gt;==READS SQL DATA：== 读取数据，不涉及修改数据&lt;/li&gt;
&lt;li&gt;==MODIFIES SQL DATA：== 涉及到修改数据&lt;/li&gt;
&lt;li&gt;==CONTAINS SQL：== 包含了 SQL 语句&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;调用函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调用函数&#34;&gt;#&lt;/a&gt; 调用函数&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;mark&gt;SELECT 函数名 (参数列表)；&lt;/mark&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 返回公司的员工人数&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 定义函数&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FUNCTION&lt;/span&gt; test1() &lt;span class=&#34;hljs-keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;READS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SQL&lt;/span&gt; DATA # MySQL8，要加上创建类型&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; number &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; #定义变量&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;count&lt;/span&gt;(&lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; number&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;RETURNS&lt;/span&gt; number;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt;$&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用函数&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; test1();&lt;br&gt;&lt;br&gt;# 根据员工名，返回工资&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 定义函数&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FUNCTION&lt;/span&gt; test2(`name` &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;)) &lt;span class=&#34;hljs-keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;READS&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SQL&lt;/span&gt; DATA&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@salary&lt;/span&gt; :&lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; # 设置用户变量，设置局部变量也可以&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; employees.salary &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@salary&lt;/span&gt; # 赋值&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; last_name &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; `name`;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@salary&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; test2(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;K_ing&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;查看函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看函数&#34;&gt;#&lt;/a&gt; 查看函数&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;SHOW CREATE FUNCTION 函数名；&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;删除函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除函数&#34;&gt;#&lt;/a&gt; 删除函数&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;DROP FUNCTION 函数名；&lt;/mark&gt;&lt;/p&gt;
&lt;h2 id=&#34;流程控制结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流程控制结构&#34;&gt;#&lt;/a&gt; 流程控制结构&lt;/h2&gt;
&lt;h3 id=&#34;分支结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支结构&#34;&gt;#&lt;/a&gt; 分支结构&lt;/h3&gt;
&lt;h4 id=&#34;if函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#if函数&#34;&gt;#&lt;/a&gt; IF 函数&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;SELECT IF(expr1, expr2, expr3)&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;功能：实现简单的双分支，若 expr1 为 true，则返回 expr2，否则返回 expr3&lt;/p&gt;
&lt;h4 id=&#34;case结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#case结构&#34;&gt;#&lt;/a&gt; CASE 结构&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;函数，使用一：类似于Java中switch &lt;span class=&#34;hljs-keyword&#34;&gt;case&lt;/span&gt;的效果&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	格式： case 要判断的字段或表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	when 常量1 then 要显示的值或语句1;（值的时候不加&amp;#x27;;&amp;#x27;，语句的时候加&amp;#x27;;&amp;#x27;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	when 常量2 then 要显示的值或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	else 要显示的值或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	end [as new_name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary, department_id,&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt; department_id &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;40&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ELSE&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;新工资&amp;#x27;&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;# &lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;函数，使用二：类似于Java中的多重if&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	CASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	WHEN 条件1 THEN 要显示的值或语句1;（值的时候不加&amp;#x27;;&amp;#x27;，语句的时候加&amp;#x27;;&amp;#x27;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	WHEN 条件2 THEN 要显示的值1或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	ELSE 要显示的值1或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	END&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; salary,&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;12000&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; salary &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;10000&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;B&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;C&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; rank&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; employees&lt;br&gt;&lt;br&gt;## 以上是作为表达式的，也可以作为语句单独出现&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	CASE [表达式]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	WHEN 条件1 THEN 要显示的值或语句1;（值的时候不加&amp;#x27;;&amp;#x27;，语句的时候加&amp;#x27;;&amp;#x27;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	WHEN 条件2 THEN 要显示的值1或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	ELSE 要显示的值1或语句2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;	END CASE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;# 案例：创建存储过程，根据传入的成绩，显示等级&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 创建&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; grade &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt; &lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; grade &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;等级&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; grade &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;B&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;等级&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;WHEN&lt;/span&gt; grade &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;C&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;等级&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;D&amp;#x27;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;等级&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;; # 作为独立语句的时候，必须写成&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;CASE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 执行&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CALL&lt;/span&gt; test(&lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以&lt;mark&gt;作为表达式&lt;/mark&gt;，嵌套在其他语句中使用，可以&lt;mark&gt;放在任何地方&lt;/mark&gt;，BEGIN END 中或 BEGIN END 的外面&lt;/li&gt;
&lt;li&gt;可以&lt;mark&gt;作为独立的语句&lt;/mark&gt;去使用，但只能&lt;mark&gt;放在 BEGIN END 中&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;如果 WHEN 中的条件成立，则执行对应的 THEN 后面的语句，并且结束 CASE，之后的语句不会执行。如果都不满足，则执行 ELSE 中的语句&lt;/li&gt;
&lt;li&gt;ELSE 可以省略，如果 ELSE 省略了，并且所有的 WHEN 条件都不满足，则返回 NULL&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;if结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#if结构&#34;&gt;#&lt;/a&gt; IF 结构&lt;/h4&gt;
&lt;p&gt;功能：实现多重分支&lt;/p&gt;
&lt;p&gt;语法：&lt;mark&gt;IF 条件 1 THEN 语句 1; ELSEIF 条件 2 THEN 语句 2； ELSEIF 条件 3 THEN 语句 3…… END IF；&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;注意：&lt;mark&gt;只能用在 BEGIN END 中&lt;/mark&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 案例：创建存储过程，根据传入的成绩，返回等级&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 创建&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;FUNCTION&lt;/span&gt; test(grade &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;CHAR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;NO&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SQL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;	&lt;br&gt;	IF grade &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;;&lt;br&gt;	ELSEIF grade &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;B&amp;#x27;&lt;/span&gt;;&lt;br&gt;	ELSEIF grade &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;C&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;D&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; IF;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 执行&lt;/span&gt;&lt;br&gt;DELIMITER ;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; test(&lt;span class=&#34;hljs-number&#34;&gt;90&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;循环结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#循环结构&#34;&gt;#&lt;/a&gt; 循环结构&lt;/h3&gt;
&lt;h4 id=&#34;while&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#while&#34;&gt;#&lt;/a&gt; WHILE&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;[标签：] WHILE 循环条件 DO&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​				&lt;mark&gt;循环体；&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;END WHILE [标签]&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;loop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#loop&#34;&gt;#&lt;/a&gt; LOOP&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;[标签：] LOOP&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​				&lt;mark&gt;循环体；&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;END LOOP [标签]&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;可以用来模拟简单的死循环&lt;/p&gt;
&lt;h4 id=&#34;repeat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#repeat&#34;&gt;#&lt;/a&gt; REPEAT&lt;/h4&gt;
&lt;p&gt;语法：&lt;mark&gt;[标签：] REPEAT&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​				&lt;mark&gt;循环体&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;UNTIL 结束循环的条件&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​			&lt;mark&gt;END REPEAT [标签：]&lt;/mark&gt;&lt;/p&gt;
&lt;h4 id=&#34;循环控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#循环控制&#34;&gt;#&lt;/a&gt; 循环控制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;ITERATE&lt;/mark&gt;：结束本次循环，继续下一次&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;LEAVE&lt;/mark&gt;：结束当前循环&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 批量插入&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; times &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; i &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;	WHILE i &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;=&lt;/span&gt; times DO&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; admin(`user_name`, `password`)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(CONCAT(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;rose&amp;#x27;&lt;/span&gt;, i), &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;666&amp;#x27;&lt;/span&gt;);&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; i &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; i &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; WHILE;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;br&gt;# 批量插入，如果次数超过&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;，就退出&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test1(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; times &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; i &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;	tag1: WHILE i &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;=&lt;/span&gt; times DO&lt;br&gt;			&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; i &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; i &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;			IF I &lt;span class=&#34;hljs-operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;THEN&lt;/span&gt; LEAVE tag1; &lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; IF; # 配合标签跳出循环&lt;br&gt;			&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; admin(`user_name`, `password`)&lt;br&gt;			&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(CONCAT(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;JACK&amp;#x27;&lt;/span&gt;, i), &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;777&amp;#x27;&lt;/span&gt;);&lt;br&gt;		  &lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; WHILE tag1;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;三种结构对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三种结构对比&#34;&gt;#&lt;/a&gt; 三种结构对比&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;特点&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;位置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;WHILE&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;先判断后执行&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BEGIN END 之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;LOOP&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;没有条件的死循环&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BEGIN END 之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;REPEAT&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;先执行后判断&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;BEGIN END 之间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sql&#34;&gt;# 已知表stringcontent，其中字段:id 自增长，content &lt;span class=&#34;hljs-type&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;)&lt;br&gt;# 向该表插入指定个数的，随机的字符串&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 定义存储结构&lt;/span&gt;&lt;br&gt;DELIMITER $&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;PROCEDURE&lt;/span&gt; test(&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; num &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; i &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; str &lt;span class=&#34;hljs-type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;abcdefghijklmnopqrstuvwxyz&amp;#x27;&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;DECLARE&lt;/span&gt; startIndex &lt;span class=&#34;hljs-type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;	WHILE i &lt;span class=&#34;hljs-operator&#34;&gt;&amp;lt;=&lt;/span&gt; num DO&lt;br&gt;		# 产生一个随机整数，代表起始索引，范围是&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;-26&lt;/span&gt;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; startIndex &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;FLOOR&lt;/span&gt;(RAND() &lt;span class=&#34;hljs-operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;)&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; stringcontent(content) &lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;VALUES&lt;/span&gt;(SUBSTR(str, startIndex));# 这样其实没用做到随机，举个例子，将就下&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;SET&lt;/span&gt; i &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; i &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;		&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; WHILE;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;END&lt;/span&gt; $&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;-- 调用&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;完结撒花&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完结撒花&#34;&gt;#&lt;/a&gt; 完结撒花&lt;/h2&gt;
&lt;p&gt;本大三菜鸡终于学完 MySQL 基础了。。。。。。溜&lt;/p&gt;
</content>
        <category term="MySQL" />
        <category term="学习笔记" />
        <updated>2021-11-05T16:09:32.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/11/04/JavaSE/</id>
        <title>JavaSE</title>
        <link rel="alternate" href="http://example.com/2021/11/04/JavaSE/"/>
        <content type="html">&lt;h1 id=&#34;java&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt; Java&lt;/h1&gt;
&lt;h2 id=&#34;多线程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多线程&#34;&gt;#&lt;/a&gt; 多线程&lt;/h2&gt;
&lt;h3 id=&#34;线程同步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程同步&#34;&gt;#&lt;/a&gt; 线程同步&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;实现进程同步的三种方法&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;同步方法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步代码块&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReentrantLock&lt;/strong&gt;（JDK5.0 新增）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;三种方法的推荐优先顺序（从性能考虑）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ReentrantLock&lt;/strong&gt;   &amp;gt;   ** 同步代码块 **  &amp;gt;   &lt;strong&gt;同步方法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;java常用类的概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java常用类的概述&#34;&gt;#&lt;/a&gt; Java 常用类的概述&lt;/h2&gt;
&lt;h3 id=&#34;字符串相关的类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串相关的类&#34;&gt;#&lt;/a&gt; 字符串相关的类&lt;/h3&gt;
&lt;h4 id=&#34;string&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string&#34;&gt;#&lt;/a&gt; String&lt;/h4&gt;
&lt;h5 id=&#34;string类的基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string类的基本概念&#34;&gt;#&lt;/a&gt; String 类的基本概念&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/dzcgood/img-bed/raw/master/img/image-20210828233332312.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/8/28 - 23:03&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* String类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StringTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、String：字符串，用一对&amp;quot;&amp;quot;引起来表示&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、String是声明为final的，不可被继承&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、String实现了Serializable接口：表示字符串是支持序列化的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *    String实现了Comparable接口，表示String可以比较大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 4、String内部定义了final char value[]用于存储字符串数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 5、String代表一个不可变的字符序列。简称：不可变性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   体现：当对字符串重新赋值时，需要重新指定内存区域赋值，不能使用原有的value[]进行赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *        当对现有字符串进行连接操作时，也不能在原有value[]上进行拼接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *        当调用String的replace方法修改指定的字符或字符串时，也必须重新指定内存地址赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 6、通过字面量的方式给字符串赋值（区别于new Sting的方式），此时的字符串值声明在字符串常量池中，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *    字符串常量池是不会存储相同的内容的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//字面量的定义方式&lt;/span&gt;&lt;br&gt;        String s2 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s1 == s2);&lt;span class=&#34;hljs-comment&#34;&gt;//true, &amp;quot;abc&amp;quot;保存在方法区的常量池中&lt;/span&gt;&lt;br&gt;        s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s1);&lt;span class=&#34;hljs-comment&#34;&gt;//hello&lt;/span&gt;&lt;br&gt;        System.out.println(s2);&lt;span class=&#34;hljs-comment&#34;&gt;//abc&lt;/span&gt;&lt;br&gt;        String s3 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;br&gt;        s3 += &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;def&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s3);&lt;span class=&#34;hljs-comment&#34;&gt;//abcdef&lt;/span&gt;&lt;br&gt;        System.out.println(s2);&lt;span class=&#34;hljs-comment&#34;&gt;//abc&lt;/span&gt;&lt;br&gt;        String s4 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s5 = s4.replace(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;);&lt;br&gt;        System.out.println(s4);&lt;span class=&#34;hljs-comment&#34;&gt;//abc&lt;/span&gt;&lt;br&gt;        System.out.println(s5);&lt;span class=&#34;hljs-comment&#34;&gt;//mbc&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String的实例化方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、通过字面量的方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、通过new + 构造器的方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//通过字面量的方式，此时的s1和s2的数据hello声明在方法区的字符串常量池中&lt;/span&gt;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s2 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//通过new + 构造器的方式，此时的s3和s4是保存的地址值，是数据在堆空间中开辟的对象的地址值&lt;/span&gt;&lt;br&gt;        String s3 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;        String s4 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(s1 == s2);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(s1 == s3);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(s1 == s4);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(s3 == s4);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//**************************************&lt;/span&gt;&lt;br&gt;        Person p1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        Person p2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        System.out.println(p1.name.equals(p2.name));&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(p1.name == p2.name);&lt;span class=&#34;hljs-comment&#34;&gt;//true，因为是使用字面量的方式声明的字符串&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//**************************************&lt;/span&gt;&lt;br&gt;        Person p3 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        Person p4 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        System.out.println(p3.name == p4.name);&lt;span class=&#34;hljs-comment&#34;&gt;//false，因为是使用new + 构造器的方式声明的字符串&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 结论：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、常量与常量的拼接结果在常量池，且常量池不会存在相同内容的常量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、只要其中有一个是变量，结果就在堆中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、如果拼接的结果调用intern()方法，返回值就在常量池中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;javaEE&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s2 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hadoop&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s3 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;javaEEhadoop&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s4 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;javaEE&amp;quot;&lt;/span&gt; + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hadoop&amp;quot;&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//常量 + 常量，结果在常量池&lt;/span&gt;&lt;br&gt;        String s5 = s1 + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hadoop&amp;quot;&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//变量 + 常量，结果在堆&lt;/span&gt;&lt;br&gt;        String s6 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;javaEE&amp;quot;&lt;/span&gt; + s2;&lt;span class=&#34;hljs-comment&#34;&gt;//常量 + 变量，结果在堆&lt;/span&gt;&lt;br&gt;        String s7 = s1 + s2;&lt;span class=&#34;hljs-comment&#34;&gt;//变量 + 变量，结果在堆&lt;/span&gt;&lt;br&gt;        System.out.println(s3 == s4);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(s3 == s5);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(s3 == s6);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(s5 == s6);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(s3 == s7);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(s6 == s7);&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        String s8 = s5.intern();&lt;span class=&#34;hljs-comment&#34;&gt;//返回值得到的s8使用的是常量池中已经存在的&amp;quot;javaEEhadoop&amp;quot;&lt;/span&gt;&lt;br&gt;        System.out.println(s3 == s8);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        String str = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; String str1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello &amp;quot;&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//str1是常量&lt;/span&gt;&lt;br&gt;        String str2 = str1 + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(str == str2);&lt;span class=&#34;hljs-comment&#34;&gt;//true,因为str1加了final，所以是常量！！&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;change&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String str, &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] ch)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        str = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;test ok&amp;quot;&lt;/span&gt;;&lt;br&gt;        ch[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 一道恶心的面试题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 考察String的不可变性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String str = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;good&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] ch = &amp;#123; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;t&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;e&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;s&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;t&amp;#x27;&lt;/span&gt;&amp;#125;;&lt;br&gt;        change(str, ch);&lt;br&gt;        System.out.print(str);&lt;span class=&#34;hljs-comment&#34;&gt;//good&lt;/span&gt;&lt;br&gt;        System.out.println(ch);&lt;span class=&#34;hljs-comment&#34;&gt;//best&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;string类的常用api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string类的常用api&#34;&gt;#&lt;/a&gt; String 类的常用 API&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.UnsupportedEncodingException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Locale;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/8 - 11:17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* String类常用API&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StringMethodTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 较高频率的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s1.length());&lt;span class=&#34;hljs-comment&#34;&gt;//length()&lt;/span&gt;&lt;br&gt;        System.out.println(s1.charAt(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//charAt()&lt;/span&gt;&lt;br&gt;        System.out.println(s1.isEmpty());&lt;span class=&#34;hljs-comment&#34;&gt;//isEmpty()，返回str.length() == 0&lt;/span&gt;&lt;br&gt;        String s2 = s1.toLowerCase();&lt;span class=&#34;hljs-comment&#34;&gt;//toLowerCase()，返回新建的小写值&lt;/span&gt;&lt;br&gt;        System.out.println(s1);&lt;span class=&#34;hljs-comment&#34;&gt;//s1的值没有改变（不可变性）&lt;/span&gt;&lt;br&gt;        System.out.println(s2);&lt;span class=&#34;hljs-comment&#34;&gt;//hello world&lt;/span&gt;&lt;br&gt;        String s3 = s1.toUpperCase();&lt;span class=&#34;hljs-comment&#34;&gt;//toUpperCase(),返回新建的大写值&lt;/span&gt;&lt;br&gt;        String s4 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;   he  llo   world    &amp;quot;&lt;/span&gt;;&lt;br&gt;        String s5 = s3.trim();&lt;span class=&#34;hljs-comment&#34;&gt;//trim(),返回去除首尾空格后的字符串值（中间的空格不去除）&lt;/span&gt;&lt;br&gt;        System.out.println(s3);&lt;span class=&#34;hljs-comment&#34;&gt;//s3本身不改变&lt;/span&gt;&lt;br&gt;        System.out.println(s4);&lt;br&gt;        System.out.println(s1.equals(s2));&lt;span class=&#34;hljs-comment&#34;&gt;//equals()，判断字符串是否相等&lt;/span&gt;&lt;br&gt;        System.out.println(s1.equalsIgnoreCase(s2));&lt;span class=&#34;hljs-comment&#34;&gt;//equalsIgnoreCase()，判断字符串是否相等，忽略大小写&lt;/span&gt;&lt;br&gt;        String s6 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s7 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;def&amp;quot;&lt;/span&gt;;&lt;br&gt;        String s8 = s6.concat(s7);&lt;span class=&#34;hljs-comment&#34;&gt;//concat()，效果和 + 一样&lt;/span&gt;&lt;br&gt;        System.out.println(s8);&lt;span class=&#34;hljs-comment&#34;&gt;//abcdef&lt;/span&gt;&lt;br&gt;        System.out.println(s6.compareTo(s7));&lt;span class=&#34;hljs-comment&#34;&gt;//compareTo()，字符串比大小&lt;/span&gt;&lt;br&gt;        System.out.println(s1.substring(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)) ;&lt;span class=&#34;hljs-comment&#34;&gt;//substring(int index),取从index开始的子符串&lt;/span&gt;&lt;br&gt;        System.out.println(s1.substring(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;)) ;&lt;span class=&#34;hljs-comment&#34;&gt;//substring(int start, int end),取 [start, end) 的子符串&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s1.endsWith(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//endsWith(String str),判断字符串是否以str结尾&lt;/span&gt;&lt;br&gt;        System.out.println(s1.startsWith(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;he&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//startsWith(String str),判断字符串是否以str开头&lt;/span&gt;&lt;br&gt;        System.out.println(s1.startsWith(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;He&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//false，区分大小写&lt;/span&gt;&lt;br&gt;        s1.startsWith(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ll&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//startsWith(String str, int index)，判断字符串从index开始是否以str开头&lt;/span&gt;&lt;br&gt;        String s2 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;wo&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s1.contains(s2));&lt;span class=&#34;hljs-comment&#34;&gt;//contains(String str),判断字符串是否包含str&lt;/span&gt;&lt;br&gt;        System.out.println(s1.indexOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;lo&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//indexOf(String str),返回字符串第一次出现str的索引，没有则返回-1&lt;/span&gt;&lt;br&gt;        System.out.println(s1.indexOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ll&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//indexOf(String str, int startIndex)&lt;/span&gt;&lt;br&gt;                                                &lt;span class=&#34;hljs-comment&#34;&gt;// 返回从startIndex开始的str的索引，没有则返回-1&lt;/span&gt;&lt;br&gt;        String s3 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hellorworld&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s3.lastIndexOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;or&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//lastIndexOf(String str)，返回从后往前找的第一个str的索引位置&lt;/span&gt;&lt;br&gt;        System.out.println(s3.lastIndexOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;or&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//lastIndexOf(String str, int fromIndex)，&lt;/span&gt;&lt;br&gt;                                                    &lt;span class=&#34;hljs-comment&#34;&gt;//从fromIndex从右往前找，返回第一个str的索引位置&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 有关替换的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello world ll&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(s1.replace(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;l&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;g&amp;#x27;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//将所有oldChar替换成newChar&lt;/span&gt;&lt;br&gt;        System.out.println(s1);&lt;span class=&#34;hljs-comment&#34;&gt;//s1没有被改变&lt;/span&gt;&lt;br&gt;        System.out.println(s1.replace(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ll&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hh&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//也可以替换字符串（全部替换）&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//replaceAll()，正则表达式的地方再讲&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//replaceFirst()，正则表达式的地方再讲&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//matches()，判断str是否和正则表达式符合&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//split()，以正则表达式切割，返回String[]&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String与基本数据类型、包装类之间的转换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//String --&amp;gt; 基本数据类型&lt;/span&gt;&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; n1 = Integer.parseInt(s1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//基本数据类型 --&amp;gt; String&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;hljs-number&#34;&gt;12356&lt;/span&gt;;&lt;br&gt;        String s2 = String.valueOf(num);&lt;span class=&#34;hljs-comment&#34;&gt;//调用valueOf()方法&lt;/span&gt;&lt;br&gt;        String s3 = num + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//使用 + 运算符连接&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String与char[]之间的转换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test5&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//String --&amp;gt; char[]&lt;/span&gt;&lt;br&gt;        String str = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc123&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] ch = str.toCharArray();&lt;span class=&#34;hljs-comment&#34;&gt;//调用String的toCharArray()方法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; ch.length; i++) &amp;#123;&lt;br&gt;            System.out.println(ch[i]);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//char[] --&amp;gt; String：调用String的构造器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] ch2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[]&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;g&amp;#x27;&lt;/span&gt;&amp;#125;;&lt;br&gt;        String str2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(ch2);&lt;span class=&#34;hljs-comment&#34;&gt;//构造器&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String与byte[]之间的转换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 编码：字符串 --&amp;gt; 字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 解码：字节 --&amp;gt; 字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * UTF-8字符集中，一个汉字对应三个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * GBK字符集中，一个汉字对应两个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 说明：解码时，要求解码使用的字符集必须与编码时使用的字符集一致，否则会出现乱码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test6&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//编码：String --&amp;gt; byte[]&lt;/span&gt;&lt;br&gt;        String str1 = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc123中国&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] bytes = str1.getBytes();&lt;span class=&#34;hljs-comment&#34;&gt;//使用默认字符集进行编码（默认utf-8）&lt;/span&gt;&lt;br&gt;        System.out.println(Arrays.toString(bytes));&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] bytes1 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            bytes1 = str1.getBytes(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;gbk&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//使用指定字符集进行转换&lt;/span&gt;&lt;br&gt;            System.out.println(Arrays.toString(bytes1));&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//解码：byte[]  --&amp;gt; String：调用String构造器&lt;/span&gt;&lt;br&gt;        String s = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(bytes);&lt;span class=&#34;hljs-comment&#34;&gt;//使用默认字符集进行解码（默认utf-8）&lt;/span&gt;&lt;br&gt;        System.out.println(s);&lt;br&gt;        String s1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(bytes1);&lt;br&gt;        System.out.println(s1);&lt;span class=&#34;hljs-comment&#34;&gt;//使用gbk编码，却使用utf-8解码，会乱码&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            String gbk = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(bytes1, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;gbk&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//使用对应解码方法解码&lt;/span&gt;&lt;br&gt;            System.out.println(gbk);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;关于string的算法练习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于string的算法练习&#34;&gt;#&lt;/a&gt; 关于 String 的算法练习&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/10 - 16:03&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StringExer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 习题一：获取一个字符串在另一个字符串中出现的次数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;getCount&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String mainStr, String subStr)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; mainLen = mainStr.length();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; subLen = subStr.length();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(mainLen &amp;lt; subLen)&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; count = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; index = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 使用indexOf方法，若上一次目标字符串出现的位置为index，则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 下一次从index + subLen开始找，直到indexOf返回-1为止&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((index = mainStr.indexOf(subStr, index)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            count++;&lt;br&gt;            index +=subLen;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; count;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 习题二：获取两个字符串中的最大相同字串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 目前假设只有一个最大相同子串，之后讲到集合的时候，可以改进&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 思路：将短的字符串进行长度依次递减的字串与较长的字串比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getMaxSameString&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String str1, String str2)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(str1 == &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt; || str2 == &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &amp;#125;&lt;br&gt;        String maxStr = (str1.length() &amp;gt;= str2.length()) ? str1 : str2;&lt;br&gt;        String minStr = (str1.length() &amp;lt; str2.length()) ? str1 : str2;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len = minStr.length();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//滑动窗口法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; len ; i++) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; start = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, end = len - i; end &amp;lt;= len; start++, end++)&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//关键点&lt;/span&gt;&lt;br&gt;                String subStr = minStr.substring(start, end);&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(maxStr.contains(subStr))&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; subStr;&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;stringbuffer-stringbuilder&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#stringbuffer-stringbuilder&#34;&gt;#&lt;/a&gt; StringBuffer、StringBuilder&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/9 - 11:05&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 关于StringBuffer和StringBuilder类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 对比StringBuffer，StringBuilder，String的效率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       答：StringBuilder &amp;gt; StringBuffer &amp;gt; String&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StringBuffer_StringBuilderTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String,StringBuffer,StringBuilder之间的区别？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String:不可变；底层使用final char[]存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * StringBuffer：可变，效率有点低，线程安全；底层使用char[]存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * StringBuilder：可变，jdk5.0新增效率比StringBuffer高，线程不安全；底层使用char[]存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 源码分析：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String str1 = new String();//底层：new char[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * String str2 = new String(&amp;quot;abc&amp;quot;);//底层：new char[]&amp;#123;&amp;#x27;a&amp;#x27;, &amp;#x27;b&amp;#x27;, &amp;#x27;c&amp;#x27;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * StringBuffer str3 = new StringBuffer();//char[] value = new char[16];底层创建了一个长度是16的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * str3.append(&amp;#x27;a&amp;#x27;);//value[0] = &amp;#x27;a&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * str3.append(&amp;#x27;b&amp;#x27;);//value[1] = &amp;#x27;b&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * StringBuffer sb2 = new StringBuffer(&amp;quot;abc&amp;quot;);//char[] value1 = new char[3 + 16];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *                                               底层创建了长度是”abc“.length()+16的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 问题1：sb2.length()的输出是3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 问题2：扩容问题：如果要添加的数据底层数组盛不下了，就需要扩容低层的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *                默认情况下扩容位原来容量的2倍 + 2，同时将原有数组中的元素复制到新的数组中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *       指导意义：开发中建议使用StringBuffer(int capacity)或StringBuilder(int capacity)指定数组容量，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *                避免多次扩容，导致效率降低&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        StringBuffer sb1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; StringBuffer(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;);&lt;br&gt;        sb1.setCharAt(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//sb1本身被改变&lt;/span&gt;&lt;br&gt;        System.out.println(sb1);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * StringBuffer,StringBuilder中新增的方法，以StringBuffer为例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        StringBuffer s1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; StringBuffer(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;);&lt;br&gt;        s1.append(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//append()&lt;/span&gt;&lt;br&gt;        s1.append(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;);&lt;br&gt;        s1.append(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//结果都是在末尾加上字符1&lt;/span&gt;&lt;br&gt;        System.out.println(s1);&lt;br&gt;        s1.delete(&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//delete(int start, int end),删除[start, end)之间的字符串&lt;/span&gt;&lt;br&gt;        s1.replace(&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//replace(start, end, str)，将[start, end)之间的字符串换成str&lt;/span&gt;&lt;br&gt;        s1.insert(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//insert(int index,str)，在指定位置插入&lt;/span&gt;&lt;br&gt;        System.out.println(s1);&lt;br&gt;        s1.reverse();&lt;span class=&#34;hljs-comment&#34;&gt;//reverse()，字符串逆序&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//substring()，取字串&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//length()&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//charAt()&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//setCharAt(int index, char ch)修改指定位置字符&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 总结：关注以下几个方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 增：append&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 删：delete&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 改：replace, setCharAt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 查：substring, charAt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 长度：length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 遍历：toString, for + charAt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 面试题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String str = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        StringBuffer sb = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; StringBuffer();&lt;br&gt;        sb.append(str);&lt;span class=&#34;hljs-comment&#34;&gt;//不报错&lt;/span&gt;&lt;br&gt;        System.out.println(sb.length());&lt;span class=&#34;hljs-comment&#34;&gt;//4&lt;/span&gt;&lt;br&gt;        System.out.println(sb);&lt;span class=&#34;hljs-comment&#34;&gt;//&amp;quot;null&amp;quot;，实际上是把str当成字符串”null“加入了sb&lt;/span&gt;&lt;br&gt;        StringBuffer sb1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; StringBuffer(str);&lt;span class=&#34;hljs-comment&#34;&gt;//报错，空指针异常&lt;/span&gt;&lt;br&gt;        										 &lt;span class=&#34;hljs-comment&#34;&gt;//因为构造器会调用str.length()方法，这里导致空指针&lt;/span&gt;&lt;br&gt;        System.out.println(sb1);&lt;span class=&#34;hljs-comment&#34;&gt;//执行不到此处，上方异常未处理&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;jdk8之前的时间api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk8之前的时间api&#34;&gt;#&lt;/a&gt; JDK8 之前的时间 API&lt;/h3&gt;
&lt;h4 id=&#34;system静态方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#system静态方法&#34;&gt;#&lt;/a&gt; System 静态方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//1、System类中的currentTimeMillis()&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;long&lt;/span&gt; time = System.currentTimeMillis();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//返回当前时间与1970年1月1日0时0分0秒之间以毫秒为单位的时间差&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//成为时间戳&lt;/span&gt;&lt;br&gt;        System.out.println(time);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;date类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#date类&#34;&gt;#&lt;/a&gt; Date 类&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Date;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/9 - 17:16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* JDK 8之前日期和时间的API测试&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DateTimeTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//1、System类中的currentTimeMillis()&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;long&lt;/span&gt; time = System.currentTimeMillis();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//返回当前时间与1970年1月1日0时0分0秒之间以毫秒为单位的时间差&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//成为时间戳&lt;/span&gt;&lt;br&gt;        System.out.println(time);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * java.util.Date类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *       | --- java.sql.Date类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、两个构造器的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、两个方法的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *      &amp;gt; toString():显示当前的年月日时分秒&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *      &amp;gt; getTime()：获取当前Date对象对应的时间戳&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、java.sql.Date对应数据库中的日期变量，和数据库交互时才会用到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *      &amp;gt; 如何实例化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *           &amp;gt; java.sql.Date date = new java.sql.Date(long date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *      &amp;gt; 如何将java.util.Date转换成java.sql.Date对象？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *           &amp;gt;方法一：强转（会报错）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *           &amp;gt;方法二：java.sql.Date date = new java.sql.Date(new java.util.Date().getTime());通过时间戳&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器一，Date()，创建一个对应当前时间的Date对象&lt;/span&gt;&lt;br&gt;        Date date1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date();&lt;br&gt;        System.out.println(date1);&lt;span class=&#34;hljs-comment&#34;&gt;//Thu Sep 09 17:23:49 CST 2021&lt;/span&gt;&lt;br&gt;        System.out.println(date1.getTime());&lt;span class=&#34;hljs-comment&#34;&gt;//获取当前Date对象对应的时间戳&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器二，Date(long date)，创建指定毫秒数的Date对象&lt;/span&gt;&lt;br&gt;        Date date = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date(&lt;span class=&#34;hljs-number&#34;&gt;1631179672631L&lt;/span&gt;);&lt;br&gt;        System.out.println(date1);&lt;br&gt;        System.out.println(date1.getTime());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建java.sql.Date类对象&lt;/span&gt;&lt;br&gt;        java.sql.Date date2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; java.sql.Date(&lt;span class=&#34;hljs-number&#34;&gt;1631179672631L&lt;/span&gt;);&lt;br&gt;        System.out.println(date2);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-09&lt;/span&gt;&lt;br&gt;        System.out.println(date2.getTime());&lt;span class=&#34;hljs-comment&#34;&gt;//1631179672631&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;calendar类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#calendar类&#34;&gt;#&lt;/a&gt; Calendar 类&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs JAVA&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * java.util.Calendar类（日历类，抽象类）的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 注意：获取月份时，1月是0，二月是1，以此类推，12月是11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 	   获取星期时，周日是1，周一是2，以此类推，周六是7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//实例化&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式一：创建其子类的对象&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式二：调用其静态方法getInstance()方法&lt;/span&gt;&lt;br&gt;        Calendar calendar = Calendar.getInstance();&lt;span class=&#34;hljs-comment&#34;&gt;//返回的是java.util.GregorianCalendar类对象&lt;/span&gt;&lt;br&gt;                                                &lt;span class=&#34;hljs-comment&#34;&gt;//对应当前时间&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//常用方法：&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//get()&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; days = calendar.get(Calendar.DAY_OF_MONTH);&lt;span class=&#34;hljs-comment&#34;&gt;//今天是这个月的第几天&lt;/span&gt;&lt;br&gt;        System.out.println(days);&lt;span class=&#34;hljs-comment&#34;&gt;//13&lt;/span&gt;&lt;br&gt;        System.out.println(calendar.get(Calendar.DAY_OF_YEAR));&lt;span class=&#34;hljs-comment&#34;&gt;//今天是今年的第几天,256&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//set()&lt;/span&gt;&lt;br&gt;        calendar.set(Calendar.DAY_OF_MONTH, &lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//calendar类对象本身的信息被修改（类信息改成当前是这个月的第22天）&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//add()&lt;/span&gt;&lt;br&gt;        calendar.add(Calendar.DAY_OF_MONTH,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//在现有这个月的第几天上，加了三天，变成第25天&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getTime()，用于日历类 --&amp;gt; Date类&lt;/span&gt;&lt;br&gt;        Date date = calendar.getTime();&lt;br&gt;        System.out.println(date);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//setTime()，用于Date --&amp;gt; 日历类&lt;/span&gt;&lt;br&gt;        calendar.setTime(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date());&lt;br&gt;        System.out.println(calendar.get(Calendar.DAY_OF_MONTH));&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;simpledateformat类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#simpledateformat类&#34;&gt;#&lt;/a&gt; SimpleDateFormat 类&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.text.ParseException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.text.SimpleDateFormat;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Date;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/10 - 17:36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* JDK8之前的时间API测试&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、System类中currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、java.util.Date和其子类java.sql.Date&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、SimpleDateFormat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、Calendar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DateTimeTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * SimpleDateFormat的使用：SimpleDateFormat对日期Date类的格式化和解析&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、两个操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   1.1 格式化：日期 --&amp;gt; 字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   1.2 解析：字符串 --&amp;gt; 日期&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、SimpleDateFormat的实例化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//实例化SimpleDateFormat：使用默认构造器&lt;/span&gt;&lt;br&gt;        SimpleDateFormat sdf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; SimpleDateFormat();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//格式化：日期 --&amp;gt; 字符串&lt;/span&gt;&lt;br&gt;        Date date = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date();&lt;br&gt;        System.out.println(date);&lt;span class=&#34;hljs-comment&#34;&gt;//Fri Sep 10 17:42:39 CST 2021&lt;/span&gt;&lt;br&gt;        String format = sdf.format(date);&lt;span class=&#34;hljs-comment&#34;&gt;//格式化返回的是字符串&lt;/span&gt;&lt;br&gt;        System.out.println(format);&lt;span class=&#34;hljs-comment&#34;&gt;//21-9-10 下午5:42&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//解析：字符串 --&amp;gt; 日期&lt;/span&gt;&lt;br&gt;        String str = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;21-9-12 上午1:00&amp;quot;&lt;/span&gt;;&lt;br&gt;        Date date1 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            date1 = sdf.parse(str);&lt;span class=&#34;hljs-comment&#34;&gt;//parse方法会抛出异常，需要try-catch&lt;/span&gt;&lt;br&gt;            System.out.println(date1);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (ParseException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;            实例化SimpleDateFormat：使用带参数的构造器（可以去API里面找）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;            指定的构造器可以使用指定的格式进行格式化和解析&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        */&lt;/span&gt;&lt;br&gt;        SimpleDateFormat sdf1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;yyyyy.MMMMM.dd GGG hh:mm aaa&amp;quot;&lt;/span&gt;);&lt;br&gt;        String format1 = sdf1.format(date);&lt;br&gt;        System.out.println(format1);&lt;span class=&#34;hljs-comment&#34;&gt;//02021.九月.12 公元 01:07 上午&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   几个常用的格式:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   y：年&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   M：月&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   d：日&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   h：时&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   m：分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   s：秒&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        SimpleDateFormat sdf2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//开发中喜欢用这种&lt;/span&gt;&lt;br&gt;        System.out.println(sdf2.format(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date()));&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-12 01:11:25&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//解析，必须使用创建该对象时指定的格式&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//sdf2只能识别&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;格式的时间&lt;/span&gt;&lt;br&gt;            Date date2 = sdf2.parse(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2020-01-02 23:32:11&amp;quot;&lt;/span&gt;);&lt;br&gt;            System.out.println(date2);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (ParseException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 练习一：字符串”2020-09-08“转换成java.sql.Date类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 练习二：从1990-01-01开始，”三天打鱼，两天晒网“。问之后的某年某月某日，渔夫是在打鱼，还是在晒网&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *        思路：先求得题目日期距离1990-01-01年有多少天，然后取模5运算&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *             总天数求法：利用天数求得时间戳，二者相减。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *             总天数 = (date1.getTime() - date2.getTime()) / (1000 * 60 *60 *24) + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *             总天数 % 5 == 0，4 在晒网&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *             总天数 % 5 == 1，2，3 在打鱼&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        SimpleDateFormat sdf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;yyyy-MM-dd&amp;quot;&lt;/span&gt;);&lt;br&gt;        Date date = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;           date = sdf.parse(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2020-09-08&amp;quot;&lt;/span&gt;);&lt;br&gt;            System.out.println(date);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (ParseException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;        java.sql.Date birthDate = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; java.sql.Date(date.getTime());&lt;span class=&#34;hljs-comment&#34;&gt;//java.sql.Date类的带参构造器&lt;/span&gt;&lt;br&gt;        System.out.println(birthDate);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;jdk8中新日期时间api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk8中新日期时间api&#34;&gt;#&lt;/a&gt; JDK8 中新日期时间 API&lt;/h3&gt;
&lt;h5 id=&#34;jdk8时间api出现的原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk8时间api出现的原因&#34;&gt;#&lt;/a&gt; JDK8 时间 API 出现的原因&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;JDK8DateTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * java.util.Date类的缺点（JDK8时间API出现的原因）:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、偏移性：时间是从1900年开始的，月份是从0开始的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、格式化(SimpleDateFormat)只对Date有用，Calendar则不行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、不是线程安全的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 4、不能处理闰秒&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//按照偏移性，表示2021年9月13日应该这样表示&lt;/span&gt;&lt;br&gt;        Date date = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date(&lt;span class=&#34;hljs-number&#34;&gt;2021&lt;/span&gt; - &lt;span class=&#34;hljs-number&#34;&gt;1900&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt; - &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//此方法已过时&lt;/span&gt;&lt;br&gt;        System.out.println(date);&lt;span class=&#34;hljs-comment&#34;&gt;//Mon Sep 13 00:00:00 CST 2021&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;localdate-localtime-localdatetime&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#localdate-localtime-localdatetime&#34;&gt;#&lt;/a&gt; LocalDate、LocalTime、LocalDateTime&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * LocalDate、LocalTime、LocalDateTime类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   1、LocalDateTime类使用比其他两个类较多&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   2、类似于Calendar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 实例化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//now()：获取当前的日期、时间、日期时间&lt;/span&gt;&lt;br&gt;        LocalDate localDate = LocalDate.now();&lt;span class=&#34;hljs-comment&#34;&gt;//静态方法&lt;/span&gt;&lt;br&gt;        LocalTime localTime = LocalTime.now();&lt;br&gt;        LocalDateTime localDateTime = LocalDateTime.now();&lt;br&gt;        System.out.println(localDate);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-20&lt;/span&gt;&lt;br&gt;        System.out.println(localTime);&lt;span class=&#34;hljs-comment&#34;&gt;//22:17:04.923&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-20T22:17:04.923&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//of():不用考虑偏移量&lt;/span&gt;&lt;br&gt;        LocalDateTime localDateTime1 = LocalDateTime.of(&lt;span class=&#34;hljs-number&#34;&gt;2021&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//2021年9月20日22时20分&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * getXxx()：以LocalDateTime类为例（三各类都有共同方法），获取相关的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime.getDayOfMonth());&lt;span class=&#34;hljs-comment&#34;&gt;//20&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime.getDayOfWeek());&lt;span class=&#34;hljs-comment&#34;&gt;//MONDAY&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime.getDayOfYear());&lt;span class=&#34;hljs-comment&#34;&gt;//263&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime.getMonth());&lt;span class=&#34;hljs-comment&#34;&gt;//SEPTEMBER&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime.getMonthValue());&lt;span class=&#34;hljs-comment&#34;&gt;//9&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime.getMinute());&lt;span class=&#34;hljs-comment&#34;&gt;//23&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * withXxx()：类似于set方法，设置相关的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        LocalDateTime localDateTime2 = localDateTime.withDayOfMonth(&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//此方法设置日期&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime);&lt;span class=&#34;hljs-comment&#34;&gt;//不可变性，localDateTime未改变&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime2);&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 加减操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 加：plusXxx()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 减：minusXxx()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        LocalDateTime localDateTime3 = localDateTime.plusDays(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//不可变性&lt;/span&gt;&lt;br&gt;        System.out.println(localDateTime);&lt;br&gt;        System.out.println(localDateTime3);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        localDateTime.minusXxx()&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;instant&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#instant&#34;&gt;#&lt;/a&gt; Instant&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.Instant;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.OffsetDateTime;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.ZoneOffset;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/20 - 22:41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InstantTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * Instant类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//now()：获取本初子午线对应的标准时间&lt;/span&gt;&lt;br&gt;        Instant instant = Instant.now();&lt;span class=&#34;hljs-comment&#34;&gt;//静态方法&lt;/span&gt;&lt;br&gt;        System.out.println(instant);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-20T14:46:15.739Z，对应的是UTC时间，比北京时间晚八个小时&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//添加时间的偏移量&lt;/span&gt;&lt;br&gt;        OffsetDateTime offsetDateTime = instant.atOffset(ZoneOffset.ofHours(&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;));&lt;br&gt;        System.out.println(offsetDateTime);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-20T22:46:15.739+08:00&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//toEpochMilli():获取瞬时点对应自1970年1月1日0时0分的毫秒数,类似于Date类的getTime()&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;long&lt;/span&gt; l = instant.toEpochMilli();&lt;br&gt;        System.out.println(l);&lt;span class=&#34;hljs-comment&#34;&gt;//1632149304356&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//ofEpochMilli():通过给定的毫秒数，获取Instant实例。 类似于Date(long milli)&lt;/span&gt;&lt;br&gt;        Instant instant1 = Instant.ofEpochMilli(&lt;span class=&#34;hljs-number&#34;&gt;1632149304356L&lt;/span&gt;);&lt;br&gt;        System.out.println(instant1);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;datetimeformatter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#datetimeformatter&#34;&gt;#&lt;/a&gt; DateTimeFormatter&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.LocalDate;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.LocalDateTime;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.format.DateTimeFormatter;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.format.FormatStyle;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.time.temporal.TemporalAccessor;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/23 - 16:10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* DateTimeFormatter类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、类似于SimpleDateFormatter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DateTimeFormatterTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//实例化方式&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式1：预定义的格式（ISO_LOCAL_DATE_TIME, ISO_LOCAL_DATE, ISO_LOCAL_TIME）&lt;/span&gt;&lt;br&gt;        DateTimeFormatter formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//格式化:日期 --&amp;gt; 字符串&lt;/span&gt;&lt;br&gt;        LocalDateTime localDateTime = LocalDateTime.now();&lt;br&gt;        String format = formatter.format(localDateTime);&lt;br&gt;        System.out.println(localDateTime);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-23T16:14:51.195&lt;/span&gt;&lt;br&gt;        System.out.println(format);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-23T16:14:51.195&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//解析：字符串 --&amp;gt; 日期&lt;/span&gt;&lt;br&gt;        TemporalAccessor parse = formatter.parse(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2021-09-23T16:14:51.195&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(parse);&lt;span class=&#34;hljs-comment&#34;&gt;//&amp;#123;&amp;#125;,ISO resolved to 2021-09-23T16:14:51.195&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//实例化方式二:本地化相关的格式，如ofLocalizedDateTime(FormatStyle.LONG)&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//FormatStyle.LONG, FormatStyle.MEDIUM, FormatStyle.SHORT: 适用于LocalDateTime&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//形参不同，格式化后的格式不同&lt;/span&gt;&lt;br&gt;        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT);&lt;br&gt;        String format1 = dateTimeFormatter.format(localDateTime);&lt;br&gt;        System.out.println(format1);&lt;span class=&#34;hljs-comment&#34;&gt;//21-9-23 下午4:24&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//本地化相关的格式，ofLocalizedDate()&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//FormatStyle.FULL, FormatStyle.LONG, FormatStyle.MEDIUM, FormatStyle.SHORT: 适用于LocalDate&lt;/span&gt;&lt;br&gt;        DateTimeFormatter dateTimeFormatter1 = DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL);&lt;br&gt;        String format2 = dateTimeFormatter1.format(LocalDate.now());&lt;br&gt;        System.out.println(format2);&lt;span class=&#34;hljs-comment&#34;&gt;//2021年9月23日 星期四&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//重点： 实例化方式三，自定义的格式，如ofPattern(&amp;quot;yyyy-MM-dd hh:mm:ss E &amp;quot;)&lt;/span&gt;&lt;br&gt;        DateTimeFormatter dateTimeFormatter2 = DateTimeFormatter.ofPattern(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;);&lt;br&gt;        String format3 = dateTimeFormatter2.format(LocalDateTime.now());&lt;br&gt;        System.out.println(format3);&lt;span class=&#34;hljs-comment&#34;&gt;//2021-09-23 04:45:20 (十二小时制)&lt;/span&gt;&lt;br&gt;        TemporalAccessor parse1 = dateTimeFormatter2.parse(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2021-09-23 04:45:20&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//&amp;#123;SecondOfMinute=20, MinuteOfHour=45, MicroOfSecond=0, NanoOfSecond=0, HourOfAmPm=4, MilliOfSecond=0&amp;#125;,ISO resolved to 2021-09-23&lt;/span&gt;&lt;br&gt;        System.out.println(parse1);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;java比较器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java比较器&#34;&gt;#&lt;/a&gt; Java 比较器&lt;/h3&gt;
&lt;h4 id=&#34;comparable接口自然排序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#comparable接口自然排序&#34;&gt;#&lt;/a&gt; Comparable 接口：自然排序&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/23 - 17:04&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* Java比较器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、说明：Java中的对象，正常情况下，只能进行比较 == 或 != 。 不能使用 &amp;gt; 或 &amp;lt; 的，但是在开发场景中，我们需要对多个对象进行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           排序，言外之意，就需要比较对象的大小。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           如何实现？使用两个接口中的任何一个：Comparable, Comparator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、Comparable接口的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CompareTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * Comparable使用的举例：自然排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、String, 包装类等实现了Comparable接口，重写了compareTo()方法，给出了比较两个对象大小的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、重写compareTo()接口的规则：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   如果当前对象this大于形参对象obj，则返回正整数；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   如果当前对象this小于形参对象obj，则返回负整数；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   如果当前对象this等于形参对象obj，则返回0。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、 对于自定义类来说，如果需要排序，我们可以让自定义类实现Comparable接口，重写compareTo()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   在compareTo()方法中指明如何排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;DD&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;&amp;#125;;&lt;br&gt;        Arrays.sort(arr);&lt;span class=&#34;hljs-comment&#34;&gt;//默认从小到大排序&lt;/span&gt;&lt;br&gt;        System.out.println(Arrays.toString(arr));&lt;span class=&#34;hljs-comment&#34;&gt;//[AA, BB, DD]&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Goods[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods[&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;];&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;lenoveMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;34&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;dellMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;43&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;xiaomiMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;312&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;huaweiMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;65&lt;/span&gt;);&lt;br&gt;        Arrays.sort(arr);&lt;br&gt;        System.out.println(Arrays.toString(arr));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Goods&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Comparable&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; String name;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; price;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Goods&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name, &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; price)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.price = price;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Goods&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; name;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;getPrice&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; price;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;setPrice&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; price)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.price = price;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Goods&amp;#123;&amp;quot;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;name=&amp;#x27;&amp;quot;&lt;/span&gt; + name + &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;\&amp;#x27;&amp;#x27;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, price=&amp;quot;&lt;/span&gt; + price +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//指明商品比较大小的方式：先按照价格从低到高排序，价格一样的按照商品名称进行排序&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compareTo&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; Goods)&amp;#123;&lt;br&gt;            Goods goods = (Goods)o;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.price &amp;gt; goods.price)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;            &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.price &amp;lt; goods.price)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;            &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//                return 0;&lt;/span&gt;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name.compareTo(goods.name);&lt;span class=&#34;hljs-comment&#34;&gt;//价格一样的按照名称排序&lt;/span&gt;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式二&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        return Double.compare(this.price, goods.price);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;传入的数据类型不一致！&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;comparator接口定制排序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#comparator接口定制排序&#34;&gt;#&lt;/a&gt; Comparator 接口：定制排序&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Comparator;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/23 - 17:46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* java.util.Comparator接口的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、背景：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   当元素的类型没有实现java.lang.Comparable接口而又不方便修改代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   或者实现了java.lang.Comparable接口的排序规则不适合当前的操作，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   那么就可以考虑使用Comparator的对象来排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、重写compare(Object o1, Object o2)方法，比较o1和o2的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果方法返回正整数，则表示o1大于o2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果方法返回负整数，则表示o1小于o2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果方法返回0，则表示o1等于o2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、Comparable与Comparator的对比&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、Comparable接口的方式一旦指定，保证Comparable接口实现类的对象在任何位置都可以比较大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、Comparator接口属于临时性的比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CompareToTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Comparator用于String类&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;DD&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;&amp;#125;;&lt;br&gt;        Arrays.sort(arr, &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator()&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o1, Object o2)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o1 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; String &amp;amp;&amp;amp; o2 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; String)&amp;#123;&lt;br&gt;                    String s1 = (String)o1;&lt;br&gt;                    String s2 = (String)o2;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -s1.compareTo(s2);&lt;span class=&#34;hljs-comment&#34;&gt;//按照从大到小排&lt;/span&gt;&lt;br&gt;                &amp;#125;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;输入的数据类型不一致&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;);&lt;br&gt;        System.out.println(Arrays.toString(arr));&lt;span class=&#34;hljs-comment&#34;&gt;//[DD, BB, AA]&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Comparator用于自定义类&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Goods[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods[&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;];&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;lenoveMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;34&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;dellMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;43&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;xiaomiMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;312&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;huaweiMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;65&lt;/span&gt;);&lt;br&gt;        Arrays.sort(arr, &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator&amp;lt;Goods&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//按照名称从大大小排序。名称相同的按价格从大到小排序&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Goods o1, Goods o2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o1.getName().equals(o2.getName()))&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -Double.compare(o1.getPrice(), o2.getPrice());&lt;br&gt;                &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -o1.getName().compareTo(o2.getName());&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;);&lt;br&gt;        System.out.println(Arrays.toString(arr));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Comparator;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/9/23 - 17:46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* java.util.Comparator接口的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、背景：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   当元素的类型没有实现java.lang.Comparable接口而又不方便修改代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   或者实现了java.lang.Comparable接口的排序规则不适合当前的操作，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   那么就可以考虑使用Comparator的对象来排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、重写compare(Object o1, Object o2)方法，比较o1和o2的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果方法返回正整数，则表示o1大于o2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果方法返回负整数，则表示o1小于o2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果方法返回0，则表示o1等于o2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、Comparable与Comparator的对比&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、Comparable接口的方式一旦指定，保证Comparable接口实现类的对象在任何位置都可以比较大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、Comparator接口属于临时性的比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CompareToTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Comparator用于String类&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        String[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;DD&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;&amp;#125;;&lt;br&gt;        Arrays.sort(arr, &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator()&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o1, Object o2)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o1 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; String &amp;amp;&amp;amp; o2 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; String)&amp;#123;&lt;br&gt;                    String s1 = (String)o1;&lt;br&gt;                    String s2 = (String)o2;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -s1.compareTo(s2);&lt;span class=&#34;hljs-comment&#34;&gt;//按照从大到小排&lt;/span&gt;&lt;br&gt;                &amp;#125;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;输入的数据类型不一致&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;);&lt;br&gt;        System.out.println(Arrays.toString(arr));&lt;span class=&#34;hljs-comment&#34;&gt;//[DD, BB, AA]&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Comparator用于自定义类&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Goods[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods[&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;];&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;lenoveMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;34&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;dellMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;43&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;xiaomiMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;312&lt;/span&gt;);&lt;br&gt;        arr[&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;] = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Goods(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;huaweiMouse&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;65&lt;/span&gt;);&lt;br&gt;        Arrays.sort(arr, &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator&amp;lt;Goods&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//按照名称从大大小排序。名称相同的按价格从大到小排序&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Goods o1, Goods o2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o1.getName().equals(o2.getName()))&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -Double.compare(o1.getPrice(), o2.getPrice());&lt;br&gt;                &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -o1.getName().compareTo(o2.getName());&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;);&lt;br&gt;        System.out.println(Arrays.toString(arr));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;system类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#system类&#34;&gt;#&lt;/a&gt; System 类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//System类&lt;/span&gt;&lt;br&gt;   &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;   &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;       &lt;span class=&#34;hljs-comment&#34;&gt;//getProperty(),参数有java.version, java.home, os.name, os.version, user.name, user.dir&lt;/span&gt;&lt;br&gt;       String property = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;java.version&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//java版本&lt;/span&gt;&lt;br&gt;       System.out.println(property);&lt;span class=&#34;hljs-comment&#34;&gt;//1.8.0_291&lt;/span&gt;&lt;br&gt;       String property1 = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;java.home&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//javahome的路径&lt;/span&gt;&lt;br&gt;       System.out.println(property1);&lt;span class=&#34;hljs-comment&#34;&gt;//C:\Program Files\Java\jdk1.8.0_291\jre&lt;/span&gt;&lt;br&gt;       String property2 = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;os.name&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//系统名&lt;/span&gt;&lt;br&gt;       System.out.println(property2);&lt;span class=&#34;hljs-comment&#34;&gt;//Windows 10&lt;/span&gt;&lt;br&gt;       String property3 = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;os.version&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//系统版本&lt;/span&gt;&lt;br&gt;       System.out.println(property3);&lt;span class=&#34;hljs-comment&#34;&gt;//10.0&lt;/span&gt;&lt;br&gt;       String property4 = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;user.name&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//系统用户名&lt;/span&gt;&lt;br&gt;       System.out.println(property4);&lt;span class=&#34;hljs-comment&#34;&gt;//邓智超&lt;/span&gt;&lt;br&gt;       String property5 = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;user.home&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//用户路径&lt;/span&gt;&lt;br&gt;       System.out.println(property5);&lt;span class=&#34;hljs-comment&#34;&gt;//C:\Users\DzcGood&lt;/span&gt;&lt;br&gt;       String property6 = System.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;user.dir&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//当前工作路径&lt;/span&gt;&lt;br&gt;       System.out.println(property6);&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day19&lt;/span&gt;&lt;br&gt;   &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;math类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#math类&#34;&gt;#&lt;/a&gt; Math 类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;/Math类&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 常用方法：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * abs 绝对值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * acos, asin, atan, sin, cos, tan 三角函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * sqrt 平方根&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * pow(double a, double b) a的b次幂&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * log 自然对数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * exp e为低指数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * max(double a, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * min(double a, double b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * random() 返回[0.0, 1.0)的随机数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * long round(double a) double型数据a转换为long型(四舍五入)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * toDegrees(double angrad) 弧度 -&amp;gt; 角度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * toRadians(double angdeg) 角度 -&amp;gt; 弧度 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;biginteger和bigdecimal&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#biginteger和bigdecimal&#34;&gt;#&lt;/a&gt; BigInteger 和 BigDecimal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;BigInteger 和 BigDecimal 可以用来表示 long 和 double 表示不了的大数，可以任意大小，任意精度。商业计算中，要求数字精度比较高，故用到 java.math.BigDecimal。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//BigInteger和BigDecimal&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;      BigInteger bi = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BigInteger(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;12435678765432456789876543234565434567890987654345654&amp;quot;&lt;/span&gt;);&lt;br&gt;      BigDecimal bd = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1345.54232&amp;quot;&lt;/span&gt;);&lt;br&gt;      BigDecimal bd2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;11&amp;quot;&lt;/span&gt;);&lt;br&gt;      System.out.println(bi);&lt;br&gt;      System.out.println(bd.divide(bd2, BigDecimal.ROUND_HALF_UP));&lt;span class=&#34;hljs-comment&#34;&gt;//四舍五入的方式&lt;/span&gt;&lt;br&gt;      System.out.println(bd.divide(bd2, &lt;span class=&#34;hljs-number&#34;&gt;25&lt;/span&gt;, BigDecimal.ROUND_HALF_UP));&lt;span class=&#34;hljs-comment&#34;&gt;//四舍五入的方式，保留25位小数&lt;/span&gt;&lt;br&gt;  &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;枚举类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#枚举类&#34;&gt;#&lt;/a&gt; 枚举类&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、枚举类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、枚举类的理解：类的对象只有有限个，确定的，我们称此类位枚举类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、当需要定义一组常量时，强烈建议使用枚举类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3、如果枚举类中只有一个对象，则可以作为单例模式的实现方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、如何定义枚举类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   方式一：JDK5.0之前，自定义枚举类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   方式二：JDK5.0之后，可以使用enum关键字定义枚举类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 三、Enum类的常用方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、values()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、valueOf()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3、toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 四、使用enum关键字定义的枚举类实现接口的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、情况一：实现接口，在enum类中实现抽象方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、情况二:让枚举类的对象，分别去实现接口中的抽象方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;jdk50之前声明枚举类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk50之前声明枚举类&#34;&gt;#&lt;/a&gt; JDK5.0 之前声明枚举类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;/自定义枚举类&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Season&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//1、声明Season对象的属性:用private final修饰&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; String seasonName;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; String seasonDesc;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//2、私有化类的构造器&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Season&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String seasonName, String seasonDesc)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.seasonName = seasonName;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.seasonDesc = seasonDesc;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//3、提供当前枚举类的多个对象，声明为public static final&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; Season SPRING = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Season(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;春天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;春暖花开&amp;quot;&lt;/span&gt;);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; Season SUMMER = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Season(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;夏天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;夏日炎炎&amp;quot;&lt;/span&gt;);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; Season AUTUMN = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Season(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;秋天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;秋高气爽&amp;quot;&lt;/span&gt;);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; Season WINTER = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Season(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;冬天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;冰天雪地&amp;quot;&lt;/span&gt;);&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//其他诉求：获取枚举类对象的属性&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getSeasonName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; seasonName;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getSeasonDesc&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; seasonDesc;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Season&amp;#123;&amp;quot;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;seasonName=&amp;#x27;&amp;quot;&lt;/span&gt; + seasonName + &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;\&amp;#x27;&amp;#x27;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, seasonDesc=&amp;#x27;&amp;quot;&lt;/span&gt; + seasonDesc + &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;\&amp;#x27;&amp;#x27;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;用enum关键字声明枚举类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用enum关键字声明枚举类&#34;&gt;#&lt;/a&gt; 用 enum 关键字声明枚举类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Info&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//使用enum定义枚举类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Season1&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Info&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//1、提供当前枚举类的多个对象，对象之间用&amp;quot;,隔开&amp;quot;，最后一个对象以&amp;quot;;&amp;quot;结束&lt;/span&gt;&lt;br&gt;    SPRING(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;春天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;春暖花开&amp;quot;&lt;/span&gt;)&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//鸽子实现接口中的方法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;春天在哪里&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;,&lt;br&gt;    SUMMER(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;夏天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;夏日炎炎&amp;quot;&lt;/span&gt;)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;宁静的夏天&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;,&lt;br&gt;    AUTUMN(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;秋天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;秋高气爽&amp;quot;&lt;/span&gt;)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;秋天是分手的季节&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;,&lt;br&gt;    WINTER(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;冬天&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;冰天雪地&amp;quot;&lt;/span&gt;)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;大雪纷飞&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//2、声明Season对象的属性:用private final修饰&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; String seasonName;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; String seasonDesc;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//2、私有化类的构造器&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Season1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String seasonName, String seasonDesc)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.seasonName = seasonName;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.seasonDesc = seasonDesc;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//其他诉求：获取枚举类对象的属性&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getSeasonName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; seasonName;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getSeasonDesc&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; seasonDesc;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//    public void show()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        System.out.println(&amp;quot;这是一个季节&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//    &amp;#125;&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注解&#34;&gt;#&lt;/a&gt; 注解&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*  注解的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、理解注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   Annotation是代码里的特殊标记，这些标记可以在编译、类加载、运行时被读取，并执行相应的处理。通过使用Annotation，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   程序员可以在不改变原有逻辑的情况下，在源文件中嵌入一些补充信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、在某种意义上，框架 = 注解 + 映射 + 设计模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;注解的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注解的使用&#34;&gt;#&lt;/a&gt; 注解的使用&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* Annotation的实例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 示例一：生成文档相关的注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 示例二：在编译时进行格式检查（JDK内置的三个注解）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       @Override：限定重写父类方法，该注解只能用于方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       @Deprecated：用于表示所修饰的元素（类、方法等）已过时。通常是因为所修饰的结构危险或存在更好的选择&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       @SuppressWarnings：抑制编译器警告&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 示例三：跟踪代码依赖性，实现替代配置文件功能&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AnnotationTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@SuppressWarnings(&amp;quot;unused&amp;quot;)&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//抑制编译器对于”定义的变量未使用”的警告&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@SuppressWarnings(&amp;#123;&amp;quot;unused&amp;quot;, &amp;quot;rawtypes&amp;quot;&amp;#125;)&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//抑制编译器对于”定义的变量未使用”和&amp;quot;未使用泛型&amp;quot;的警告&lt;/span&gt;&lt;br&gt;        ArrayList list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@MyAnnotation(value = &amp;quot;hi&amp;quot;)&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//使用自定义的注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; String name;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.age = age;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;人走路&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;eat&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;人吃饭&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Student&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//重写父类方法的注释，会在编译的时候强制要求重写方法（可用作检查校验）&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;学生走路&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;自定义注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自定义注解&#34;&gt;#&lt;/a&gt; 自定义注解&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 如何自定义注解：参照SuppressWarnings定义&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ① 注解定义格式为 @interface&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ② 内部定义成员，通常使用value表示&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ③ 可以指定成员的默认值，使用default定义&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ④ 如果自定义注解没有成员，表明是一个“标识”作用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果注解用成员，在使用注解时，需要指明成员的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   自定义注解必须配上注解的信息处理流程（使用反射）才有意义&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 自定义注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;@interface&lt;/span&gt; MyAnnotation &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;String &lt;span class=&#34;hljs-title&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;default&lt;/span&gt; &amp;quot;hello&amp;quot;&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//这个是成员，不是方法。默认值是hello&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@MyAnnotation(value = &amp;quot;hi&amp;quot;)&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//使用自定义的注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; String name;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;元注解修饰其他注解的注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元注解修饰其他注解的注解&#34;&gt;#&lt;/a&gt; 元注解：修饰其他注解的注解&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* JDK提供的四种元注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、元注解：对现有的注解进行解释说明的注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       ① Retention：指明所修饰的Annotation的生命周期&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*          其包括一个RetentionPolicy类型的成员变量，使用@Retention时必须为该value成员变量指定值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           &amp;#123;RetentionPolicy.SOURCE, RetentionPolicy.CLASS, RetentionPolicy.RUNTIME&amp;#125;，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           分别代表：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                   源文件中有效：该注解会被编译器抛弃；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                   class文件中有效：该注解在程序运行时会被抛弃（默认状态）；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                    运行时有效：该注解在程序运行时有效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       ② Target：指明所修饰的注解能够修饰什么程序元素，包括TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                   LOCAL_VARIABLE, ANNOTATION_TYPE, PACKAGE, TYPE_PARAMETER,TYPE_USE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       ③ Documented：表示所修饰的注解在被javadoc解析时，被提取成文档，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                      定义为Documented的注解必须设置Retention值为RUNTIME&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       ④ Inherited:被修饰的注解将具有继承性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*          例如MyAnnotation被Inherited修饰，且被用于修饰Person类，那么Person类的子类也自动被MyAnnotation修饰&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3、自定义注解通常都会指明两个元注解：Retention和Target&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;通过反射获取注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过反射获取注解&#34;&gt;#&lt;/a&gt; 通过反射获取注解&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//通过反射获取注解&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class student = Student.class;&lt;br&gt;        Annotation[] annotations = student.getAnnotations();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; annotations.length; i++) &amp;#123;&lt;br&gt;            System.out.println(annotations[i]);&lt;span class=&#34;hljs-comment&#34;&gt;//@MyAnnotation(value=hi)&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;jdk8中注解的新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk8中注解的新特性&#34;&gt;#&lt;/a&gt; JDK8 中注解的新特性&lt;/h3&gt;
&lt;h4 id=&#34;可重复注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可重复注解&#34;&gt;#&lt;/a&gt; 可重复注解&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 实现可重复注解：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、JDK8之前的写法：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*     public @interface MyAnnotations &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       MyAnnotation[] value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    @MyAnnotations(&amp;#123;@MyAnnotation(value = &amp;quot;hi&amp;quot;), @MyAnnotation(value = &amp;quot;hello&amp;quot;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、JDK8之后的写法：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   @Repeatable(MyAnnotations.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   public @interface MyAnnotation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    String value() default &amp;quot;hello&amp;quot;;//这个是成员，不是方法。默认值是hello&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ①在MyAnnotation上声明@Repeatable，成员值为MyAnnotations.class&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ②MyAnnotation的Target和Retention必须和MyAnnotations相同&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;类型注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#类型注解&#34;&gt;#&lt;/a&gt; 类型注解&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 类型注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、TYPE_PARAMETER：表示该注解能写在类型变量的声明语句中，如泛型声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、TYPE_USE：表示该注解能写在使用类型的任何语句中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//TYPE_PARAMETER&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Generic&lt;/span&gt;&amp;lt;@&lt;span class=&#34;hljs-title&#34;&gt;MyAnnotation&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//声明为TYPE_USE后，注解可以出现在任何类型前&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; @MyAnnotation RuntimeException&lt;/span&gt;&amp;#123;&lt;br&gt;        ArrayList&amp;lt;&lt;span class=&#34;hljs-meta&#34;&gt;@MyAnnotation&lt;/span&gt; String&amp;gt; list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; num = (&lt;span class=&#34;hljs-meta&#34;&gt;@MyAnnotation&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;hljs-number&#34;&gt;10L&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合&#34;&gt;#&lt;/a&gt; 集合&lt;/h2&gt;
&lt;h3 id=&#34;概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概述&#34;&gt;#&lt;/a&gt; 概述&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、集合框架的概述&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、集合、数组都是对多个数据进行存储操作的结构，简称Java容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   说明：此时的存储，主要指的是内存层面的存储，不涉及到持久化的存储（.txt, .jpg, .avi, 数据库中是持久化层面的）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2.1、数组在存储多个数据方面的特点：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 一旦初始化以后，其长度就确定了。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 一旦定义好，其元素的类型也就确定了。我们只能操作指定类型的数据。比如 String[] arr; int[] arr1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2.2 数组在存储多个数据的缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 一旦初始化以后，其长度不可修改&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt;  数组中提供的方法非常有限，对于添加、删除、插入数据等操作，非常不便，同时效率也不高&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 获取数组中实际元素的个数的需求，数组没有线程的属性或方法可用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 数组存储数据的特点：有序、可重复。对于无序、不可重复&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;z* 3、集合可分为Collection和Map两种体系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3.1 Collection接口：单列数据，定义了存取一组对象的方法的集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       &amp;gt; List:元素有序、可重复的集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       &amp;gt; Set:元素无序、不可重复的集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3.2 Map接口：双列数据，保存具有映射关系“key-value对”的集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;集合框架&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合框架&#34;&gt;#&lt;/a&gt; 集合框架&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、集合框架&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   |---- Collection接口：单列集合，用来存储一个一个的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- List接口：存储有序的、可重复的数据。  --&amp;gt; 类似于&amp;quot;动态&amp;quot;数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           |---- ArrayList、LinkedList、Vector&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- Set接口：存储无序的、不可重复的数据   --&amp;gt; 类似于高中讲的“集合”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           |---- HashSet、 LinkedHashSet、TreeSet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   |---- Map接口：双列集合，用来存储一对一对(key, value)的数据    --&amp;gt; 类似于高中函数 y = f(x)，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                                                              一个key对应一个value，一个value可以对应多个key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- HashMap、LinkedHashMap、TreeMap、HashTable、Properties&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;collection接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#collection接口&#34;&gt;#&lt;/a&gt; Collection 接口&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//add(Object e)：将元素e添加到集合中&lt;/span&gt;&lt;br&gt;			&lt;span class=&#34;hljs-comment&#34;&gt;//向Collection接口的实现类的对象中添加数据obj时，要求重写obj所在类的equals()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//size()：获取添加的元素的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//addAll(Collection c)：将集合c中的元素添加到当前的集合中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//isEmpty()：判断当前集合是否为空(是否有元素)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//clear()：清空集合中的所有元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//contains(Object e)：判断当前集合中是否包含对象e。对于对象，判断的是equals()方法而不是==运算符。&lt;/span&gt;&lt;br&gt;					&lt;span class=&#34;hljs-comment&#34;&gt;//所以实现相关功能需要考虑是否重写equals()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//containsAll(Collection coll1):判断形参coll1中的所有元素是否都存在于当前集合中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//remove(Object o)：删, 返回值是boolean，表示是否删除成功&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//仍然需要重写equals()方法，因为是逐个判断是否和目标相同的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//removeAll(Collection coll1)：从当前集合中移除coll1中所有的元素&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//仍然需要重写equals()方法，因为是逐个判断是否和目标相同的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//retrainAll(Collection coll1)：求与coll1的交集（次操作会修改原有集合）。返回值是boolean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//equals(Object obj)：判断两个集合是否相等。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//hashCode()：返回当前对象的hash值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Arrays.asList()：数组转换成集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//iterator()：返回一个迭代器接口的实例，用于遍历集合元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CollectionTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        Collection collection = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//add(Object e)：将元素e添加到集合中&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//向Collection接口的实现类的对象中添加数据obj时，要求重写obj所在类的equals()方法&lt;/span&gt;&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//自动装箱&lt;/span&gt;&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//size()：获取添加的元素的个数&lt;/span&gt;&lt;br&gt;        System.out.println(collection.size());&lt;span class=&#34;hljs-comment&#34;&gt;//4&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//addAll(Collection c)：将集合c中的元素添加到当前的集合中&lt;/span&gt;&lt;br&gt;        Collection collection1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//自动装箱&lt;/span&gt;&lt;br&gt;        collection.addAll(collection1);&lt;br&gt;        System.out.println(collection);&lt;span class=&#34;hljs-comment&#34;&gt;//[AA, BB, 123, Wed Sep 29 00:49:29 CST 2021, CC, 456]&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//isEmpty()：判断当前集合是否为空(是否有元素)&lt;/span&gt;&lt;br&gt;        System.out.println(collection.isEmpty());&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//clear()：清空集合中的所有元素&lt;/span&gt;&lt;br&gt;        collection.clear();&lt;br&gt;        System.out.println(collection.isEmpty());&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//contains(Object e)：判断当前集合中是否包含对象e。对于对象，判断的是equals()方法而不是==运算符。&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//所以实现相关功能需要考虑是否重写equals()方法&lt;/span&gt;&lt;br&gt;        System.out.println(collection.contains(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(collection.contains(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//containsAll(Collection coll1):判断形参coll1中的所有元素是否都存在于当前集合中&lt;/span&gt;&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        Collection coll1 = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//返回的是含有123和456的list&lt;/span&gt;&lt;br&gt;        collection.containsAll(coll1);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//remove(Object o)：删, 返回值是boolean，表示是否删除成功&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//仍然需要重写equals()方法，因为是逐个判断是否和目标相同的&lt;/span&gt;&lt;br&gt;        collection.remove(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        System.out.println(collection);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//removeAll(Collection coll1)：从当前集合中移除coll1中所有的元素&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//仍然需要重写equals()方法，因为是逐个判断是否和目标相同的&lt;/span&gt;&lt;br&gt;        collection.removeAll(Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;));&lt;br&gt;        System.out.println(collection);&lt;span class=&#34;hljs-comment&#34;&gt;//[]   (空)&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//retrainAll(Collection coll1)：求与coll1的交集（次操作会修改原有集合）。返回值是boolean&lt;/span&gt;&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        collection.retainAll(Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;));&lt;br&gt;        System.out.println(collection);&lt;span class=&#34;hljs-comment&#34;&gt;//[123]&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//equals(Object obj)：判断两个集合是否相等。&lt;/span&gt;&lt;br&gt;        System.out.println(collection.equals(Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;)));&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//hashCode()：返回当前对象的hash值&lt;/span&gt;&lt;br&gt;        System.out.println(collection.hashCode());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//toArray()： 集合转换成数组（返回值是Object[]类型）&lt;/span&gt;&lt;br&gt;        Object[] objects = collection.toArray();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; objects.length; i++) &amp;#123;&lt;br&gt;            System.out.println(objects[i]);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Arrays.asList()：数组转换成成集合&lt;/span&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//注意:new int[]&amp;#123;123, 456&amp;#125;被当成是一个元素装入List；new Integer[]&amp;#123;123, 456&amp;#125;则是两个元素被装入list&lt;/span&gt;&lt;br&gt;        List arr1 = Arrays.asList(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[]&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;&amp;#125;);&lt;br&gt;        System.out.println(arr1.size());&lt;span class=&#34;hljs-comment&#34;&gt;//1&lt;/span&gt;&lt;br&gt;        List arr2 = Arrays.asList(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Integer[]&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;&amp;#125;);&lt;br&gt;        System.out.println(arr2.size());&lt;span class=&#34;hljs-comment&#34;&gt;//2&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//iterator()：返回一个迭代器接口的实例，用于遍历集合元素，见“Iterator接口”&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;iterator接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#iterator接口&#34;&gt;#&lt;/a&gt; Iterator 接口&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 集合元素的遍历操作，使用Iterator接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、内部的方法：hasNext(), next()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、内部定义了remove()方法，此处的方法不同于Collection中的remove方法。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    如果还没调用next()或在上一次调用next方法之后已经调用了remove()方法，再调用remove都会报IllegalStateException&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;IteratorTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Collection collection = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;));&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String((&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;)));&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;false&lt;/span&gt;);&lt;br&gt;        Iterator iterator = collection.iterator();&lt;span class=&#34;hljs-comment&#34;&gt;//迭代器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//迭代器越界后会报错：NoSuchElementException&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//正确的迭代方法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (iterator.hasNext())&amp;#123;&lt;br&gt;            System.out.println(iterator.next());&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Collection collection = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;));&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String((&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;)));&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;false&lt;/span&gt;);&lt;br&gt;        Iterator iterator = collection.iterator();&lt;span class=&#34;hljs-comment&#34;&gt;//迭代器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(iterator.hasNext())&amp;#123;&lt;br&gt;            Object obj = iterator.next();&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;.equals(obj))&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-comment&#34;&gt;//删除集合中的&amp;quot;Tom&amp;quot;，如果还没调用next()或在上一次调用next方法之后已经调用了remove()方法，&lt;/span&gt;&lt;br&gt;                &lt;span class=&#34;hljs-comment&#34;&gt;//再调用remove都会报IllegalStateException&lt;/span&gt;&lt;br&gt;                iterator.remove();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;        iterator = collection.iterator();&lt;span class=&#34;hljs-comment&#34;&gt;//迭代器,因为前面iterator已经指向末尾，所以此处要重新生成&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (iterator.hasNext())&amp;#123;&lt;br&gt;            System.out.println(iterator.next());&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;迭代器的执行原理：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211001161557658.png&#34; alt=&#34;迭代器的执行原理&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用for-each遍历集合和数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用for-each遍历集合和数组&#34;&gt;#&lt;/a&gt; 使用 For - each 遍历集合和数组&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 使用for - each遍历集合、数组(JDK5.0新增)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ForEachTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Collection collection = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;));&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String((&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;)));&lt;br&gt;        collection.add(&lt;span class=&#34;hljs-keyword&#34;&gt;false&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//for(集合/数组元素类型 : 局部变量, 集合/数组对象)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(Object obj : collection)&amp;#123;&lt;br&gt;            System.out.println(obj);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;list接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list接口&#34;&gt;#&lt;/a&gt; List 接口&lt;/h3&gt;
&lt;h4 id=&#34;arraylist源码分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arraylist源码分析&#34;&gt;#&lt;/a&gt; ArrayList 源码分析&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、ArrayList源码分析：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       JDK7情况下：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           ArrayList list = new ArrayList();//底层创建了初始长度为10的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           list.add(123);//element[0] = new Integer(123);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           list.add(11);//如果此次的添加导致底层数组容量不构，则扩容；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                       //默认扩容为原先长度的1.5倍，并将原有数组数据复制到新数组中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           建议：开发中使用带参的构造器：ArrayList(int initialCapacity)，尽量避免扩容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       JDK8情况下：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           ArrayList list = new ArrayList();//底层Object[] element初始化为&amp;#123;&amp;#125;，并没有创建长度为10的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           list.add(123);//第一次调用add()时，底层才创建了长度10的数组，并将123添加到element[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           后续的添加和扩容操作与JDK7无异&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       小结：JDK7中的ArrayList对象创建类似于单例模式中的饿汉式，而JDK8中的ArrayList对象的创建类似于懒汉式，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*            延迟了数组的创建，节约了内存&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;linkedlist源码分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linkedlist源码分析&#34;&gt;#&lt;/a&gt; LinkedList 源码分析&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、LinkedList源码分析：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   LinkedList list = new LinkedList();//内部声明了类型的first和last属性（头指针和尾指针），默认值为null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   list.add(123);//将123封装到Node中，创建了Node对象，并插入到双向链表的末尾&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   其中，链表结点Node的定义为：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   private static class Node&amp;lt;E&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*        E item;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*        Node&amp;lt;E&amp;gt; next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       Node&amp;lt;E&amp;gt; prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*        Node(Node&amp;lt;E&amp;gt; prev, E element, Node&amp;lt;E&amp;gt; next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*            this.item = element;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*            this.next = next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*            this.prev = prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;vector源码分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vector源码分析&#34;&gt;#&lt;/a&gt; Vector 源码分析&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、Vector源码分析：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   JDK7和JDK8中通过Vector()构造器创建对象时，底层都创建了长度为10的数组，在扩容方面，默认扩容为原来数组长度的2倍&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;list接口中的常用方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list接口中的常用方法&#34;&gt;#&lt;/a&gt; List 接口中的常用方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//void add(int index, Object obj)：在index位置插入元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//boolean addAll(int index, Collection c):在index位置开始将集合c的所有元素插入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Object get(int index)：获取索引值为index的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//int indexOf(Object o)：返回o第一次出现的位置，若没有，则返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//int lastIndexOf(Object o)：返回o最后一次出现的位置，若没有，则返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Object remove(int index):按索引删除元素，并返回该元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Object set(int index, Object o):将index位置的元素设置成o，并返回该索引位置修改前的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//说明：remove(Object o)和remove(int index)，index和o一样的时候，默认是当成索引，如果想作为Object，可使用自动装箱&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 总结：常用方法有&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 增：add(Object o)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 删: remove(int index) / remove(Object o)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 改: set(int index, Object o)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 查: get(int index) / indexOf(Object o) / lastIndexOf(Object o) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 插: add(int index, Object o)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 长度: size()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 遍历: ①iterator迭代器 ②for - each ③普通for循环，按照索引访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        ArrayList list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;));&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        System.out.println(list);&lt;span class=&#34;hljs-comment&#34;&gt;//[123, 456, AA, Person@4dcbadb4, 456]&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//void add(int index, Object obj)：在index位置插入元素&lt;/span&gt;&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(list);&lt;span class=&#34;hljs-comment&#34;&gt;//[123, BB, 456, AA, Person@4dcbadb4, 456]&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean addAll(int index, Collection c):在index位置开始将集合c的所有元素插入&lt;/span&gt;&lt;br&gt;        list.addAll(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;));&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list.add(Arrays.asList(1,2,3));//注意区分&lt;/span&gt;&lt;br&gt;        System.out.println(list.size());&lt;span class=&#34;hljs-comment&#34;&gt;//6 + 3 = 9&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Object get(int index)：获取索引值为index的元素&lt;/span&gt;&lt;br&gt;        Object o = list.get(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        System.out.println(o);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//int indexOf(Object o)：返回o第一次出现的位置，若没有，则返回-1&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//int lastIndexOf(Object o)：返回o最后一次出现的位置，若没有，则返回-1&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = list.indexOf(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        System.out.println(i);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i1 = list.lastIndexOf(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        System.out.println(i1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Object remove(int index):按索引删除元素，并返回该元素&lt;/span&gt;&lt;br&gt;        Object obj = list.remove(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        System.out.println(obj);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Object set(int index, Object o):将index位置的元素设置成o，并返回该索引位置修改前的值&lt;/span&gt;&lt;br&gt;        System.out.println(list);&lt;br&gt;        Object obj1 = list.set(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;111&lt;/span&gt;);&lt;br&gt;        System.out.println(obj1);&lt;br&gt;        System.out.println(list);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//List subList(int fromIndex, int endIndex)：返回子列表,[fromIndex, endIndex)&lt;/span&gt;&lt;br&gt;        System.out.println(list.subList(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;set接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set接口&#34;&gt;#&lt;/a&gt; Set 接口&lt;/h3&gt;
&lt;h4 id=&#34;添加元素的过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#添加元素的过程&#34;&gt;#&lt;/a&gt; 添加元素的过程&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 添加元素的过程：以HashSet为例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  我们向HashSet中添加元素a，首先调用元素a所在类的hashCode()方法，计算元素a的哈希值，此哈希值接着通过某种算法计算出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  HashSet底层数组中的存放位置（即：索引位置），判断数组此位置上是否已经铀元素：如果此位置上没有其他元素，则元素a添加成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  如果此位置上有其他元素b（或以链表形式存在的多个元素），则比较元素a与元素b的hash值，如果hash值不相同，则元素a添加成功，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  如果hash值相同，进而调用元素a所在类的equals()方法。若返回true，则元素a添加失败。若返回false，则元素a添加成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  JDK7中，链表是头插入；JDK8中，链表是尾插入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashset&#34;&gt;#&lt;/a&gt; HashSet&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.HashSet;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Set;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/2 - 0:09&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、Set接口的框架&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   |---- Collection接口：单列集合，用来存储一个一个的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- Set接口：存储无序的、不可重复的数据   --&amp;gt; 类似于高中讲的“集合”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           |---- HashSet：Set接口的主要实现类；线程不安全的；可以存储null值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*               |---- LinkedHashSet：是HashSet的子类；遍历其内部数据时，可以按照添加的顺序遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           |---- TreeSet：使用红黑树存储的，要求元素必须是同一类型，可按照某种属性进行排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、Set接口中没有额外定义的方法，使用的都是Collection中的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、要求：向Set中添加的数据，其所在类一定要重写hashCode()和equals()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*         重写的hashCode()和equals()尽可能保持一致性：相等的对象必须具有相等的散列码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;SetTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 一、Set:无序存储的、不可重复的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   以HashSet为例说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   1、无序性：不等于随机性。存储的数据在底层数组中并非按照数组索引的顺序添加。而是根据数据的Hash值决定的。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   2、不可重复性：保证添加的元素按照equals()方法判断时，不能返回true。即，相同的元素只能添加一个。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 二、添加元素的过程：以HashSet为例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   我们向HashSet中添加元素a，首先调用元素a所在类的hashCode()方法，计算元素a的哈希值，此哈希值接着通过某种算法计算出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   HashSet底层数组中的存放位置（即：索引位置），判断数组此位置上是否已经铀元素：如果此位置上没有其他元素，则a添加成功&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   如果此位置上有其他元素b（或以链表形式存在的多个元素），则比较元素a与元素b的hash值，如果hash值不相同，则a添加成功&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   如果hash值相同，进而调用元素a所在类的equals()方法。若返回true，则元素a添加失败。若返回false，则元素a添加成功。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   JDK7中，链表是头插入；JDK8中，链表是尾插入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   HashSet底层存储原理：数组 + 链表 + 红黑树&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Set set = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; HashSet();&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;linkedhashset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linkedhashset&#34;&gt;#&lt;/a&gt; LinkedHashSet&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * LinkedHashSet的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、LinkedHashSet中的元素被封装成一个结点e，这些结点按照元素的添加顺序以双向链表的方式互相连接，这样，就可以按照元素添加&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   顺序来遍历LinkedHashSet。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、优点：对于频繁的遍历操作，LinkedHashSet的效率高于HashSet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Set set = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; LinkedHashSet();&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;));&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;treeset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#treeset&#34;&gt;#&lt;/a&gt; TreeSet&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/2 - 14:26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* TreeSet类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、向TreeSet中添加的数据，要求是相同类的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、两种排序方式：自然排序（实现CompareTo接口）和定制排序（Comparator）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、自然排序中，比较两个元素是否相同的标准为compareTo()方法，不再是equals()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、自定义排序中，比较两个元素是否相同的标准为compareTo()方法，不再是equals()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;TreeSetTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Set set = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; TreeSet();&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        set.add(&amp;quot;AA&amp;quot;);//错误添加方式，“AA”与整型数据类型不一样&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        set.add(&amp;quot;CC&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        set.add(new Person(&amp;quot;Tom&amp;quot;, 12));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        set.add(new Person(&amp;quot;Tom&amp;quot;, 12));&lt;/span&gt;&lt;br&gt;        set.add(&lt;span class=&#34;hljs-number&#34;&gt;24&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object o : set) &amp;#123;&lt;br&gt;            System.out.println(o);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Set set = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; TreeSet();&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//Person类已重写compareTo()方法，按照年龄大小排序&lt;/span&gt;&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;));&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;));&lt;br&gt;        Iterator iterator = set.iterator();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(iterator.hasNext())&amp;#123;&lt;br&gt;            System.out.println(iterator.next());&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Comparator comparator = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator()&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o1, Object o2)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o1 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; Person &amp;amp;&amp;amp; o2 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; Person)&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Integer.compare(((Person) o1).getAge(), ((Person) o2).getAge());&lt;br&gt;                &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;类型不匹配&amp;quot;&lt;/span&gt;);&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;        Set set = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; TreeSet(comparator);&lt;span class=&#34;hljs-comment&#34;&gt;//使用自定义的排序方式&lt;/span&gt;&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//虽然Person类已重写compareTo()方法，但TreeSet的构造器使用了定制排序&lt;/span&gt;&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;));&lt;br&gt;        set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;));&lt;br&gt;        Iterator iterator = set.iterator();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(iterator.hasNext())&amp;#123;&lt;br&gt;            System.out.println(iterator.next());&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;面试题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面试题&#34;&gt;#&lt;/a&gt; 面试题&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;   * 一道面试题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;   * */&lt;/span&gt;&lt;br&gt;   &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;   &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;       HashSet set = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; HashSet();&lt;br&gt;       Person person1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1001&lt;/span&gt;);&lt;br&gt;       Person person2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1001&lt;/span&gt;);&lt;br&gt;       set.add(person1);&lt;br&gt;       set.add(person2);&lt;br&gt;       person1.setName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;);&lt;br&gt;       &lt;span class=&#34;hljs-comment&#34;&gt;//这里会删除失败，因为person1中的属性被修改，导致hashCode值改变。用新的hashCode值去索引，会找不到目标&lt;/span&gt;&lt;br&gt;       set.remove(person1);&lt;br&gt;       &lt;span class=&#34;hljs-comment&#34;&gt;//输出还是有两个person&lt;/span&gt;&lt;br&gt;       System.out.println(set);&lt;br&gt;       &lt;span class=&#34;hljs-comment&#34;&gt;//会添加成功，虽然元素重复，但新的hashCode对应的位置是空的，可以添加&lt;/span&gt;&lt;br&gt;       set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;1001&lt;/span&gt;));&lt;br&gt;       System.out.println(set);&lt;span class=&#34;hljs-comment&#34;&gt;//输出三个person&lt;/span&gt;&lt;br&gt;       &lt;span class=&#34;hljs-comment&#34;&gt;//还是能添加成功，虽然hashCode相同，但equals()返回不相同&lt;/span&gt;&lt;br&gt;       set.add(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;1001&lt;/span&gt;));&lt;br&gt;       System.out.println(set);&lt;span class=&#34;hljs-comment&#34;&gt;//会输出四个person&lt;/span&gt;&lt;br&gt;   &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;map接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#map接口&#34;&gt;#&lt;/a&gt; Map 接口&lt;/h3&gt;
&lt;h4 id=&#34;map接口框架&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#map接口框架&#34;&gt;#&lt;/a&gt; Map 接口框架&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、Map接口框架&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   |---- Map：双列数据，存储key-value对的数据 --&amp;gt; 类似于高中的函数y = f(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- HashMap：作为Map的主要实现类，线程不安全的，效率高。存储存储key或value时，可以是null值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           |---- LinkedHashMap：保证在遍历map元素时，可以按照添加的顺序实验遍历。原理和LinkedHashSet类似。对于频繁 *								   的遍历操作，效率要高于HashMap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- TreeMap：保证按照添加的key-value对（排序依据是key）进行排序，实现排序遍历。底层使用红黑树&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       |---- Hashtable：作为古老的实现类，线程安全的，效率低。存储存储key或value时，不可以是null值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           |---- Properties：常用来处理配置文件。key和value都是String类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   HashMao的底层：数组 + 链表（JDK7及以前）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*                 数组 + 链表 + 红黑树 （JDK8之后）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;map结构理解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#map结构理解&#34;&gt;#&lt;/a&gt; Map 结构理解&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 三、结构的理解（以HashMap为例，不适用于TreeMap）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   key是不可重复的、无序的，使用Set存储所有的key   ---&amp;gt; key所在类要重写equals()和hashCode()方法                  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   value是可重复的、无序的，使用Collection存储所有的value  ---&amp;gt; value所在类要重写equals()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   key和value是被封装成一个entry对象，key和value是entry的两个属性。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   entry是无序的、不可重复的，使用set存储所有的entry&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashmap底层实现原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap底层实现原理&#34;&gt;#&lt;/a&gt; HashMap 底层实现原理&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;四、HashMap底层实现原理，以JDK7为例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   HashMap map = new HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   在实例化以后，底层创建了长度是16的一维数组Entry[] table&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ..执行多次put..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   map.put(key1, value1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   首先，调用key1所在类的hashCode()方法计算key1的hash值，此hash值经过某种算法计算后，得到在Entry数组中的存放位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果此位置上的数据为空，此时key1-value1添加成功。如果此位置上的数据不为空（即此位置存在一个或多个数据（以链表存在）），&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   比较当前key1和已存在的一个或多个数据key的hash值：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       如果key1的hash值与已存在数据的hash都不相同，此时key1-value1添加成功。 ---&amp;gt; 情况2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       若和某一个数据(key2, value2)的hash值相同，则调用key1所在类的equals()方法：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           若相同，则添加失败   ----&amp;gt; 情况3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*           若不相同，使用value1替换value2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   补充：关于情况2和情况3，此时key1-value1和原来的数据以链表方式存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   在不断的添加过程中，会涉及到扩容的问题，当超出临界值并且要存放的位置非空时，扩容。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   默认的扩容方式：扩容为原来容量的2倍，并将原有的数据复制过来。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   JDK8相较于JDK7底层实现方面的不同：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、new HashMap()：底层没有创建一个底层为16的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、JDK8底层的数组是：Node[]，而非Entry[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3、首次调用put()方法时，底层会创建长度为16的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   4、JDK7底层结构只有：数组 + 链表；JDK8底层结构：数组 + 链表 + 红黑树。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*      当数组的某一个索引位置上的元素超过8个时且当前数组的长度超过64时，此时此索引位置上的数据改为使用红黑树存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 五、几个概念&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   DEFAULT_INITIAL_CAPACITY:HashMap的默认容量：16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   DEFAULT_LOAD_FACTOR:HashMap的默认加载因子：0.75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   threshold：扩容的临界值，= 容量 * 加载因子 = 16 * 0.75 = 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   TREEIFY_THRESHOLD:Bucket中链表长度大于该默认值，转化为红黑树：8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   MIN_TREEIFY_CAPACITY：Bucket中的Node倍树化时最小的hash表容量：64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;**/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;linkedhashmap实现原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linkedhashmap实现原理&#34;&gt;#&lt;/a&gt; LinkedHashMap 实现原理&lt;/h4&gt;
&lt;figure class=&#34;highlight crmsh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs crmsh&#34;&gt;源码中LinkedHashMap底层链表上的结点Entry继承了HashMap中的结点&lt;span class=&#34;hljs-keyword&#34;&gt;Node&lt;/span&gt;&lt;span class=&#34;hljs-title&#34;&gt;，将其改成了双向链表&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;常用方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用方法&#34;&gt;#&lt;/a&gt; 常用方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//常用方法&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 添加：put()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 删除：remove()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 修改：put()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 查询：get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 长度：size()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 遍历：keySet(), values(), entrySet()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Map map = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; HashMap();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Object put(Object key, Object value)&lt;/span&gt;&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-number&#34;&gt;45&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//修改操作&lt;/span&gt;&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        System.out.println(map);&lt;span class=&#34;hljs-comment&#34;&gt;//&amp;#123;AA=456, 45=123&amp;#125;&lt;/span&gt;&lt;br&gt;        Map map1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; HashMap();&lt;br&gt;        map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;DD&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//void putAll(Map m)&lt;/span&gt;&lt;br&gt;        map.putAll(map1);&lt;br&gt;        System.out.println(map);&lt;span class=&#34;hljs-comment&#34;&gt;//&amp;#123;AA=456, CC=123, DD=123, 45=123&amp;#125;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Object value = remove(Object key)&lt;/span&gt;&lt;br&gt;        map.remove(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CC&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(map);&lt;span class=&#34;hljs-comment&#34;&gt;//&amp;#123;AA=456, DD=123, 45=123&amp;#125;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//clear()&lt;/span&gt;&lt;br&gt;        map.clear();&lt;br&gt;        System.out.println(map);&lt;span class=&#34;hljs-comment&#34;&gt;//&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;        System.out.println(map.size());&lt;span class=&#34;hljs-comment&#34;&gt;//0&lt;/span&gt;&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-number&#34;&gt;45&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Object value = get(Object key)&lt;/span&gt;&lt;br&gt;        System.out.println(map.get(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//123&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean containsKey(Object key)&lt;/span&gt;&lt;br&gt;        System.out.println(map.containsKey(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean containsValue(Object value)&lt;/span&gt;&lt;br&gt;        System.out.println(map.containsValue(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//size()&lt;/span&gt;&lt;br&gt;        System.out.println(map.size());&lt;span class=&#34;hljs-comment&#34;&gt;//2&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//isEmpty()&lt;/span&gt;&lt;br&gt;        System.out.println(map.isEmpty());&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean equals(Object obj):判断当前map和参数对象obj是否相等&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Map没有迭代器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Set keySet()：返回所有key组成的Set&lt;/span&gt;&lt;br&gt;        Set set = map.keySet();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object o : set) &amp;#123;&lt;br&gt;            System.out.println(o);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Collection values()：返回所有value值构成的集合&lt;/span&gt;&lt;br&gt;        Collection values = map.values();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object value : values) &amp;#123;&lt;br&gt;            System.out.println(value);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//遍历所有的key-value&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式一：Set entrySet()&lt;/span&gt;&lt;br&gt;        Set set1 = map.entrySet();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object o : set1) &amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//            System.out.println(o);//可以直接输出&lt;/span&gt;&lt;br&gt;            Map.Entry entry = (Map.Entry)o;&lt;br&gt;            System.out.println(entry.getKey() + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, &amp;quot;&lt;/span&gt; + entry.getValue());&lt;span class=&#34;hljs-comment&#34;&gt;//entry有getKey()和getValue()&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式二&lt;/span&gt;&lt;br&gt;        Set keySet = map.keySet();&lt;br&gt;        Iterator iterator = keySet.iterator();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(iterator.hasNext())&amp;#123;&lt;br&gt;            Object key = iterator.next();&lt;br&gt;            Object value = map.get(key);&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;key = &amp;quot;&lt;/span&gt; + key + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, value = &amp;quot;&lt;/span&gt; + value);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;treemap使用举例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#treemap使用举例&#34;&gt;#&lt;/a&gt; TreeMap 使用举例&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/3 - 16:33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;TreeMapTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//向TreeMap中添加key-value，要求key必须是由同一个类创建的对象&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//因为要按照key进行排序：自然排序，定制排序&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//自然排序&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        TreeMap map = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; TreeMap();&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;98&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jack&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;89&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Mike&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;21&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;76&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;);&lt;br&gt;        Set set = map.entrySet();&lt;br&gt;        Iterator iterator = set.iterator();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(iterator.hasNext())&amp;#123;&lt;br&gt;            Map.Entry entry = (Map.Entry)iterator.next();&lt;br&gt;            System.out.println(entry.getKey() + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; +entry.getValue());&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//定制排序：使用参数为Comparator的构造器&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//按照年龄从大到小排序&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Map map = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; TreeMap(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o1, Object o2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(o1 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; Person &amp;amp;&amp;amp; o2 &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; Person)&amp;#123;&lt;br&gt;                    Person p1 = (Person) o1;&lt;br&gt;                    Person p2 = (Person) o2;&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; -Integer.compare(p1.getAge(), p2.getAge());&lt;br&gt;                &amp;#125;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;参数不匹配&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;98&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jack&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;15&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;89&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Mike&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;21&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;76&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;), &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;);&lt;br&gt;        Set set = map.entrySet();&lt;br&gt;        Iterator iterator = set.iterator();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(iterator.hasNext())&amp;#123;&lt;br&gt;            Map.Entry entry = (Map.Entry)iterator.next();&lt;br&gt;            System.out.println(entry.getKey() + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; +entry.getValue());&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;properties&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#properties&#34;&gt;#&lt;/a&gt; Properties&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileInputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileNotFoundException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Properties;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/3 - 16:49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PropertiesTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//Properties：常用来处理配置文件，key和value都是String类型&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;br&gt;        Properties properties = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Properties();&lt;br&gt;        FileInputStream fis;&lt;br&gt;        fis = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;jdbc.properties&amp;quot;&lt;/span&gt;);&lt;br&gt;        properties.load(fis);&lt;br&gt;        String name = properties.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;);&lt;br&gt;        String password = properties.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;name = &amp;quot;&lt;/span&gt; + name + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, password = &amp;quot;&lt;/span&gt; + password);&lt;span class=&#34;hljs-comment&#34;&gt;//name = Tom, password = abc123&lt;/span&gt;&lt;br&gt;        fis.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**********************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//以下是jdbc.properties文件的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;name=Tom邓智超&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;password=abc123	&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;collections工具类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#collections工具类&#34;&gt;#&lt;/a&gt; Collections 工具类&lt;/h3&gt;
&lt;p&gt;Collecitons 是一个操作 Set、List、Map 等集合的工具类&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Collections;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/3 - 20:29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* Collections:操作Collection和Map的工具类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 面试题：Collections和Collection的区别？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CollectionsTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//常用方法&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * Collections类中提供了多个synchronizedXxx()方法，该方法可使将指定集合包装成线程同步的集合，从而可以解决多线程并发集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 时的线程安全问题。如synchronizedCollection、synchronizedList、synchronizedMap等等。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 比如List list1 = synchronizedList(list)返回的就是线程安全的list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * reverse(List)：反转List中元素的顺序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * shuffle(List)：使List的元素随机乱序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * sort(List)：从小到大自然排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * sort(List, Comparator):定制排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * swap(List, i ,j):交换List中索引位置为i和j的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * Object max(Collection)：自然排序最小值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * Object max(Collection, Comparator)：定制排序最大值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * Object min(Collection)：自然排序最小值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * Object min(Collection, Comparator)：定制排序最小值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * int frequency(Collection, Object)：返回出现次数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * void copy(List dest, List src)：将src的内容复制到dest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * boolean replaceAll(List list, Object oldValue, Object newVal)：将List中所有oldValue换成newValue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        List list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;523&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;153&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;);&lt;br&gt;        System.out.println(list);&lt;span class=&#34;hljs-comment&#34;&gt;//[123, 523, 13, 153, 3, 17]&lt;/span&gt;&lt;br&gt;        Collections.reverse(list);&lt;br&gt;        System.out.println(list);&lt;span class=&#34;hljs-comment&#34;&gt;//[17, 3, 153, 13, 523, 123]&lt;/span&gt;&lt;br&gt;        Collections.shuffle(list);&lt;br&gt;        System.out.println(list);;&lt;span class=&#34;hljs-comment&#34;&gt;//[3, 523, 17, 123, 13, 153]&lt;/span&gt;&lt;br&gt;        Collections.sort(list);&lt;br&gt;        System.out.println(list);&lt;span class=&#34;hljs-comment&#34;&gt;//[3, 13, 17, 123, 153, 523]&lt;/span&gt;&lt;br&gt;        Collections.swap(list, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        System.out.println(list);&lt;span class=&#34;hljs-comment&#34;&gt;//[13, 3, 17, 123, 153, 523]&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//一眼就知道是做什么的就不一一举例了。。。。。&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//copy方法可能会出错，举例说明一下&lt;/span&gt;&lt;br&gt;        List list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;523&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;153&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        List desc = new ArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        Collections.copy(desc, list);//会报异常，desc的size比list小的就会报错&lt;/span&gt;&lt;br&gt;        List desc = Arrays.asList(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Object[list.size()]);&lt;span class=&#34;hljs-comment&#34;&gt;//应该这样写&lt;/span&gt;&lt;br&gt;        Collections.copy(desc, list);&lt;br&gt;        System.out.println(desc);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;泛型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泛型&#34;&gt;#&lt;/a&gt; 泛型&lt;/h2&gt;
&lt;h3 id=&#34;用与不用泛型的对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用与不用泛型的对比&#34;&gt;#&lt;/a&gt; 用与不用泛型的对比&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/4 - 17:17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 泛型的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、JDK5.0新增的特性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、在集合中使用泛型：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   总结：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ① 集合接口或集合类在JDK5.0时都修改为带泛型的结构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ② 在实例化集合类时，可以指明具体的泛型类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ③ 指明完以后，在集合类或接口中凡是定义类或接口时，内部结构使用到泛型的位置，都指定为实例化时泛型的类型。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*      如：add(E e) ---&amp;gt; 实例化后： add(Integer e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ④ 注意点：泛型的类型必须是类，不能是基本数据类型，需要用到基本数据类型的地方，需要写成包装类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ⑤ 如果实例化时没有指明泛型的类型，默认类型为java.lang.Object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;GenericTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//再集合中使用泛型之前的情况&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        ArrayList list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//需求：存放学生的成绩&lt;/span&gt;&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;78&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;76&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//问题一：类型不安全&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list.add(&amp;quot;Tom&amp;quot;);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object score : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//问题二：强转时，可能出现ClassCastException&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; stuScore = (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)score;&lt;br&gt;            System.out.println(stuScore);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//使用泛型的情况&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//使用泛型的时候，基本数据类型必须写成包装类的形式&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        ArrayList&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;Integer&amp;gt;();//不能写int&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK7新特性，类型推断】&lt;/span&gt;&lt;br&gt;        ArrayList&amp;lt;Integer&amp;gt; list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;span class=&#34;hljs-comment&#34;&gt;//不能写int&lt;/span&gt;&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//编译时，会进行类型检查，保证数据的安全&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list.add(&amp;quot;Tom&amp;quot;);//编译不通过&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Integer score : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//避免了强转操作&lt;/span&gt;&lt;br&gt;            System.out.println(score);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//以HashMap举例&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Map&amp;lt;String, Integer&amp;gt; map = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jack&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;34&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//类型不符合要求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        map.put(123, &amp;quot;Tom&amp;quot;);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//泛型的嵌套&lt;/span&gt;&lt;br&gt;        Set&amp;lt;Map.Entry&amp;lt;String, Integer&amp;gt;&amp;gt; set = map.entrySet();&lt;br&gt;        Iterator&amp;lt;Map.Entry&amp;lt;String, Integer&amp;gt;&amp;gt; iterator = set.iterator();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;自定义泛型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自定义泛型&#34;&gt;#&lt;/a&gt; 自定义泛型&lt;/h3&gt;
&lt;h4 id=&#34;泛型类-泛型接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泛型类-泛型接口&#34;&gt;#&lt;/a&gt; 泛型类、泛型接口&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/4 - 20:05&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、如何自定义泛型结构：泛型类、泛型接口、泛型方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、关于自定义泛型类、泛型方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 如果定义了泛型类，实例化没有指明类的泛型，则认位此泛型类型为Object类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 建议实例化时指明类的泛型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 若子类在继承带泛型的父类时，指明了泛型类型，则子类不再是泛型类。在实例化时，不需要指明泛型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Order&lt;/span&gt;&amp;lt;&lt;span class=&#34;hljs-title&#34;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    String name;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; orderId;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//类的内部结构可以使用类的泛型&lt;/span&gt;&lt;br&gt;    T orderT;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Order&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Order&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; orderId, T orderT)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.orderId = orderId;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.orderT = orderT;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; T &lt;span class=&#34;hljs-title&#34;&gt;getOrderT&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; orderT;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;setOrderT&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(T orderT)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.orderT = orderT;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;SubOrder&lt;/span&gt;&amp;lt;&lt;span class=&#34;hljs-title&#34;&gt;T&lt;/span&gt;, &lt;span class=&#34;hljs-title&#34;&gt;E&lt;/span&gt;&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Order&lt;/span&gt;&amp;lt;&lt;span class=&#34;hljs-title&#34;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//未指明泛型类型，SubOrder还是泛型类&lt;/span&gt;&lt;br&gt;    E name;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;SubOrder1&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Order&lt;/span&gt;&amp;lt;&lt;span class=&#34;hljs-title&#34;&gt;Integer&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//指明了泛型类型，SubOrder1不再是泛型类&lt;/span&gt;&lt;br&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;泛型方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泛型方法&#34;&gt;#&lt;/a&gt; 泛型方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/4 - 21:11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 自定义泛型方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、泛型方法可以出现在非泛型类中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、泛型方法：在方法中出现了泛型的结构，泛型参数与类的泛型参数没有任何关系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    换句话说，泛型方法所属的类是不是泛型都没有关系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、泛型方法可以声明为static，原因：泛型参数是在调用方法时确定的，并非在实例化类时确定&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;GenericMethodTest&lt;/span&gt;&amp;lt;&lt;span class=&#34;hljs-title&#34;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    T name;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(T name)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//这不是泛型方法！！！！&lt;/span&gt;&lt;br&gt;        System.out.println(name);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &amp;lt;E&amp;gt; &lt;span class=&#34;hljs-function&#34;&gt;List&amp;lt;E&amp;gt; &lt;span class=&#34;hljs-title&#34;&gt;copyFromArrayToList&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(E[] arr)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//声明泛型方法：在返回类型前面加上&amp;lt;&amp;gt;&lt;/span&gt;&lt;br&gt;        ArrayList&amp;lt;E&amp;gt; list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (E e : arr) &amp;#123;&lt;br&gt;            list.add(e);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; list;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//测试泛型方法&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        GenericMethodTest&amp;lt;String&amp;gt; order = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; GenericMethodTest&amp;lt;&amp;gt;();&lt;br&gt;        Integer[] arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Integer[]&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;&amp;#125;;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//泛型方法在调用时，指明泛型参数的类型&lt;/span&gt;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list = order.copyFromArrayToList(arr);&lt;br&gt;        System.out.println(list);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;A&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &amp;lt;E&amp;gt; &lt;span class=&#34;hljs-function&#34;&gt;List&amp;lt;E&amp;gt; &lt;span class=&#34;hljs-title&#34;&gt;copyFromArrayToList&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(E[] arr)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//非泛型类也可以定义泛型方法，且可以声明为static&lt;/span&gt;&lt;br&gt;        ArrayList&amp;lt;E&amp;gt; list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (E e : arr) &amp;#123;&lt;br&gt;            list.add(e);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; list;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;泛型在继承上的表现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泛型在继承上的表现&#34;&gt;#&lt;/a&gt; 泛型在继承上的表现&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Array;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/4 - 17:17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 泛型的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、JDK5.0新增的特性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、在集合中使用泛型：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   总结：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ① 集合接口或集合类在JDK5.0时都修改为带泛型的结构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ② 在实例化集合类时，可以指明具体的泛型类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ③ 指明完以后，在集合类或接口中凡是定义类或接口时，内部结构使用到泛型的位置，都指定为实例化时泛型的类型。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*      如：add(E e) ---&amp;gt; 实例化后： add(Integer e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ④ 注意点：泛型的类型必须是类，不能是基本数据类型，需要用到基本数据类型的地方，需要写成包装类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   ⑤ 如果实例化时没有指明泛型的类型，默认类型为java.lang.Object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、如何自定义泛型结构：泛型类、泛型接口、泛型方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;GenericTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//再集合中使用泛型之前的情况&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        ArrayList list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//需求：存放学生的成绩&lt;/span&gt;&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;78&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;76&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//问题一：类型不安全&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list.add(&amp;quot;Tom&amp;quot;);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object score : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//问题二：强转时，可能出现ClassCastException&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; stuScore = (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)score;&lt;br&gt;            System.out.println(stuScore);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//使用泛型的情况&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//使用泛型的时候，基本数据类型必须写成包装类的形式&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        ArrayList&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;Integer&amp;gt;();//不能写int&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK7新特性，类型推断】&lt;/span&gt;&lt;br&gt;        ArrayList&amp;lt;Integer&amp;gt; list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;span class=&#34;hljs-comment&#34;&gt;//不能写int&lt;/span&gt;&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        list.add(&lt;span class=&#34;hljs-number&#34;&gt;456&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//编译时，会进行类型检查，保证数据的安全&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list.add(&amp;quot;Tom&amp;quot;);//编译不通过&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Integer score : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//避免了强转操作&lt;/span&gt;&lt;br&gt;            System.out.println(score);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//以HashMap举例&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Map&amp;lt;String, Integer&amp;gt; map = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jack&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;34&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//类型不符合要求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        map.put(123, &amp;quot;Tom&amp;quot;);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//泛型的嵌套&lt;/span&gt;&lt;br&gt;        Set&amp;lt;Map.Entry&amp;lt;String, Integer&amp;gt;&amp;gt; set = map.entrySet();&lt;br&gt;        Iterator&amp;lt;Map.Entry&amp;lt;String, Integer&amp;gt;&amp;gt; iterator = set.iterator();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 泛型在继承方面的体现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 类A是类B的父类，G&amp;lt;A&amp;gt; 和G&amp;lt;B&amp;gt;不具备子父类关系，二者是并列关系，不能相互赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 类A是类B的父类，A&amp;lt;G&amp;gt; 和 B&amp;lt;G&amp;gt;具有子父类关系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Object obj = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        String str = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        obj = str;&lt;br&gt;&lt;br&gt;        Object[] arr1 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        String[] arr2 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        arr1 = arr2;&lt;br&gt;&lt;br&gt;        List&amp;lt;Object&amp;gt; list1 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        List&amp;lt;String&amp;gt; list2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时list1和list2的类型不具有子父类关系，编译不通过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list1 = list2;//报错&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 原因：假设可以编译通过,则list1和list2指向同一个list对象，通过list1.add()可以添加非String类型的对象到list对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;br&gt;        Date date = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Date();&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        str = date;//这两个报错信息的原理其实是一样的&lt;/span&gt;&lt;br&gt;        &lt;br&gt;        show(list1);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        show(list2);//报错，原理同上&lt;/span&gt;&lt;br&gt;        &lt;br&gt;        List&amp;lt;String&amp;gt; list3 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        ArrayList&amp;lt;String&amp;gt; list4 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        list3 = list4;&lt;span class=&#34;hljs-comment&#34;&gt;//可以赋值，类A是类B的父类，A&amp;lt;G&amp;gt; 和 B&amp;lt;G&amp;gt;具有子父类关系&lt;/span&gt;&lt;br&gt;        &lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(List&amp;lt;Object&amp;gt; list)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;通配符的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通配符的使用&#34;&gt;#&lt;/a&gt; 通配符的使用&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;	&lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 通配符的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 通配符： ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 类A是类B的父类，G&amp;lt;A&amp;gt;和G&amp;lt;B&amp;gt;是并列关系，二者共同的父类是G&amp;lt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 通配符的其他形式：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   ? extends A表示A及A的子类，G&amp;lt;? extends A&amp;gt;可以是G&amp;lt;A&amp;gt;和G&amp;lt;B&amp;gt;的父类，其中B是A的子类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   ? super A表示A及A的父类，G&amp;lt;? extends A&amp;gt;可以是G&amp;lt;A&amp;gt;和G&amp;lt;B&amp;gt;的父类，其中B是A的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;&lt;br&gt;        List&amp;lt;Object&amp;gt; list1 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        List&amp;lt;String&amp;gt; list2 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        List&amp;lt;?&amp;gt; list3 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        list3 = list1;&lt;span class=&#34;hljs-comment&#34;&gt;//可以赋值&lt;/span&gt;&lt;br&gt;        list3 = list2;&lt;span class=&#34;hljs-comment&#34;&gt;//可以赋值&lt;/span&gt;&lt;br&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; list4 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        list4.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;AA&amp;quot;&lt;/span&gt;);&lt;br&gt;        list3 = list4;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//添加：对于List&amp;lt;?&amp;gt;就不能向其内部添加数据，&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//但是可以添加null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        list3.add(&amp;quot;DD&amp;quot;);//报错，类型不匹配&lt;/span&gt;&lt;br&gt;        list3.add(&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//只能添加null&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取(读取)：允许读取数据&lt;/span&gt;&lt;br&gt;        Object o = list3.get(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//读出来的是Object类型&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(List&amp;lt;?&amp;gt; list)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Iterator&amp;lt;?&amp;gt; iterator = list.iterator();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Object o : list) &amp;#123;&lt;br&gt;            System.out.println(o);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;io流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#io流&#34;&gt;#&lt;/a&gt; IO 流&lt;/h2&gt;
&lt;h3 id=&#34;file类的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#file类的使用&#34;&gt;#&lt;/a&gt; File 类的使用&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/5 - 22:07&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* File类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、File类的一个对象，代表一个文件或一个文件目录（俗称：文件夹）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、File类声明在java.io下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、File类中涉及到关机文件或文件目录的创建、删除、重命名、修改时间、文件大小等方法，并未涉及到写入或读取文件内容的操作，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   如果需要读取或写入文件内容，必须使用IO流来完成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、后续File类对象通常会作为参数传递到流的构造器中，指明读取或写入的“目标”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;FileTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、如何创建File类对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   相对路径：相较于某个路径下，指明的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   绝对路径：包含盘符在内的文件或文件目录的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、路径分隔符和系统有关&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   windows和dos系统中，是&amp;#x27;\&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   Unix和URL中，是&amp;#x27;/&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器一：File(String pathName)&lt;/span&gt;&lt;br&gt;        File file1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//表示在当前路径下的hello.txt文件&lt;/span&gt;&lt;br&gt;        File file2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;G:\\JAVA\\learn\\day23&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        File.separatorChar：如果不记得是&amp;#x27;\&amp;#x27;还是&amp;#x27;/&amp;#x27;，可以使用File.separatorChar&lt;/span&gt;&lt;br&gt;        System.out.println(file1);&lt;br&gt;        System.out.println(file2);&lt;span class=&#34;hljs-comment&#34;&gt;//尽管磁盘中没有这个文件/目录，也不会报错&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器二：File(String parent, String child)：在parent路径下新建child路径/文件&lt;/span&gt;&lt;br&gt;        File file3 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;G:\\JAVA\\learn\\day23&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;JavaSenior&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(file3);&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\JavaSenior&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器三：File(File parent, String child)：类似于构造器二&lt;/span&gt;&lt;br&gt;        File file4 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(file3, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(file4);&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\JavaSenior\hello.txt&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * File类常用方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、public String getAbsolutePath()：获取绝对路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、public String getPath()：获取路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、public String getName()：获取名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 4、public String getParent()：获取上层文件目录路径，若无，返回null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 5、public long length()：获取文件长度（即：字节数）。不能获取目录的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 6、public long lastModified()：获取最后一次的修改时间，毫秒值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 如下的两个方法适用于文件目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 7、public String[] list()：获取指定目录下的所有文件或者文件目录的名称数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 8、public File[] listFiles()：获取指定目录下的所有文件或者文件目录的File数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        File file1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        File file2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;G:\\JAVA\\learn\\day23\\JavaSenior\\hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(file1.getAbsolutePath());&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\hello.txt&lt;/span&gt;&lt;br&gt;        System.out.println(file1.getPath());&lt;span class=&#34;hljs-comment&#34;&gt;//hello.txt&lt;/span&gt;&lt;br&gt;        System.out.println(file1.getName());&lt;span class=&#34;hljs-comment&#34;&gt;//hello.txt&lt;/span&gt;&lt;br&gt;        System.out.println(file1.getParent());&lt;span class=&#34;hljs-comment&#34;&gt;//null，以相对路径创建的file不能获取parent&lt;/span&gt;&lt;br&gt;        System.out.println(file1.length());&lt;span class=&#34;hljs-comment&#34;&gt;//0，因为文件不存在&lt;/span&gt;&lt;br&gt;        System.out.println(file1.lastModified());&lt;span class=&#34;hljs-comment&#34;&gt;//0。因为文件不存在&lt;/span&gt;&lt;br&gt;&lt;br&gt;        System.out.println();&lt;br&gt;&lt;br&gt;        System.out.println(file2.getAbsolutePath());&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\JavaSenior\hello.txt&lt;/span&gt;&lt;br&gt;        System.out.println(file2.getPath());&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\JavaSenior\hello.txt&lt;/span&gt;&lt;br&gt;        System.out.println(file2.getName());&lt;span class=&#34;hljs-comment&#34;&gt;//hello.txt&lt;/span&gt;&lt;br&gt;        System.out.println(file2.getParent());&lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\JavaSenior&lt;/span&gt;&lt;br&gt;        System.out.println(file2.length());&lt;br&gt;        System.out.println(file2.lastModified());&lt;br&gt;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;G:\\JAVA\\learn\\day23&amp;quot;&lt;/span&gt;);&lt;br&gt;        String[] list = file.list();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (String s : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//day23.iml src test&lt;/span&gt;&lt;br&gt;            System.out.print(s + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;        System.out.println();&lt;br&gt;        File[] files = file.listFiles();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (File file3 : files) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//G:\JAVA\learn\day23\day23.iml G:\JAVA\learn\day23\src G:\JAVA\learn\day23\test&lt;/span&gt;&lt;br&gt;            System.out.print(file3 + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean renameTo(File desc)：把文件重命名喂指定的文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 比如：file1.renameTo(file2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *       要想保证操作成功：必须保证file1必须存在于硬盘中，且file2不能在硬盘中存在&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        File file1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        File file2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;E:\\hi.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;boolean&lt;/span&gt; renameTo = file1.renameTo(file2);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 判断相关&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean isDirectory()：是否是文件目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean isFile()：是否是文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean exists()：是否存在&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean canRead()：是否可读&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean canWrite()：是否可写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean isHidden()：是否隐藏&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(file.isFile());&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(file.isDirectory());&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(file.exists());&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(file.canRead());&lt;span class=&#34;hljs-comment&#34;&gt;//true,目录也是可读可写的&lt;/span&gt;&lt;br&gt;        System.out.println(file.canWrite());&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(file.isHidden());&lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 增删相关&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean createNewFile()：若文件不存在，则创建文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean mkdir()：创建目录，若目录存在或上级目录不存在，则不创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean mkdirs()：创建目录，若上级目录不存在，则一并创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * public boolean delete()：删除文件或文件夹，若要删除一个目录，必须保证该目录下没有别的文件和目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test5&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//文件的创建与删除&lt;/span&gt;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello1.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(!file.exists())&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                file.createNewFile();&lt;br&gt;                System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;创建成功&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                e.printStackTrace();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            file.delete();&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;删除成功&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//目录的创建与删除&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//父目录存在的情况下&lt;/span&gt;&lt;br&gt;        File file1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;G:\\JAVA\\learn\\day23\\createDirectoryTest&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(!file1.exists())&amp;#123;&lt;br&gt;            file1.mkdir();&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;创建成功&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            file1.delete();&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;删除成功&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//父目录不存在的情况下，使用mkdirs()&lt;/span&gt;&lt;br&gt;        File file2 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;G:\\JAVA\\learn\\day23\\createDirectoryTest1\\test&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(!file2.exists())&amp;#123;&lt;br&gt;            file2.mkdirs();&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;创建成功&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            file2.delete();&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;删除成功&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;流的体系结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流的体系结构&#34;&gt;#&lt;/a&gt; 流的体系结构&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、流的分类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、按照操作数据单位：字节流、字符流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、按照数据的流向：输入流、输出流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3、流的角色：节点流、处理流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、流的体系结构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   抽象基类            节点流                     缓冲流（处理流中的一种）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   InputStream        FileInputStream           BufferedInputStream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   OutputStream       FileOutputStream          BufferedOutputStream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   Reader             FileReader                BufferedReader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   Writer             FileWriter                BufferedWriter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;filereader与filewriter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#filereader与filewriter&#34;&gt;#&lt;/a&gt; FileReader 与 FileWriter&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;FileReaderWriterTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//字符流不能用于处理图片等字节流文件&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//FileReader的使用&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 将day23下的hello.txt文件内容读入程序中，并输出到控制台&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   &amp;gt; 为了保证流资源一定可以执行关闭操作，需要使用try-catch-finally处理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   &amp;gt; 读入的文件一定要存在，否则就会报FileNotFoundException&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、实例化File类的对象，指明要操作的文件&lt;/span&gt;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//相较于当前Module&lt;/span&gt;&lt;br&gt;        FileReader fileReader = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//2、提供具体的流&lt;/span&gt;&lt;br&gt;            fileReader = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileReader(file);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//3、数据的读入&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//int read()：返回读入的一个字符，如果达到文件末尾，返回-1&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; data;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((data = fileReader.read()) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                System.out.print((&lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;)data);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//4、流的关闭操作&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(fileReader != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&lt;br&gt;                    fileReader.close();&lt;br&gt;            &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                e.printStackTrace();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//使用read()重载的方法&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        FileReader fileReader = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            fileReader = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileReader(file);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] cbuf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//read(char[] cbuf)：返回每次读入cbuf数组中的字符的个数，如果达到文件末尾，返回-1&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = fileReader.read(cbuf)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//难点，需要特别注意len的作用&lt;/span&gt;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; len; i++) &amp;#123;&lt;br&gt;                    System.out.print(cbuf[i]);&lt;br&gt;                &amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//                for (char c : cbuf) &amp;#123;//错误的写法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//                    System.out.print(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//                &amp;#125;&lt;/span&gt;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (fileReader != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&lt;br&gt;                    fileReader.close();&lt;br&gt;            &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                e.printStackTrace();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//向写入写入数据&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、若要写入的文件不存在，则会自动创建文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、若要写入的文件存在，则取决于FileWriter构造器中的append参数取值，取值为true，则为追加方式，为false则为覆盖方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、提供File类的对象，指明写出到的文件&lt;/span&gt;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello1.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        FileWriter fileWriter = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//以覆盖方式写入文件&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//2、提供FileWriter类的对象，用于数据的写出&lt;/span&gt;&lt;br&gt;            fileWriter = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileWriter(file, &lt;span class=&#34;hljs-keyword&#34;&gt;false&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//3、写出的操作&lt;/span&gt;&lt;br&gt;            fileWriter.write(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;I have a dream \n&amp;quot;&lt;/span&gt;);&lt;br&gt;            fileWriter.write(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;You need to have a dream \n&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (fileWriter != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    fileWriter.close();&lt;span class=&#34;hljs-comment&#34;&gt;//4、流资源的关闭&lt;/span&gt;&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;fileinputstream与fileoutputstream&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fileinputstream与fileoutputstream&#34;&gt;#&lt;/a&gt; FileInputStream 与 FileOutputStream&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileInputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/6 - 20:52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* FileInputStream与FileOutputStream的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;FileInputOutputStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 字节流不能用来读取单个字符长度超过1字节的文本文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 结论：对于文本文件（.txt\.java\.cpp），使用字符流处理；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 对于非文本文件(.jpg\.mp3\.avi\.doc\.ppt等)，使用字节流处理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        File file = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;        FileInputStream fileInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            fileInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(file);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = fileInputStream.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                String s = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ,len);&lt;br&gt;                System.out.print(s);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(fileInputStream != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    fileInputStream.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 实现一张图片的复制操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//建File&lt;/span&gt;&lt;br&gt;        File src = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;花.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        File dest = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;花_copy.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//建流类&lt;/span&gt;&lt;br&gt;        FileInputStream fileInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        FileOutputStream fileOutputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            fileInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(src);&lt;br&gt;            fileOutputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(dest);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//复制的过程&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = fileInputStream.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                fileOutputStream.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ,len);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//关闭&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(fileInputStream != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    fileInputStream.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(fileOutputStream != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    fileOutputStream.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;缓冲流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缓冲流&#34;&gt;#&lt;/a&gt; 缓冲流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/6 - 21:43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 缓冲流的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、缓冲流：BufferedInputStream、BufferedOutputStream、BufferedReader、BufferedWriter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、作用：提升流读取、写入的速度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、处理流，就是”套接“在已有的流的基础上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;BufferedTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 实现非文本文件的复制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//造文件&lt;/span&gt;&lt;br&gt;        File src = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;花.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        File dest = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;花_copy2.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        BufferedInputStream bufferedInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        BufferedOutputStream bufferedOutputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//造流：处理流作用在节点流之上&lt;/span&gt;&lt;br&gt;            bufferedInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BufferedInputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(src));&lt;br&gt;            bufferedOutputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BufferedOutputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(dest));&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//复制的细节&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = bufferedInputStream.read(buffer))!= -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                bufferedOutputStream.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//                bufferedOutputStream.flush();//刷新缓冲区&lt;/span&gt;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//关闭流&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;// 原则上，四个都要关，先关闭处理流，再关闭节点流&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;// 特性：在关闭外层流的同时，内层流也会自动关闭，所以只关闭处理流即可&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(bufferedInputStream != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&lt;br&gt;                    bufferedInputStream.close();&lt;br&gt;            &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                e.printStackTrace();&lt;br&gt;            &amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (bufferedOutputStream != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;br&gt;                    bufferedOutputStream.close();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                e.printStackTrace();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//BufferedReader和BufferedWriter的使用&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        BufferedReader bufferedReader = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        BufferedWriter bufferedWriter = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//造对象&lt;/span&gt;&lt;br&gt;            bufferedReader = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileReader(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;)));&lt;br&gt;            bufferedWriter = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BufferedWriter(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileWriter(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello_copy.txt&amp;quot;&lt;/span&gt;)));&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] cbuf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//方法一&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;/*int len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;            //读写操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;            while((len = bufferedReader.read(cbuf))!= -1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;                bufferedWriter.write(cbuf,0,len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    //            bufferedWriter.flush();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;            &amp;#125;*/&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//方法二：使用String&lt;/span&gt;&lt;br&gt;            String str;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((str = bufferedReader.readLine()) != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//这个方法读不出来换行符&lt;/span&gt;&lt;br&gt;                bufferedWriter.write(str + &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//手动添加换行符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//                bufferedWriter.newLine();//添加换行符，和手动添加&amp;#x27;\n&amp;#x27;效果相同&lt;/span&gt;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//关闭资源&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (bufferedReader != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    bufferedReader.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (bufferedWriter != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    bufferedWriter.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;转换流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#转换流&#34;&gt;#&lt;/a&gt; 转换流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/8 - 1:23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 处理流二：转换流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、属于字符流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、包括&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; InputStreamReader：将一个字节的输入流转换为字符的输入流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; OutputStreamWriter：将一个字符的输出流转换为字节的输出流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、作用：提供字节流与字符流之间的转换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、解码：字节、字节数组 ---&amp;gt; 字符数组、字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    编码：字符数组、字符串---&amp;gt; 字节、字节数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 5、字符集：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; ASCII：美国标准信息交换码，用一个字节的7位表示&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; ISO8859-1:拉丁码表，欧洲码表，用一个字节的8位表示&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; GB2312：中国的中文编码表，最多两个字节编码所有字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; GBK：中国的中文编码表升级，融合了更多的中文文字符号，最多两个字节编码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; Unicode：国际标准码，融合了目前人类使用的所有字符，为每一个字符分配唯一的字符码，每个字符使用2字节       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; UTF-8：变长的编码方式，可用1-4个字节来表示一个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; ANSI：系统默认字符集，英文系统是ISO8859-1,中文操作系统是GBK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ChangeStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * InputStreamReader的使用：实现字节输入流到字符流的转换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 应该使用try-catch-finally处理异常，这里懒得写了，直接throws IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;br&gt;        FileInputStream fis = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;));&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        InputStreamReader isr = new InputStreamReader(fis);//使用系统默认字符集&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//参数2指明了字符集，根据文件的编码字符集选择解码字符集&lt;/span&gt;&lt;br&gt;        InputStreamReader isr1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; InputStreamReader(fis, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//使用系统默认字符集&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] cbuf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = isr1.read(cbuf))!= -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            String str = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(cbuf, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;            System.out.print(str);&lt;br&gt;        &amp;#125;&lt;br&gt;        isr1.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * InputStreamReader和OutputStreamWriter的综合使用：读取utf-8的文件，并以gbk编码存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 应该使用try-catch-finally处理异常，这里懒得写了，直接throws IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;br&gt;        InputStreamReader isr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; InputStreamReader(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello.txt&amp;quot;&lt;/span&gt;)));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以GBK字符集写入&lt;/span&gt;&lt;br&gt;        OutputStreamWriter osw = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; OutputStreamWriter(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; 				      File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello_gbk.txt&amp;quot;&lt;/span&gt;)),&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;GBK&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] cbuf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; ((len = isr.read(cbuf)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            String s = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(cbuf, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;            osw.write(s);&lt;br&gt;            System.out.print(s);&lt;br&gt;        &amp;#125;&lt;br&gt;        isr.close();&lt;br&gt;        osw.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;标准输入输出流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标准输入输出流&#34;&gt;#&lt;/a&gt; 标准输入输出流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.BufferedInputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.BufferedReader;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.InputStreamReader;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/8 - 23:32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 其它流的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、标准输入、输出流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、打印流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、数据流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;OtherStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 1、标准的输入、输出流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   System.in：标准的输入流，默认从键盘输入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   System.out:标准的输出流，默认从控制台输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 2、System类的setIn(InputStream)和setOut(PrintStream)可以使输入输出重定向&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 3、练习：从键盘输入字符串直到e或者exit时退出，将输入的字符串转成大写输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   &amp;gt; 方法一：使用Scanner实现，调用next()返回字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    *   &amp;gt; 方法二：使用System.in实现：System.in ---&amp;gt; 转换流 ---&amp;gt; BufferedInputStream中的readLine()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//@Test中不能进行输入输出操作，所以放在main中&lt;/span&gt;&lt;br&gt;        BufferedReader br = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            InputStreamReader isr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; InputStreamReader(System.in);&lt;br&gt;            br = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; BufferedReader(isr);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;)&amp;#123;&lt;br&gt;                System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;请输入字符串&amp;quot;&lt;/span&gt;);&lt;br&gt;                String data = br.readLine();&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;e&amp;quot;&lt;/span&gt;.equalsIgnoreCase(data) || &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;exit&amp;quot;&lt;/span&gt;.equalsIgnoreCase(data))&amp;#123;&lt;br&gt;                    System.exit(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;                    System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;程序结束&amp;quot;&lt;/span&gt;);&lt;br&gt;                &amp;#125;&lt;br&gt;                String upperCase = data.toUpperCase();&lt;br&gt;                System.out.println(upperCase);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (br != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    br.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;打印流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#打印流&#34;&gt;#&lt;/a&gt; 打印流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.PrintStream;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/9 - 16:32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 打印流的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* PrintStream和PrintWriter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、提供了一系列重载的print()和printLine()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;PrintStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//练习：重定向控制台的输出到test.txt&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建打印流，autoFlush设置为true（写入换行符或字节&amp;#x27;\n&amp;#x27;都会刷新缓冲区）&lt;/span&gt;&lt;br&gt;        PrintStream ps = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; PrintStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;), &lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(ps != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;            System.setOut(ps);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;; i++) &amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//如果没有重定向，则是输出到控制台&lt;/span&gt;&lt;br&gt;            System.out.print((&lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;)i);&lt;span class=&#34;hljs-comment&#34;&gt;//调用重载的print(char)方法，如果不强转，调用的是print(int)&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (i % &lt;span class=&#34;hljs-number&#34;&gt;50&lt;/span&gt; == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;br&gt;                System.out.println();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;数据流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据流&#34;&gt;#&lt;/a&gt; 数据流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/9 - 16:54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 数据流的使用：用于读取或写出基本数据类型的变量或字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、DataInputStream和DataOutputStream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、DataInputStream中的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; readBoolean       &amp;gt; readByte&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; readChar          &amp;gt; readFloat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; readDouble        &amp;gt; readShort&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; readLong          &amp;gt; readInt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; readUTF           &amp;gt; readFully(byte[] b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、DataOutputStream中的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   把DataInputStream中的方法的read改成write即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、注意点:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 5、缺点：无法存取对象，解决方法：使用对象流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DataStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//将内存中的字符串、基本数据类型的变量写出到文件data.txt中&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//造流类&lt;/span&gt;&lt;br&gt;        DataOutputStream dataOutputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; DataOutputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;data.txt&amp;quot;&lt;/span&gt;)));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//写数据&lt;/span&gt;&lt;br&gt;        dataOutputStream.writeUTF(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;数据输出流测试&amp;quot;&lt;/span&gt;);&lt;br&gt;        dataOutputStream.flush();&lt;span class=&#34;hljs-comment&#34;&gt;//刷新缓冲区，立刻写入&lt;/span&gt;&lt;br&gt;        dataOutputStream.writeInt(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        dataOutputStream.writeChar(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//关闭&lt;/span&gt;&lt;br&gt;        dataOutputStream.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//将文件中存储的基本数据类型变量和字符串读取到内存中&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//造流类&lt;/span&gt;&lt;br&gt;        DataInputStream dataInputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; DataInputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;data.txt&amp;quot;&lt;/span&gt;)));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//读取:必须按照写入的顺序读取&lt;/span&gt;&lt;br&gt;        System.out.println(dataInputStream.readUTF());&lt;br&gt;        System.out.println(dataInputStream.readInt());&lt;br&gt;        System.out.println(dataInputStream.readChar());&lt;br&gt;        dataInputStream.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;对象流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对象流&#34;&gt;#&lt;/a&gt; 对象流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/10 - 0:45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 对象流的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、ObjectInputStream和ObjectOutputStream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、用于存储和读取基本数据类型诗句或对象的处理流。可以把Java中的对象写入到数据源中，也能把对象从数据源中还原回来&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、自定义类实现序列化和反序列化的操作：需要实现Serializable接口，提供public static final long serialVersionUID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 凡是标识为Serializable的类，就表示该类是可序列化的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; Serializable接口下没有具体要实现的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 如果不提供serialVersionUID，java运行环境会根据类的内部细节自动生成一个，但是若当前的类发生了变化，serialVersionUID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*     可能发生变化，导致在反序列化的时候出问题。所以建议显示声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 除了被序列化的类声明为serializable，其内部所有属性也必须是可序列化的（基本数据类型默认都是可视化的）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; 声明为static或transient的属性不能被序列化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ObjectStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 序列化过程：将内存中的java对象保存到磁盘中或通过网络传输出去&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 使用ObjectOutputStream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;br&gt;        ObjectOutputStream oos = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;span class=&#34;hljs-comment&#34;&gt;//序列化过程&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//造对象&lt;/span&gt;&lt;br&gt;            oos = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Object.dat&amp;quot;&lt;/span&gt;));&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//写数据&lt;/span&gt;&lt;br&gt;            oos.writeObject(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我爱浙江&amp;quot;&lt;/span&gt;));&lt;br&gt;            oos.writeObject(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;));&lt;span class=&#34;hljs-comment&#34;&gt;//自定义类的序列化&lt;/span&gt;&lt;br&gt;            oos.flush();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (oos != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-comment&#34;&gt;//关闭&lt;/span&gt;&lt;br&gt;                    oos.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 反序列化：将磁盘文件中的对象还原为内存中的一个java对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 使用ObjectInputStream来实现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        ObjectInputStream ois = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//造对象&lt;/span&gt;&lt;br&gt;            ois = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Object.dat&amp;quot;&lt;/span&gt;));&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//读数据，写的时候是什么顺序，读的时候就是什么顺序。&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//开发中，一般都是同一类数据&lt;/span&gt;&lt;br&gt;            String str = (String)ois.readObject();&lt;br&gt;            Person person = (Person)ois.readObject();&lt;span class=&#34;hljs-comment&#34;&gt;//自定义对象的反序列化&lt;/span&gt;&lt;br&gt;            System.out.println(str);&lt;br&gt;            System.out.println(person);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (ClassNotFoundException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(ois != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    &lt;span class=&#34;hljs-comment&#34;&gt;//关闭流&lt;/span&gt;&lt;br&gt;                    ois.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.Serializable;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Objects;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/10 - 1:19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 自定义类实现序列化和反序列化的操作：需要实现Serializable接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Serializable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;long&lt;/span&gt; serialVersionUID = &lt;span class=&#34;hljs-number&#34;&gt;453897528957842985L&lt;/span&gt;;&lt;br&gt;    String name;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.age = age;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt; == o) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (o == &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt; || getClass() != o.getClass()) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;false&lt;/span&gt;;&lt;br&gt;        Person person = (Person) o;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; age == person.age &amp;amp;&amp;amp; Objects.equals(name, person.name);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Objects.hash(name, age);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; name;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; age;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;setAge&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.age = age;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Person&amp;#123;&amp;quot;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;name=&amp;#x27;&amp;quot;&lt;/span&gt; + name + &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;\&amp;#x27;&amp;#x27;&lt;/span&gt; +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, age=&amp;quot;&lt;/span&gt; + age +&lt;br&gt;                &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;随机存取文件流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#随机存取文件流&#34;&gt;#&lt;/a&gt; 随机存取文件流&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.RandomAccessFile;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/10 - 2:33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* RandomAccessFile类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、既可以作为输入流，又可以作为输出流（建议造两个对象，一个表示输入，一个表示输出）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、mode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; r 以只读的方式打开&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; rw 可以读也可以写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; rws 可读写，同步文件内容和元数据的更新&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   &amp;gt; rwd 可读写，同步文件内容的更新&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、作为输出流时，如果写入的文件不存在，则会自动创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*    若写入的文件存在，则默认从头开始覆盖&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 4、seek(int pos)方法可以定位指针位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;RandomAccessFileTest&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;br&gt;        RandomAccessFile randomAccessFile = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        RandomAccessFile randomAccessFile1 = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            randomAccessFile = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RandomAccessFile(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;花.jpg&amp;quot;&lt;/span&gt;), &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;);&lt;br&gt;            randomAccessFile1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RandomAccessFile(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;花_randomCopy.jpg&amp;quot;&lt;/span&gt;), &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; ((len = randomAccessFile.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;br&gt;                randomAccessFile1.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (randomAccessFile != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    randomAccessFile.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (randomAccessFile1 != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    randomAccessFile1.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;br&gt;        RandomAccessFile rw = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RandomAccessFile(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;randomTest.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;);&lt;br&gt;        rw.seek(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//将指针调到角标为3的位置，角标是从0开始的&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//其实write执行的就是覆盖的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        rw.write(&amp;quot;xyz&amp;quot;.getBytes());//因为参数是byte[]，这里执行的是覆盖&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//下面实现插入（而不是覆盖），先复制后面部分，然后执行写入，最后把复制好的再写入到文件后面&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、保存指针3后面的数据到StringBuilder中&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//使用StringBuilder，长度设置为文件长度&lt;/span&gt;&lt;br&gt;        StringBuilder builder = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; StringBuilder((&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; File(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;randomTest.txt&amp;quot;&lt;/span&gt;).length());&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = rw.read(buffer))!= -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            builder.append(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; , len));&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//读取完后，指针指向文件末尾，所以要重新定位&lt;/span&gt;&lt;br&gt;        rw.seek(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//写入要插入的字符串&lt;/span&gt;&lt;br&gt;        rw.write(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;xyz&amp;quot;&lt;/span&gt;.getBytes());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//写入刚才复制的字符串&lt;/span&gt;&lt;br&gt;        rw.write(builder.toString().getBytes());&lt;span class=&#34;hljs-comment&#34;&gt;//StringBuilder没有getBytes()方法，所以先转换成String再调用toString()&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//关闭流&lt;/span&gt;&lt;br&gt;        rw.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;nio2中path-paths-files类的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nio2中path-paths-files类的使用&#34;&gt;#&lt;/a&gt; NIO.2 中 Path、Paths、Files 类的使用&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/10 - 14:51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* Path、Paths、Files类的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、Path类用于替换File类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、Paths.get(String path)用于获取Path类的实例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、Files是工具类，有一些操作文件目录的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;NIO2Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;网络编程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络编程&#34;&gt;#&lt;/a&gt; 网络编程&lt;/h2&gt;
&lt;h3 id=&#34;inetaddress类的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inetaddress类的使用&#34;&gt;#&lt;/a&gt; InetAddress 类的使用&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.InetAddress;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.UnknownHostException;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/10 - 15:29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 一、网络编程中有两个主要的问题：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、如何准确地定位网络上一台或多态主机；定位主机上的特定的应用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、找到主机后如何可靠高效地进行数据传输&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 二、网络编程中的两个要素：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、对应问题一：IP和端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、对应问题二：提供网络通信协议：TCP/IP参考模型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 三、通信要素一：IP和端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   1、IP：唯一标识Internet上的计算机（通信实体）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   2、在Java中使用InetAddress类代表IP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   3、IP分类：IPv4和IPv6；万维网和局域网&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   4、本地回路地址：127.0.0.1，对应着localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   6、如何实例化InetAddress：两个方法①getByName() ②getLocalHost&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*       两个常用方法：①getHostName() ②getHostAddress()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   7、端口号：标实正在计算机上运行的进程，要求不同的进程有不同的端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*      &amp;gt; 系统端口号：0~1023，应用端口号：1023~49151，私有端口号：49152~65535&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   8、端口号与IP地址的组合得出一个网络套接字：Socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InetAddressTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            InetAddress inet1 = InetAddress.getByName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;192.168.10.1&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//通过IP地址&lt;/span&gt;&lt;br&gt;            System.out.println(inet1);&lt;br&gt;            InetAddress inet2 = InetAddress.getByName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;www.baidu.com&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//通过域名&lt;/span&gt;&lt;br&gt;            System.out.println(inet2);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//getHostName()：获取主机名&lt;/span&gt;&lt;br&gt;            System.out.println(inet2.getHostName());&lt;span class=&#34;hljs-comment&#34;&gt;//www.baidu.com&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//getHostAddress()：获取IP地址&lt;/span&gt;&lt;br&gt;            System.out.println(inet2.getHostAddress());&lt;span class=&#34;hljs-comment&#34;&gt;//183.232.231.172&lt;/span&gt;&lt;br&gt;            InetAddress inet3 = InetAddress.getByName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//本机地址&lt;/span&gt;&lt;br&gt;            System.out.println(inet3);&lt;br&gt;            InetAddress localHost = InetAddress.getLocalHost();&lt;span class=&#34;hljs-comment&#34;&gt;//获取本机&lt;/span&gt;&lt;br&gt;            System.out.println(localHost);&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (UnknownHostException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;建立tcp连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#建立tcp连接&#34;&gt;#&lt;/a&gt; 建立 TCP 连接&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.*;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.InetAddress;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.ServerSocket;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.Socket;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/13 - 23:31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 实现TCP的网络编程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 例子1：客户端发送信息给服务端，服务端将数据显示在控制台上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 例子2：客户端发送文件给服务端，服务端把文件存储在本地&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 例子3：客户端发送文件给服务端，服务端把文件存储在本地，并返回“发送成功给客户端”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;TCPTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//  例子1：客户端发送信息给服务端，服务端将数据显示在控制台上&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//客户端&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得用try-catch-finally,懒得写了。。。。&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、创建Socket对象，指明服务器端的ip和端口号&lt;/span&gt;&lt;br&gt;        InetAddress inet = InetAddress.getByName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//这里填写的是服务端的IP&lt;/span&gt;&lt;br&gt;        Socket socket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Socket(inet, &lt;span class=&#34;hljs-number&#34;&gt;64323&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//2、获取一个输出流，用于输出数据&lt;/span&gt;&lt;br&gt;        OutputStream outputStream = socket.getOutputStream();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//3、写出数据，相当于向客户端发送数据&lt;/span&gt;&lt;br&gt;        outputStream.write(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;你好，我是客户端&amp;quot;&lt;/span&gt;.getBytes());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//4、关闭资源&lt;/span&gt;&lt;br&gt;        outputStream.close();&lt;span class=&#34;hljs-comment&#34;&gt;//记得关闭资源&lt;/span&gt;&lt;br&gt;        socket.close();&lt;span class=&#34;hljs-comment&#34;&gt;//记得关闭资源&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//服务端&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得用try-catch-finally,懒得写了。。。。&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、创建服务器端的ServerSocket，指明自己的端口号&lt;/span&gt;&lt;br&gt;        ServerSocket serverSocket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&#34;hljs-number&#34;&gt;64323&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//此处的端口号客户机连接的端口号&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//2、调用accept()方法，表示接受来自客户端的socket&lt;/span&gt;&lt;br&gt;        Socket socket = serverSocket.accept();&lt;span class=&#34;hljs-comment&#34;&gt;//表示接受客户端连接&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//3、获取输入流&lt;/span&gt;&lt;br&gt;        InputStream inputStream = socket.getInputStream();&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        byte[] buffer = new byte[20];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        int len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        while((len = inputStream.read(buffer)) != -1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//            String s = new String(buffer, 0, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//            System.out.print(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        &amp;#125; //用于处理中文字符会出错&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//4、读取输入流的数据&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;];&lt;br&gt;        ByteArrayOutputStream baos = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ByteArrayOutputStream();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = inputStream.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//这个流类的write方法会写入自身内部的byte数组&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//全部读取完后再toString()这样可以避免出现字节流读取中文字符的乱码问题&lt;/span&gt;&lt;br&gt;            baos.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; , len);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这里调用baos的toString()方法，实际上是调用baos内部的数组的toString()方法&lt;/span&gt;&lt;br&gt;        System.out.println(baos.toString());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//5、所有资源都需要关闭&lt;/span&gt;&lt;br&gt;        baos.close();&lt;br&gt;        inputStream.close();&lt;br&gt;        socket.close();&lt;br&gt;        serverSocket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//例子2：客户端发送文件给服务端，服务端把文件存储在本地&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得用try-catch-finally&lt;/span&gt;&lt;br&gt;        Socket socket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Socket(InetAddress.getByName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;),&lt;span class=&#34;hljs-number&#34;&gt;9090&lt;/span&gt;);&lt;br&gt;        OutputStream outputStream = socket.getOutputStream();&lt;br&gt;        FileInputStream fis = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;flower.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = fis.read(buffer))!= -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            outputStream.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; , len);&lt;br&gt;        &amp;#125;&lt;br&gt;        fis.close();&lt;br&gt;        outputStream.close();&lt;br&gt;        socket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;server1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得try-catch-finally&lt;/span&gt;&lt;br&gt;        ServerSocket serverSocket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&#34;hljs-number&#34;&gt;9090&lt;/span&gt;);&lt;br&gt;        Socket socket = serverSocket.accept();&lt;br&gt;        InputStream inputStream = socket.getInputStream();&lt;br&gt;        FileOutputStream fos = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;flower_copy.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = inputStream.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            fos.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;        &amp;#125;&lt;br&gt;        fos.close();&lt;br&gt;        inputStream.close();&lt;br&gt;        socket.close();&lt;br&gt;        serverSocket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//例子3：客户端发送文件给服务端，服务端把文件存储在本地，并返回“发送成功给客户端”&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得用try-catch-finally&lt;/span&gt;&lt;br&gt;        Socket socket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Socket(InetAddress.getByName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;),&lt;span class=&#34;hljs-number&#34;&gt;9090&lt;/span&gt;);&lt;br&gt;        OutputStream outputStream = socket.getOutputStream();&lt;br&gt;        FileInputStream fis = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;flower.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = fis.read(buffer))!= -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            outputStream.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; , len);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//关闭数据的输出&lt;/span&gt;&lt;br&gt;        socket.shutdownOutput();&lt;span class=&#34;hljs-comment&#34;&gt;//********************没有此语句的话，会报错******************&lt;/span&gt;&lt;br&gt;        InputStream inputStream = socket.getInputStream();&lt;br&gt;        ByteArrayOutputStream baos = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ByteArrayOutputStream();&lt;br&gt;        buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = inputStream.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            baos.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ,len);&lt;br&gt;        &amp;#125;&lt;br&gt;        System.out.println(baos.toString());&lt;br&gt;        inputStream.close();&lt;br&gt;        baos.close();&lt;br&gt;        fis.close();&lt;br&gt;        outputStream.close();&lt;br&gt;        socket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;server2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得try-catch-finally&lt;/span&gt;&lt;br&gt;        ServerSocket serverSocket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ServerSocket(&lt;span class=&#34;hljs-number&#34;&gt;9090&lt;/span&gt;);&lt;br&gt;        Socket socket = serverSocket.accept();&lt;br&gt;        InputStream inputStream = socket.getInputStream();&lt;br&gt;        FileOutputStream fos = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;flower_copy2.jpg&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = inputStream.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            fos.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//服务器向客户机发送数据&lt;/span&gt;&lt;br&gt;        OutputStream outputStream = socket.getOutputStream();&lt;br&gt;        outputStream.write(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;照片已收到&amp;quot;&lt;/span&gt;.getBytes());&lt;br&gt;        outputStream.close();&lt;br&gt;        fos.close();&lt;br&gt;        inputStream.close();&lt;br&gt;        socket.close();&lt;br&gt;        serverSocket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;udp连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#udp连接&#34;&gt;#&lt;/a&gt; UDP 连接&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.DatagramPacket;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.DatagramSocket;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.InetAddress;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.InetSocketAddress;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.nio.charset.StandardCharsets;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/15 - 14:40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* UDP协议的例子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;UDPTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//发送端&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;br&gt;        DatagramSocket socket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; DatagramSocket();&lt;span class=&#34;hljs-comment&#34;&gt;//不使用参数&lt;/span&gt;&lt;br&gt;        String str = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我是UDP方式发送的数据&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] data = str.getBytes();&lt;br&gt;        InetAddress inet = InetAddress.getLocalHost();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//将需要发送的数据封装在datagramPacket&lt;/span&gt;&lt;br&gt;        DatagramPacket packet = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; DatagramPacket(data, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; , data.length, inet, &lt;span class=&#34;hljs-number&#34;&gt;9090&lt;/span&gt;);&lt;br&gt;        socket.send(packet);&lt;br&gt;        socket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//接收端&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;receiver&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;br&gt;        DatagramSocket socket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; DatagramSocket(&lt;span class=&#34;hljs-number&#34;&gt;9090&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//指明端口号&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] data = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;];&lt;br&gt;        DatagramPacket packet = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; DatagramPacket(data, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, data.length);&lt;br&gt;        socket.receive(packet);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//packet中的getLength()方法可以返回长度&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getData()返回的其实就是byte[]&lt;/span&gt;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(packet.getData(), &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, packet.getLength()));&lt;br&gt;        socket.close();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;url网络编程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#url网络编程&#34;&gt;#&lt;/a&gt; URL 网络编程&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.InputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.HttpURLConnection;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.MalformedURLException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.URL;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.net.URLConnection;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/15 - 14:59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* URL网络编程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、URL：统一资源定位符，对应着互联网的某一资源地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、格式：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   http://localhost:8080/examples/flower?uername=Tom&amp;amp;id=1001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*   协议      主机名  端口号      资源地址        参数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;URLTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            URL url = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; URL(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://localhost:8080/examples/flower?uername=Tom&amp;amp;id=1001&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//获取协议&lt;/span&gt;&lt;br&gt;            System.out.println(url.getProtocol());&lt;span class=&#34;hljs-comment&#34;&gt;//http&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//获取主机名&lt;/span&gt;&lt;br&gt;            System.out.println(url.getHost());&lt;span class=&#34;hljs-comment&#34;&gt;//localhost&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//获取端口号&lt;/span&gt;&lt;br&gt;            System.out.println(url.getPort());&lt;span class=&#34;hljs-comment&#34;&gt;//8080&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//获取文件路径&lt;/span&gt;&lt;br&gt;            System.out.println(url.getPath());&lt;span class=&#34;hljs-comment&#34;&gt;//    /examples/flower&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//获取URL文件名&lt;/span&gt;&lt;br&gt;            System.out.println(url.getFile());&lt;span class=&#34;hljs-comment&#34;&gt;//    /examples/flower?uername=Tom&amp;amp;id=1001&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//获取URL的查询名（即参数）&lt;/span&gt;&lt;br&gt;            System.out.println(url.getQuery());&lt;span class=&#34;hljs-comment&#34;&gt;//uername=Tom&amp;amp;id=1001&lt;/span&gt;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (MalformedURLException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//通过URL下载文件&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//因为未配置tomcat，此代码暂时无法运行&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;URLtest1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得用try-catch-finally&lt;/span&gt;&lt;br&gt;        URL url = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; URL(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://localhost:8080/examples/flower.jpg?uername=Tom&amp;amp;id=1001&amp;quot;&lt;/span&gt;);&lt;br&gt;        HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();&lt;span class=&#34;hljs-comment&#34;&gt;//得到一个URL连接&lt;/span&gt;&lt;br&gt;        urlConnection.connect();&lt;span class=&#34;hljs-comment&#34;&gt;//连接&lt;/span&gt;&lt;br&gt;        InputStream is = urlConnection.getInputStream();&lt;span class=&#34;hljs-comment&#34;&gt;//获取输入流&lt;/span&gt;&lt;br&gt;        FileOutputStream fileOutputStream = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;flower_copy_3&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[] buffer = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;byte&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt;((len = is.read(buffer)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;            fileOutputStream.write(buffer, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; ,len);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//关闭资源&lt;/span&gt;&lt;br&gt;        fileOutputStream.close();&lt;br&gt;        is.close();&lt;br&gt;        urlConnection.disconnect();&lt;span class=&#34;hljs-comment&#34;&gt;//断开连接&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;反射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射&#34;&gt;#&lt;/a&gt; 反射&lt;/h2&gt;
&lt;h3 id=&#34;反射能做什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射能做什么&#34;&gt;#&lt;/a&gt; 反射能做什么&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Constructor;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Field;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Method;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/16 - 1:47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 1、反射机制与面向对象中的封装性是不是矛盾？如何看待两个技术？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 不矛盾。（面试的时候必须这么说hhh）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 封装性解决的是建议使用和不建议使用的问题，反射解决的是能不能调用的问题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 2、通过直接new的方式或反射的方式都可以调用公共的结构，开发中用哪个？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 建议：直接new的方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 什么时候使用反射：编译的时候不能确定需要造什么类的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 3、关于java.lang.Class类的理解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 类的加载过程：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      程序在经过javac.exe命令后，会生成一个或多个字节码文件(.class)，接着我们使用java.exe命令对某个字节码文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      解释运行，相当于将某个字节码文件加载到内存中，此过程就称为类的加载。加载到内存中的类称为运行时类，就作为Class&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      的一个实例。换句话说，Class的实例就对应着一个运行时类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 哪些类型可以有Class对象？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      类，数组，接口，枚举，注解，基本数据类型，void&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      注意:对于数组，只要数组的类型和维度一致，那么Class就是相同的。比如 int[] a = new int[10]; int[] b = new int[100]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ReflectionTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//反射之前，对于Person的操作&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、创建Person类的对象&lt;/span&gt;&lt;br&gt;        Person person = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//2、通过对象，调用其内部的属性、方法&lt;/span&gt;&lt;br&gt;        person.age = &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;;&lt;br&gt;        System.out.println(person.toString());&lt;br&gt;        person.show();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//在Person类外部，不可以通过Person类对象调用其内部私有结构&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//比如：name、showNation()以及私有构造器&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//有了反射之后，对于Person的操作&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、通过反射，创建类的对象&lt;/span&gt;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Constructor&amp;lt;Person&amp;gt; constructor = personClass.getConstructor(String.class, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;.class);&lt;br&gt;        Person person = constructor.newInstance(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Ton&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;        System.out.println(person.toString());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//2、通过反射，调用对象指定的属性和方法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用属性&lt;/span&gt;&lt;br&gt;        Field age = personClass.getDeclaredField(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;);&lt;br&gt;        age.set(person, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;        System.out.println(person);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用方法&lt;/span&gt;&lt;br&gt;        Method show = personClass.getDeclaredMethod(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;show&amp;quot;&lt;/span&gt;);&lt;br&gt;        show.invoke(person);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//3、通过反射，调用类的私有结构，如私有属性、私有方法、私有构造器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用私有构造器&lt;/span&gt;&lt;br&gt;        Constructor&amp;lt;Person&amp;gt; declaredConstructor = personClass.getDeclaredConstructor(String.class);&lt;br&gt;        declaredConstructor.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        Person person1 = declaredConstructor.newInstance(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(person1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用私有属性&lt;/span&gt;&lt;br&gt;        Field name = personClass.getDeclaredField(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;);&lt;br&gt;        name.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        name.set(person1, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Mike&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(person1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用私有方法&lt;/span&gt;&lt;br&gt;        Method showNation = personClass.getDeclaredMethod(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;showNation&amp;quot;&lt;/span&gt;, String.class);&lt;br&gt;        showNation.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//相当于String nation = person1.showNation(&amp;quot;中国&amp;quot;)&lt;/span&gt;&lt;br&gt;        String nation = (String) showNation.invoke(person1, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;中国&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//    注意:对于数组，只要数组的类型和维度一致，那么Class就是相同的&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[] a = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;];&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[] b = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;];&lt;br&gt;        System.out.println(a.getClass() == b.getClass());&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取class实例的四种方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取class实例的四种方式&#34;&gt;#&lt;/a&gt; 获取 Class 实例的四种方式&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/16 - 2:44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 获取Class实例的四种方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ToGetClass&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式一：类名.class&lt;/span&gt;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass1 = Person.class;&lt;br&gt;        System.out.println(personClass1);&lt;span class=&#34;hljs-comment&#34;&gt;//class Person&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式二：通过运行时类的对象&lt;/span&gt;&lt;br&gt;        Person person = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person();&lt;br&gt;        Class&amp;lt;? extends Person&amp;gt; personClass2 = person.getClass();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式三：调用Class的静态方法：forName(String classPath)，classPath需要带上包名&lt;/span&gt;&lt;br&gt;        Class&amp;lt;?&amp;gt; clazz = Class.forName(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以下两行代码说明：加载到内存中的运行时类，会缓存一段时间，在此时间内，我们可以通过不同的方式来获取此运行时类&lt;/span&gt;&lt;br&gt;        System.out.println(personClass1 == personClass2);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(personClass1 == clazz);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方式四：使用类的加载器ClassLoader,所在类名.class.getClassLoader&lt;/span&gt;&lt;br&gt;        ClassLoader classLoader = ToGetClass.class.getClassLoader();&lt;br&gt;        Class&amp;lt;?&amp;gt; clazz1 = classLoader.loadClass(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;类加载器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#类加载器&#34;&gt;#&lt;/a&gt; 类加载器&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.FileInputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.InputStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Properties;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/16 - 17:11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 了解类的加载器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、引导类加载器：加载Java核心库，该加载器无法直接获取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、扩展类加载器：加载jre/lib/ext里面的jar包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 3、系统类加载器：加载自己写的类，是最常用的加载器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ClassLoaderTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//对于自定义类，使用系统类加载器进行加载&lt;/span&gt;&lt;br&gt;        ClassLoader classLoader = ClassLoaderTest.class.getClassLoader();&lt;br&gt;        System.out.println(classLoader);&lt;span class=&#34;hljs-comment&#34;&gt;//sun.misc.Launcher$AppClassLoader@18b4aac2，是系统类加载器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用系统加载器的getParent()，获取扩展类加载器&lt;/span&gt;&lt;br&gt;        System.out.println(classLoader.getParent());&lt;span class=&#34;hljs-comment&#34;&gt;//sun.misc.Launcher$ExtClassLoader@2ff4acd0，是扩展类加载器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用扩展类加载器的getParent()，无法获取引导类加载器&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//引导类加载器无法直接获取，无法加载自定义类&lt;/span&gt;&lt;br&gt;        System.out.println(classLoader.getParent().getParent());&lt;span class=&#34;hljs-comment&#34;&gt;//null，因为引导类加载器无法加载&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//String是核心类，由引导类加载器加载，所以无法获取&lt;/span&gt;&lt;br&gt;        ClassLoader classLoader1 = String.class.getClassLoader();&lt;br&gt;        System.out.println(classLoader1);&lt;span class=&#34;hljs-comment&#34;&gt;//null&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 使用ClassLoader加载配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 注意方式一和方式二的文件默认位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;br&gt;        Properties properties = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Properties();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时的文件默认在当前的module下&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//读取配置文件的方向一：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        FileInputStream fis = new FileInputStream(&amp;quot;jdbc.properties&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        properties.load(fis);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法二：&lt;/span&gt;&lt;br&gt;        ClassLoader classLoader = ClassLoaderTest.class.getClassLoader();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时的文件默认在当前module的src下&lt;/span&gt;&lt;br&gt;        InputStream is = classLoader.getResourceAsStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;jdbc1.properties&amp;quot;&lt;/span&gt;);&lt;br&gt;        properties.load(is);&lt;br&gt;        String user = properties.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;);&lt;br&gt;        String password = properties.getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(user);&lt;br&gt;        System.out.println(password);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;创建运行时类的对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建运行时类的对象&#34;&gt;#&lt;/a&gt; 创建运行时类的对象&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Random;&lt;span class=&#34;hljs-comment&#34;&gt;/** * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/16 - 18:51 */&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/** 通过反射创建运行时类的对象* */&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;NewInstanceTest&lt;/span&gt; &lt;/span&gt;&amp;#123;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//记得用try-catch-finally        Class&amp;lt;Person&amp;gt; personClass = Person.class;        /*        * newInstance()：调用此方法，创建运行时类的对象。不鼓励使用。内部调用了Person的空参构造器        * 要想此方法正常地创建运行时类的对象，要求：        * 1、运行时类必须提供空参的构造器        * 2、空参的构造器的访问权限得够，通常设置为public        * 在JavaBean中，要求提供一个public的空参构造器。原因“        * 1、便于通过反射创建运行时类的对象        * 2、便于子类继承此运行时类时，默认调用super()空时，保证父类有此构造器        * */        Person person = personClass.newInstance();        System.out.println(person);    &amp;#125;    //体会反射的动态性    @Test    public void test2() throws Exception&amp;#123;        for (int i=0;i &amp;lt; 100; i++) &amp;#123;            int j = new Random().nextInt(3);//0,1,2            String classPath = &amp;quot;&amp;quot;;            switch (j)&amp;#123;                case 0:                    classPath = &amp;quot;java.util.Date&amp;quot;;                    break;                case 1:                    classPath = &amp;quot;java.lang.Object&amp;quot;;                    break;                case 2:                    classPath = &amp;quot;Person&amp;quot;;                    break;            &amp;#125;            System.out.println(getInstance(classPath));        &amp;#125;    &amp;#125;    /*    * 创建一个指定类的对象    * classPath：指定类的全类名    * */    public Object getInstance(String classPath) throws Exception&amp;#123;        Class&amp;lt;?&amp;gt; aClass = Class.forName(classPath);        return aClass.newInstance();    &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取运行时类的完整结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取运行时类的完整结构&#34;&gt;#&lt;/a&gt; 获取运行时类的完整结构&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; src1.Person;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.annotation.Annotation;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/16 - 19:43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 获取运行时类的所有结构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;GetAllElementsTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//获取属性&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取属性结构&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getFields()：获取当前运行时类及其所有父类中声明为public的属性&lt;/span&gt;&lt;br&gt;        Field[] fields = personClass.getFields();&lt;span class=&#34;hljs-comment&#34;&gt;//只能获取权限为public的属性&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Field field : fields) &amp;#123;&lt;br&gt;            System.out.println(field);&lt;br&gt;        &amp;#125;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/////////////////////////////////////&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getDeclaredFields()：获取当前运行时类中声明的所有属性（不包含父类）&lt;/span&gt;&lt;br&gt;        Field[] declaredFields = personClass.getDeclaredFields();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Field declaredField : declaredFields) &amp;#123;&lt;br&gt;            System.out.println(declaredField);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//权限修饰符，数据类型，变量名&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getDeclaredFields()：获取当前运行时类中声明的所有属性（不包含父类）&lt;/span&gt;&lt;br&gt;        Field[] declaredFields = personClass.getDeclaredFields();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Field declaredField : declaredFields) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//1、权限修饰符，public对应1，private是2,protected是4，default是0&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; modifiers = declaredField.getModifiers();&lt;br&gt;            System.out.print(Modifier.toString(modifiers) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//可以转换为字符串&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//2、数据类型&lt;/span&gt;&lt;br&gt;            Class&amp;lt;?&amp;gt; type = declaredField.getType();&lt;br&gt;            System.out.print(type.getName() + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//3、变量名&lt;/span&gt;&lt;br&gt;            String name = declaredField.getName();&lt;br&gt;            System.out.println(name);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//获取方法&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getMethods()：获取该运行类及其父类所有声明为public的方法&lt;/span&gt;&lt;br&gt;        Method[] methods = personClass.getMethods();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Method method : methods) &amp;#123;&lt;br&gt;            System.out.println(method);&lt;br&gt;        &amp;#125;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;////////////////////////////////&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getDeclaredMethods()：获取当前类声明的所有方法（不包括父类）&lt;/span&gt;&lt;br&gt;        Method[] declaredMethods = personClass.getDeclaredMethods();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Method declaredMethod : declaredMethods) &amp;#123;&lt;br&gt;            System.out.println(declaredMethod);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    @Xxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    权限修饰符 返回值类型 方法名(参数类型1 形参名1, ...) throws XxxException&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Method[] declaredMethods = personClass.getDeclaredMethods();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Method declaredMethod : declaredMethods) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//1、获取注解（只能获取Retention.RUNTIME的注解）&lt;/span&gt;&lt;br&gt;            Annotation[] annotations = declaredMethod.getAnnotations();&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Annotation annotation : annotations) &amp;#123;&lt;br&gt;                System.out.println(annotation);&lt;br&gt;            &amp;#125;&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//2、权限修饰符&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; modifiers = declaredMethod.getModifiers();&lt;br&gt;            System.out.print(Modifier.toString(modifiers) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//3、返回值&lt;/span&gt;&lt;br&gt;            System.out.print(declaredMethod.getReturnType().getName() + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//4、方法名&lt;/span&gt;&lt;br&gt;            System.out.print(declaredMethod.getName());&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//5、形参列表&lt;/span&gt;&lt;br&gt;            System.out.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;( &amp;quot;&lt;/span&gt;);&lt;br&gt;            Class&amp;lt;?&amp;gt;[] parameterTypes = declaredMethod.getParameterTypes();&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(!(parameterTypes == &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt; || parameterTypes.length == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;))&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-comment&#34;&gt;//表示有参数&lt;/span&gt;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; parameterTypes.length; i++)&amp;#123;&lt;br&gt;                    System.out.print(parameterTypes[i].getName() + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; args_&amp;quot;&lt;/span&gt; + i);&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(i &amp;lt; parameterTypes.length -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) System.out.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;);&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;            System.out.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; )&amp;quot;&lt;/span&gt;);&lt;br&gt;            &lt;span class=&#34;hljs-comment&#34;&gt;//6、抛出的异常&lt;/span&gt;&lt;br&gt;            Class&amp;lt;?&amp;gt;[] exceptionTypes = declaredMethod.getExceptionTypes();&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(!(exceptionTypes == &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt; || exceptionTypes.length == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;))&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-comment&#34;&gt;//有抛出异常&lt;/span&gt;&lt;br&gt;                System.out.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;throws &amp;quot;&lt;/span&gt;);&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; exceptionTypes.length; i++) &amp;#123;&lt;br&gt;                    System.out.print(exceptionTypes[i].getName());&lt;br&gt;                    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(i != exceptionTypes.length -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                        System.out.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;);&lt;br&gt;                    &amp;#125;&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    获取构造器结构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test5&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getConstructors()：获取当前运行时类中声明为public的构造器（不包含父类）&lt;/span&gt;&lt;br&gt;        Constructor&amp;lt;?&amp;gt;[] constructors = personClass.getConstructors();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Constructor&amp;lt;?&amp;gt; constructor : constructors) &amp;#123;&lt;br&gt;            System.out.println(constructor);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//getDeclaredConstructors()：获取当前运行时类中声明的所有构造器（不包含父类）&lt;/span&gt;&lt;br&gt;        Constructor&amp;lt;?&amp;gt;[] declaredConstructors = personClass.getDeclaredConstructors();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Constructor&amp;lt;?&amp;gt; declaredConstructor : declaredConstructors) &amp;#123;&lt;br&gt;            System.out.println(declaredConstructor);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 获取运行时类的父类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test6&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Class&amp;lt;? &lt;span class=&#34;hljs-keyword&#34;&gt;super&lt;/span&gt; Person&amp;gt; superclass = personClass.getSuperclass();&lt;br&gt;        System.out.println(superclass);&lt;span class=&#34;hljs-comment&#34;&gt;//class src1.Creature&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 获取运行时类的带泛型的父类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test7&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Type genericSuperclass = personClass.getGenericSuperclass();&lt;br&gt;        System.out.println(genericSuperclass);&lt;span class=&#34;hljs-comment&#34;&gt;//src1.Creature&amp;lt;java.lang.String&amp;gt;&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 获取运行时类的带泛型的父类的泛型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test8&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Type genericSuperclass = personClass.getGenericSuperclass();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//强转&lt;/span&gt;&lt;br&gt;        ParameterizedType parameterizedType = (ParameterizedType)genericSuperclass;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取泛型类型&lt;/span&gt;&lt;br&gt;        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();&lt;br&gt;        System.out.println(actualTypeArguments[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;]);&lt;span class=&#34;hljs-comment&#34;&gt;//class java.lang.String&lt;/span&gt;&lt;br&gt;        System.out.println(actualTypeArguments[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;].getTypeName());&lt;span class=&#34;hljs-comment&#34;&gt;//java.lang.String&lt;/span&gt;&lt;br&gt;        System.out.println(((Class)(actualTypeArguments[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;])).getName());&lt;span class=&#34;hljs-comment&#34;&gt;//java.lang.String&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 获取运行时类的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test9&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//返回当前运行时类的接口（不包括父类）&lt;/span&gt;&lt;br&gt;        Class&amp;lt;?&amp;gt;[] interfaces = personClass.getInterfaces();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Class&amp;lt;?&amp;gt; anInterface : interfaces) &amp;#123;&lt;br&gt;            System.out.println(anInterface);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取运行时类父类的接口&lt;/span&gt;&lt;br&gt;        Class&amp;lt;?&amp;gt;[] interfaces1 = personClass.getSuperclass().getInterfaces();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Class&amp;lt;?&amp;gt; aClass : interfaces1) &amp;#123;&lt;br&gt;            System.out.println(aClass);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 获取运行时类所在的包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test10&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Package aPackage = personClass.getPackage();&lt;br&gt;        System.out.println(aPackage);&lt;span class=&#34;hljs-comment&#34;&gt;//package src1&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 获取运行时类声明的注解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test11&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Annotation[] annotations = personClass.getAnnotations();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Annotation annotation : annotations) &amp;#123;&lt;br&gt;            System.out.print(annotation + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//@src1.MyAnnotation(value=[hi])&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;调用运行时类的指定结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调用运行时类的指定结构&#34;&gt;#&lt;/a&gt; 调用运行时类的指定结构&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs JAVA&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; src1.Person;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Constructor;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Field;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Method;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/18 - 8:39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 调用运行时类中指定的结构：属性、方法、构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ReflectionTest1&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//属性&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//不理想，只能获取public&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;testField&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建运行时类的对象&lt;/span&gt;&lt;br&gt;        Person person = personClass.newInstance();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取指定的属性：要求获取的属性声明为public&lt;/span&gt;&lt;br&gt;        Field id = personClass.getField(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//设置当前属性的值&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//set()：参数1：指明设置哪个对象的属性，参数2：将此属性值设置为多少&lt;/span&gt;&lt;br&gt;        id.set(person, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 获取当前对象属性值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * get()：参数1：获取哪个对象的当前属性值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; i = (&lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;)id.get(person);&lt;br&gt;        System.out.println(i);&lt;span class=&#34;hljs-comment&#34;&gt;//10&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 获取属性的方法2，可以获取所有权限的属性。 开发中使用这种&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;testField1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Person person = personClass.newInstance();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取属性&lt;/span&gt;&lt;br&gt;        Field name = personClass.getDeclaredField(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//将accessible权限设置为true,保证当前属性是可访问的&lt;/span&gt;&lt;br&gt;        name.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//对于private属性，默认是false，不可访问&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//设置属性&lt;/span&gt;&lt;br&gt;        name.set(person, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//获取属性&lt;/span&gt;&lt;br&gt;        System.out.println(name.get(person));&lt;span class=&#34;hljs-comment&#34;&gt;//Tom&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;testMethod&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        Person person = personClass.newInstance();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 1、获取指定的某个方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   &amp;gt; 参数1：方法名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        *   &amp;gt; 参数2：要获取的方法的形参列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        Method showInterest = personClass.getDeclaredMethod(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;showInterest&amp;quot;&lt;/span&gt;, String.class, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;.class);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//保证当前方法是可访问的&lt;/span&gt;&lt;br&gt;        showInterest.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法调用，invoke()：参数1：调用者。 参数2：实参列表&lt;/span&gt;&lt;br&gt;        String nation = (String)showInterest.invoke(person, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;China&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;// String showInterest()&lt;/span&gt;&lt;br&gt;        System.out.println(nation);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//////////////////////调用静态方法///////////////////////////////&lt;/span&gt;&lt;br&gt;        Method showDesc = personClass.getDeclaredMethod(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;showDesc&amp;quot;&lt;/span&gt;);&lt;br&gt;        showDesc.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        Object returnVal = showDesc.invoke(Person.class);&lt;span class=&#34;hljs-comment&#34;&gt;//静态方法，调用者是当前类&lt;/span&gt;&lt;br&gt;        showDesc.invoke(&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;);&lt;span class=&#34;hljs-comment&#34;&gt;//静态方法，调用者写成null也可以&lt;/span&gt;&lt;br&gt;        System.out.println(returnVal);&lt;span class=&#34;hljs-comment&#34;&gt;//因为返回值是void，所以returnVal是null&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * 调用运行时类中指定的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;    * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;testConstructor&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&amp;#123;&lt;br&gt;        Class&amp;lt;Person&amp;gt; personClass = Person.class;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * getDeclaredConstructor()参数1：构造器的形参列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        Constructor&amp;lt;Person&amp;gt; constructor = personClass.getDeclaredConstructor(String.class, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;.class);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//保证构造器是可访问的&lt;/span&gt;&lt;br&gt;        constructor.setAccessible(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建运行时类的对象&lt;/span&gt;&lt;br&gt;        Person tom = constructor.newInstance(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;关于class的理解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于class的理解&#34;&gt;#&lt;/a&gt; 关于 Class 的理解&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;程序经过 javac.exe 命令后，会生成一个或多个字节码文件 (.class 结尾)。接着我们使用 java.exe 命令对某个字节码文件进行解释运行，相当于将某个字节码文件加载到内存中。此过程就成为类的加载。加载到内存中的类，我们就成为内存中的类，此运行时类，就作为 Class 类的一个实例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;新建运行时类的对象时，Object obj = clazz.newInstance () 有如下要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须有空参的构造器&lt;/li&gt;
&lt;li&gt;权限修饰符的权限要够，通常设置成 public&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;反射的应用动态代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射的应用动态代理&#34;&gt;#&lt;/a&gt; 反射的应用：动态代理&lt;/h3&gt;
&lt;h4 id=&#34;静态代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#静态代理&#34;&gt;#&lt;/a&gt; 静态代理&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/18 - 19:19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 静态代理示例：被代理类和代理类在编译期就已经确定下来了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StaticProxyTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建被代理类的对象&lt;/span&gt;&lt;br&gt;        NikeClothFactory nike = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; NikeClothFactory();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建代理类的对象&lt;/span&gt;&lt;br&gt;        ProxyClothFactory proxy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ProxyClothFactory(nike);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用代理类的方法&lt;/span&gt;&lt;br&gt;        proxy.produceCloth();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ClothFactory&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;produceCloth&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//代理类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ProxyClothFactory&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ClothFactory&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; ClothFactory factory;&lt;span class=&#34;hljs-comment&#34;&gt;//用被代理类的对象进行实例化&lt;/span&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ProxyClothFactory&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(ClothFactory factory)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.factory = factory;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;produceCloth&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;代理工厂准备一些工作&amp;quot;&lt;/span&gt;);&lt;br&gt;        factory.produceCloth();&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;代理工厂做后续工作&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;NikeClothFactory&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ClothFactory&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;produceCloth&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Nike工厂生产一批运动服&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;动态代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动态代理&#34;&gt;#&lt;/a&gt; 动态代理&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.InvocationHandler;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Method;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.lang.reflect.Proxy;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/18 - 19:26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 动态代理的示例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ProxyTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        SuperMan superMan = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; SuperMan();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//proxyInstance：代理类的对象&lt;/span&gt;&lt;br&gt;        Human proxyInstance = (Human)ProxyFactory.getProxyInstance(superMan);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//通过代理类对象调用方法时，会自动调用被代理类中同名的方法&lt;/span&gt;&lt;br&gt;        System.out.println(proxyInstance.getBelief());&lt;br&gt;        proxyInstance.eat(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;麻辣烫&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Human&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;String &lt;span class=&#34;hljs-title&#34;&gt;getBelief&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;eat&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String food)&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//被代理类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;SuperMan&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Human&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getBelief&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;I believe I can fly&amp;quot;&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;eat&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String food)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我喜欢吃&amp;quot;&lt;/span&gt; + food);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 要想实现动态代理，需要解决的问题？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 1、如何根据加载到内存中的被代理类，动态地创建一个代理类及其对象？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* 2、当通过代理类的对象调用方法时，如何动态地调用被代理类中的同名方法？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;* */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ProxyFactory&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//调用此方法，返回一个代理类的对象&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; Object &lt;span class=&#34;hljs-title&#34;&gt;getProxyInstance&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object obj)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;hljs-comment&#34;&gt;//obj：被代理类的对象&lt;/span&gt;&lt;br&gt;        MyInvocationHandler handler = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; MyInvocationHandler();&lt;br&gt;        handler.bind(obj);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), handler);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MyInvocationHandler&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InvocationHandler&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; Object obj;&lt;span class=&#34;hljs-comment&#34;&gt;//赋值时，需要使用被代理类对象进行赋值&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object obj)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.obj = obj;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//当我们通过代理类的对象调用方法a时，就会自动调用如下的方法invoke()&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//将被代理类要执行的方法a的功能就声明在invoke()方法中&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; Object &lt;span class=&#34;hljs-title&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object proxy, Method method, Object[] args)&lt;/span&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; Throwable&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//method:即为代理类对象调用的方法，此方法也就作为了被代理类要调用的方法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//obj:被代理类的对象&lt;/span&gt;&lt;br&gt;        Object returnVal = method.invoke(obj, args);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//上述方法的返回值就作为当前类中invoke()方法的返回值&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; returnVal;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;jdk8新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk8新特性&#34;&gt;#&lt;/a&gt; JDK8 新特性&lt;/h2&gt;
&lt;h3 id=&#34;lambda表达式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lambda表达式&#34;&gt;#&lt;/a&gt; lambda 表达式&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Comparator;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Consumer;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/19 - 16:36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * lambda表达式的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 1、举例：(o1, o2) -&amp;gt; Integer.compare(o1,o2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 2、格式：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      (形参列表) -&amp;gt; lambda体(其实就是方法体)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 3、使用：分六种情况介绍&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 4、lambda表达式本质：作为接口的具体实现类的对象。简化了接口的实现过程。如Comparator实现类子类的创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 5、要求实现的接口是函数式接口：只有一个方法的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;LambdaTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 语法格式一：无参，无返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Runnable r1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Runnable()&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;                System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;I Love You&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;        r1.run();&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;..........................&amp;quot;&lt;/span&gt;);&lt;br&gt;        Runnable r2 = () -&amp;gt; &amp;#123;System.out.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;I Love You Too, &amp;quot;&lt;/span&gt;);&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;骗你的&amp;quot;&lt;/span&gt;);&amp;#125;;&lt;br&gt;        r2.run();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * lambda需要一个参数，但没有返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//原型&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Consumer&amp;lt;String&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;爱你哦&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;        con.accept(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式形式&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con1 = (String s) -&amp;gt; &amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我不爱&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 情况三：参数类型可省略，由编译器自动推断&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//原型&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;Integer&amp;gt; con = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Consumer&amp;lt;Integer&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Integer s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;爱你哦&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;        con.accept(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式形式&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con1 = s -&amp;gt; &amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我不爱&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 情况四：只有一个参数时，括号可以省略&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//原型&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;Integer&amp;gt; con = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Consumer&amp;lt;Integer&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Integer s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;爱你哦&amp;quot;&lt;/span&gt;);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;        con.accept(&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式形式&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con1 = (s) -&amp;gt; &amp;#123;&lt;br&gt;            System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我不爱&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 情况五：需要两个以上参数，有多条语句，有返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test5&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Comparator&amp;lt;Integer&amp;gt; com1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator&amp;lt;Integer&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Integer o1, Integer o2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Integer.compare(o1, o2);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; compare1 = com1.compare(&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;21&lt;/span&gt;);&lt;br&gt;        System.out.println(compare1);&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;////////////////////////////&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式&lt;/span&gt;&lt;br&gt;        Comparator&amp;lt;Integer&amp;gt; com2 = (o1, o2) -&amp;gt; &amp;#123;&lt;br&gt;            System.out.println(o1);&lt;br&gt;            System.out.println(o2);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Integer.compare(o1, o2);&lt;br&gt;        &amp;#125;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 情况六：lambda体只有一条语句时，若有Return和大括号，则都可以省略&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test6&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Comparator&amp;lt;Integer&amp;gt; com1 = (o1, o2) -&amp;gt; o1.compareTo(o2);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;函数式接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数式接口&#34;&gt;#&lt;/a&gt; 函数式接口&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 自定义函数式接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 说明：lambda表达式是对象，而不是函数，它们必须依附于一类特别的对象类型--函数式接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/19 - 19:09&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@FunctionalInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MyInterface&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 函数式接口的示例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;method1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Consumer;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Predicate;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * Java内置的4大核心函数式接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 消费型接口 Consumer&amp;lt;T&amp;gt; void accept(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 供给型接口 Supplier&amp;lt;T&amp;gt; T get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 函数型接口 Function&amp;lt;T, R&amp;gt;  R apply(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 断定型接口 Predicate&amp;lt;T&amp;gt; boolean test(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/19 - 19:22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;FunctionalInterfaceTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 测试函数式接口Consumer，所有类似于void accept(T t)的函数都可以用lambda表达式代替&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//使用lambda表达式创建函数式接口Consumer&amp;lt;Double&amp;gt;的实例&lt;/span&gt;&lt;br&gt;        happyTime(&lt;span class=&#34;hljs-number&#34;&gt;500&lt;/span&gt;, (o) -&amp;gt; System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;消费&amp;quot;&lt;/span&gt; + o + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;元&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;happyTime&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;double&lt;/span&gt; money, Consumer&amp;lt;Double&amp;gt; con)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        con.accept(money);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 测试predicate&amp;lt;T&amp;gt;接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        List&amp;lt;String&amp;gt; aList = Arrays.asList(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;why&amp;quot;&lt;/span&gt;&amp;#125;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//表示如果字符串是&amp;quot;hello&amp;quot;，就会被过滤&lt;/span&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; list = filterString(aList, s -&amp;gt; !s.equals(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//输出结果为[hi, why]&lt;/span&gt;&lt;br&gt;        System.out.println(list);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 根据给定的规则，过滤list中符合条件的字符串，此规则由Predicate的方法决定&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&#34;hljs-title&#34;&gt;filterString&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(List&amp;lt;String&amp;gt; list, Predicate&amp;lt;String&amp;gt; pre)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        ArrayList&amp;lt;String&amp;gt; filterList = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (String s : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(pre.test(s))&amp;#123;&lt;br&gt;                filterList.add(s);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; filterList;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;方法引用与构造器引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法引用与构造器引用&#34;&gt;#&lt;/a&gt; 方法引用与构造器引用&lt;/h3&gt;
&lt;h4 id=&#34;方法引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法引用&#34;&gt;#&lt;/a&gt; 方法引用&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Comparator;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.BiPredicate;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Consumer;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Function;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Supplier;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 方法引用的使用：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 1、使用的情景：当要传递给lambda体的操作已经有实现的方法了，可以使用方法引用。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 2、方法引用，本质上就是lambda表达式，而lambda表达式作为函数式接口的实例，所以方法引用也是函数式接口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 3、使用格式： 类（或对象）:: 方法名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      &amp;gt; 类 :: 非静态方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      &amp;gt; 类(对象) :: 静态方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *      &amp;gt; 类 :: 非静态方法  ******&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 4、什么时候使用方法引用？要求？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 要求接口中的抽象方法的形参列表和返回值类型与方法引用的方法的形参列表和返回值类型一致（针对情况一和二）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/19 - 19:56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MethodRefTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 情况一：对象::实例方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Consumer中的void accept(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * PrintStream中的void println(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con1 = str -&amp;gt; System.out.println(str);&lt;br&gt;        con1.accept(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;................&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这两个lambda表达式效果一致&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con2 = System.out::println;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Supplier的 T get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Employee中的String getName()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式形式&lt;/span&gt;&lt;br&gt;        Employee emp = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Employee(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;        Supplier&amp;lt;String&amp;gt; s =  () -&amp;gt; emp.getName();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法引用形式&lt;/span&gt;&lt;br&gt;        Supplier&amp;lt;Integer&amp;gt; s1 = emp::getAge;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 类名 :: 静态方法名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式的写法&lt;/span&gt;&lt;br&gt;        Comparator&amp;lt;Integer&amp;gt; con = (t1, t2) -&amp;gt; Integer.compare(t1, t2);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法引用的写法&lt;/span&gt;&lt;br&gt;        Comparator&amp;lt;Double&amp;gt; con1 = Double::compare;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Function中的 R apply(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Math中的Long round(Double d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式写法&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Double, Long&amp;gt; func = (d) -&amp;gt; Math.round(d);&lt;br&gt;        func.apply(&lt;span class=&#34;hljs-number&#34;&gt;12.3&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法引用写法&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Double, Long&amp;gt; func1 = Math::round;&lt;br&gt;        func1.apply(&lt;span class=&#34;hljs-number&#34;&gt;12.6&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 情况三： 类名 :: 实例方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Comparator中的int compare(T t1, T t2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * String中的boolean t1.equals(t2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test5&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式写法&lt;/span&gt;&lt;br&gt;        Comparator&amp;lt;String&amp;gt; con1 = (s1, s2) -&amp;gt; s1.compareTo(s2);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法引用写法&lt;/span&gt;&lt;br&gt;        Comparator&amp;lt;String&amp;gt; con2 = String::compareTo;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;////////////////////////////////////////////&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * BiPredicate中的 boolean test(T t1, T t2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * String中的 boolean t1.equals(t2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式写法&lt;/span&gt;&lt;br&gt;        BiPredicate&amp;lt;String, String&amp;gt; bp = (t1, t2) -&amp;gt; t1.equals(t2);&lt;br&gt;        System.out.println(bp.test(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法引用写法&lt;/span&gt;&lt;br&gt;        BiPredicate&amp;lt;String, String&amp;gt; bp2 = String::equals;&lt;br&gt;        System.out.println(bp2.test(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Employee中的String getName()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Function中的 R apply(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test6&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式写法&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Employee, String&amp;gt; func = (e) -&amp;gt; e.getName();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法引用写法&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Employee, String&amp;gt; func1 = Employee::getName;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;构造器引用和数组引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构造器引用和数组引用&#34;&gt;#&lt;/a&gt; 构造器引用和数组引用&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.BiFunction;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Function;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Supplier;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 一、构造器引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  和方法引用类似，函数式接口的抽象方法的形参列表和构造器的形参列表一致，抽象方法的返回值就是构造器的返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 二、数组引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  把数组看成一个类，那么数组引用就是构造器引用了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/20 - 1:12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ConstructorRef&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 构造器引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Supplier中的 T get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式&lt;/span&gt;&lt;br&gt;        Supplier&amp;lt;Employee&amp;gt; supplier = () -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Employee();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器引用&lt;/span&gt;&lt;br&gt;        Supplier&amp;lt;Employee&amp;gt; supplier1 = Employee::&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Function中的T apply(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Integer, Employee&amp;gt; fun1 = (age) -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Employee(age);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器引用&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Integer, Employee&amp;gt; fun2 = Employee::&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * BiFunction的 R apply(T t, U u)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式&lt;/span&gt;&lt;br&gt;        BiFunction&amp;lt;String, Integer, Employee&amp;gt; func = (str, age) -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Employee(str, age);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器引用&lt;/span&gt;&lt;br&gt;        BiFunction&amp;lt;String, Integer, Employee&amp;gt; func1 = Employee::&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 数组引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Integer, String[]&amp;gt; func = (length) -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String[length];&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//数组引用&lt;/span&gt;&lt;br&gt;        Function&amp;lt;Integer, String[]&amp;gt; func1 = String[]::&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;string-api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string-api&#34;&gt;#&lt;/a&gt; String API&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Optional;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.stream.Collectors;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.stream.IntStream;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.stream.Stream;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * Stream API的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 1、Stream关注的是数据的运算，与CPU打交道&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *    集合讲的是数据的存储，与内存打交道&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 2、Stream不会自己存储数据，不会改变源对象，相反，他们会返回一个持有结果的新Stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 3、Stream是延迟执行的，这意味着他们会等到需要结果的时候才执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 4、操作步骤&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 创建Stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 一系列的中间操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; 终止操作（一旦执行终止操作，就会开始执行中间操作并产生结果），之后，就不能再被使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/20 - 20:45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 创建Stream实例的方法一：通过集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        List&amp;lt;String&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;why&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// default Stream&amp;lt;E&amp;gt; stream()：返回一个顺序流&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;String&amp;gt; stream = list.stream();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// default Stream&amp;lt;E&amp;gt; parallelStream()：返回一个并行流&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;String&amp;gt; stringStream = list.parallelStream();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 创建Stream实例的方法二：通过数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//调用static &amp;lt;T&amp;gt;  Stream&amp;lt;T&amp;gt; Arrays.stream(T[] array)：返回一个流&lt;/span&gt;&lt;br&gt;        IntStream stream = Arrays.stream(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[]&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;54&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;232&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;&amp;#125;);&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 创建Stream实例的方法三：通过Stream.of()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        Stream&amp;lt;Integer&amp;gt; integerStream = Stream.of(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 创建Stream实例的方法四：通过Stream.iterate() 和 Stream.generate()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test4&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//迭代&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//public static &amp;lt;T&amp;gt; Stream&amp;lt;T&amp;gt; iterate(final T seed, final UnaryOperator&amp;lt;T&amp;gt; f)&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//遍历前10个偶数&lt;/span&gt;&lt;br&gt;        Stream.iterate(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, t -&amp;gt; t + &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;).limit(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//生成&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//public static &amp;lt;T&amp;gt; Stream&amp;lt;T&amp;gt; generate(Supplier&amp;lt;T&amp;gt; s)&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//产生十个随机数&lt;/span&gt;&lt;br&gt;        Stream.generate(Math::random).limit(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//接下来介绍中间操作&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * Stream中间操作一：筛选与切片&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test5&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * filter(Predicate p)：接受lambda，从流中删除一些元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;why&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;but&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;        Stream&amp;lt;String&amp;gt; stream = list.stream();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//实例：删除流中字符串hi&lt;/span&gt;&lt;br&gt;        stream.filter(e -&amp;gt; !e.equals(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;)).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * limit(n) 截断流，使元素不超过给定数量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//因为stream已经执行终止操作，所以得重新造一个&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//筛选出前三条数据&lt;/span&gt;&lt;br&gt;        list.stream().limit(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * skip(n) 跳过前n个元素，若元素个数不足n，则返回空流&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        list.stream().skip(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * distinct() 筛选，通过流所生成的元素的hashCode()和equals()去除重复元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        list.stream().distinct().forEach(System.out::println);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 中间操作之映射&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test6&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//map(Function f)：按照f将元素转换成其他形式&lt;/span&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aa&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;bb&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;cc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//转换成大写&lt;/span&gt;&lt;br&gt;        list.stream().map(String::toUpperCase).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//flatMap(Function f)接受一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流合成一个流&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * map和flatMap的区别：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * map相当于List.add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * flatMap相当于List.addAll&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 中间操作之排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test7&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//sorted() 自然排序&lt;/span&gt;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;43&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;46&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;);&lt;br&gt;        list.stream().sorted().forEach(System.out::println);&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.......................&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//sorted(Comparator com)：定制排序&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这里实现从大到小排序&lt;/span&gt;&lt;br&gt;        list.stream().sorted((n1, n2) -&amp;gt; -Integer.compare(n1, n2)).forEach(System.out::println);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 终止操作：匹配与查找&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test8&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean allMatch(Predicate p) 检查是否匹配所有元素&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// 判断是否所有元素的长度都大于3&lt;/span&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;avf&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;dfgr&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;);&lt;br&gt;        Stream&amp;lt;String&amp;gt; stream = list.stream();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;boolean&lt;/span&gt; b = stream.allMatch(s -&amp;gt; s.length() &amp;gt; &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(b);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean anyMatch(Predicate p) 检查是否有元素匹配该规则&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        list.stream().anyMatch(s -&amp;gt; s.length() &amp;gt; &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//boolean noneMatch(Predicate p) 如果没有任何元素符合，就返回true&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        list.stream().noneMatch(s -&amp;gt; s.length() &amp;gt; &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional&amp;lt;T&amp;gt; findFirst() 返回第一个元素&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;String&amp;gt; first = list.stream().findFirst();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional&amp;lt;T&amp;gt; findAny() 返回任意元素，&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;String&amp;gt; any = list.stream().findAny();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//long count()返回流中元素总数&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;long&lt;/span&gt; count = list.stream().count();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional&amp;lt;T&amp;gt; max(Comparator c) 返回最大值&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional&amp;lt;T&amp;gt; min(Comparator c) 返回最小值&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//forEach(Consumer c) 内部迭代&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 终止操作之归约&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test9&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//reduce(T identity BinaryOperator) 将流中元素反复结合起来，得到一个值并返回&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//identity是初始值&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//计算1-10的自然数之和&lt;/span&gt;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;        list.stream().reduce(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, Integer::sum);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//reduce(BinaryOperator)，返回Optional&amp;lt;T&amp;gt;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//计算list中所有元素之和&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;Integer&amp;gt; reduce = list.stream().reduce(Integer::sum);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//也可以这样写&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;Integer&amp;gt; reduce1 = list.stream().reduce((n1, n2) -&amp;gt; n1 + n2);&lt;br&gt;        System.out.println(reduce1.toString());&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 终止操作之收集&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test10&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//collect(Collector c) ：c决定了如何对流执行收集的操作（如收集到List，Set，Map）&lt;/span&gt;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//找到大于5的数字并返回一个List&lt;/span&gt;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list1 = list.stream().filter(e -&amp;gt; e &amp;gt; &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;).collect(Collectors.toList());&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (Integer integer : list1) &amp;#123;&lt;br&gt;            System.out.print(integer + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;optional类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#optional类&#34;&gt;#&lt;/a&gt; Optional 类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Optional;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * Optional类的使用：为了避免程序中空指针异常而创建的类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 1、常用方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; ofNullable(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; T orElse(T t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; T get() 如果Optional内部value不为空，返回该值，否则，抛异常&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; T getOrElse(Supplier&amp;lt;? super T&amp;gt; consumer) 如果有值，就返回值，没有就返回Supplier接口提供的返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  &amp;gt; boolean isPresent() 判断是否包含对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/21 - 1:19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;OptionalTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional.of(T t) 要求t必须不为null&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;Employee&amp;gt; employee = Optional.of(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Employee());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional.empty() 创建一个空的Optional实例&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;Object&amp;gt; empty = Optional.empty();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//Optional.ofNullable(T t) 允许t为空&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;Object&amp;gt; o = Optional.ofNullable(&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;);&lt;br&gt;        Employee e = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这里会报空指针&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        getEmployeeName(e);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这里调用使用了Optional的getName()，虽然e是空，但是避免了空指针&lt;/span&gt;&lt;br&gt;        System.out.println(OptionalTest.getName(e));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 假设我想获取Employee的姓名，如果不适用Optional，传入null的时候就会空指针异常&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getEmployeeName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Employee e)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; e.getName();&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 假设我想获取Employee的姓名，如果不适用Optional，传入null的时候就会空指针异常&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 按照以往逻辑，可以这样优化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getEmployeeName1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Employee e)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(e == &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; RuntimeException();&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; e.getName();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 使用Optional后&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; String &lt;span class=&#34;hljs-title&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Employee e)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这里的e有可能是null，有可能不是&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;Employee&amp;gt; e1 = Optional.ofNullable(e);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// T orElse(T other) 如果Optional内部的value有值就返回value，没有就返回other&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//如果e1内部的T是空，就会返回新创建的employee，如果e1不为空，就会返回e1&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//这样，获取的Employee对象就一定不是null，可以避免空指针&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; e1.orElse(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Employee(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我是空值&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;)).getName();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;jdk9-11新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk9-11新特性&#34;&gt;#&lt;/a&gt; JDK9-11 新特性&lt;/h2&gt;
&lt;h3 id=&#34;jdk9新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk9新特性&#34;&gt;#&lt;/a&gt; JDK9 新特性&lt;/h3&gt;
&lt;h4 id=&#34;模块化系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模块化系统&#34;&gt;#&lt;/a&gt; 模块化系统&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; dzc.good.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 如果在一个模块需要用到另外一个模块的类，就需要：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * ①在两个类的src目录下都建立module-info.java文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * ②被引用类module-info.java中，将被使用的类所在的包名exports，格式： exports 包名;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * ③在引用别的模块的类的module-info.java中，格式为：requires 模块名;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * ④最后，在project structures的使用者module下配置依赖dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 16:32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;ModuleTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        Person person = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Person(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//使用者的module-info.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 16:25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;module&lt;/span&gt; day27 &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;requires&lt;/span&gt; day27test; &lt;span class=&#34;hljs-comment&#34;&gt;// 格式： requires 被使用模块名&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//被使用的类声明在模块day27test下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//被使用类的声明(声明在dzc.good包下)：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;package&lt;/span&gt; dzc.good;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 16:40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; String name;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String name, &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.age = age;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//被使用模块的module-info.java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 16:25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;module&lt;/span&gt; day27test &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;exports&lt;/span&gt; dzc.good; &lt;span class=&#34;hljs-comment&#34;&gt;// 格式： exports 被使用类所在的包名&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;java的repl工具jshell命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java的repl工具jshell命令&#34;&gt;#&lt;/a&gt; Java 的 REPL 工具：jShell 命令&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;REPL: 读取、求值、打印、循环&lt;/p&gt;
&lt;p&gt;通俗地讲，jShell 命名使得 java 可以像 python 一样成为脚本语言，在命令行下一行一行地执行&lt;/p&gt;
&lt;p&gt;JShell 环境下，语句末尾的’;&#39; 是可选的，但推荐还是最好加上，提高代码的可读性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/dzcgood/img-bed/raw/master/img/image-20211022165818755.png&#34; alt=&#34;jShell使用举例&#34;&gt;)&lt;/p&gt;
&lt;h4 id=&#34;接口的私有方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#接口的私有方法&#34;&gt;#&lt;/a&gt; 接口的私有方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 17:18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MyInterface&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//如下的三个方法的权限修饰符都是public&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 接口中的普通方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;methodAbstract&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 接口中的静态方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;methodStatic&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我是接口中的静态方法&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 接口中的default方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;methodDefault&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我是接口中的默认方法&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//接口内部可以调用私有接口的方法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.methodPrivate();&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 接口中的私有方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;methodPrivate&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;我是接口中的私有方法&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//下面是接口的实现类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 此类实现接口MyInterface&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 17:22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MyInterfaceImp&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;MyInterface&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;methodAbstract&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;methodDefault&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;实现类重写了接口的缺省方法&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//接口中的静态方法只能由接口自己调用&lt;/span&gt;&lt;br&gt;        MyInterface.methodStatic();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * 实现类不能调用接口的静态方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * MyInterfaceImp.methodStatic();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;&lt;br&gt;        MyInterfaceImp myInterfaceImp = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; MyInterfaceImp();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//接口的私有方法不能在接口外使用&lt;/span&gt;&lt;br&gt;        myInterfaceImp.methodDefault();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;钻石操作符的升级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#钻石操作符的升级&#34;&gt;#&lt;/a&gt; 钻石操作符的升级&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Comparator;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 新特性：在匿名内部类中也可以使用泛型的自动推断&amp;lt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 17:28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;DiamondOperator&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//匿名内部类中也可以使用泛型了的自动推断了&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK8中，是不允许的&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK8中，必须写成Comparator&amp;lt;Object&amp;gt; com = new Comparator&amp;lt;Object&amp;gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;        Comparator&amp;lt;Object&amp;gt; com = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; Comparator&amp;lt;&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o1, Object o2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;try语句优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#try语句优化&#34;&gt;#&lt;/a&gt; try 语句优化&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.InputStreamReader;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * try语句的升级&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 17:37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;TryTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * JDK8之前的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 资源关闭操作在finally中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        InputStreamReader inputStreamReader = &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;            inputStreamReader = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; InputStreamReader(System.in);&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] buf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;((len = inputStreamReader.read(buf)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                String str = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(buf, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(inputStreamReader != &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;br&gt;                    inputStreamReader.close();&lt;br&gt;                &amp;#125; &lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;                    e.printStackTrace();&lt;br&gt;                &amp;#125;&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * jdk8中的资源关闭操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 可以把资源的声明写在try()&amp;#123;&amp;#125;的小括号中，小括号内的资源可以自动关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 要求执行后必须关闭的资源必须在try子句的小括号中声明并实例化，否则编译不通过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt;(InputStreamReader inputStreamReader = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; InputStreamReader(System.in);)&amp;#123;&lt;br&gt;            inputStreamReader = &lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] buf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;((len = inputStreamReader.read(buf)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                String str = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(buf, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * jdk9中的资源关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 可以把资源声明在try外面，然后在try子句中放入资源对象即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 要求：try子句中的对象是默认为final的，如果修改它，就会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        InputStreamReader inputStreamReader = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; InputStreamReader(System.in);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt;(inputStreamReader )&amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//            reader = null; //会报错，reader默认是final的，不能修改&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[] buf = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;char&lt;/span&gt;[&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;];&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; len;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;((len = inputStreamReader.read(buf)) != -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;                String str = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; String(buf, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, len);&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;string存储结构的变更&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string存储结构的变更&#34;&gt;#&lt;/a&gt; String 存储结构的变更&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//底层的存储结构由两字节的char[]改成了一字节的byte[]和编码标记,如果是latin类的字符，则一字节表示一个字符，如果是中文类字符，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//则用两个字节表示一个字符&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;集合工厂方法创建只读集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合工厂方法创建只读集合&#34;&gt;#&lt;/a&gt; 集合工厂方法：创建只读集合&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK9新特性：集合工厂方法：创建只读集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 22:03&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CollectionFactoryTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 在JDK8中创建只读集合的方法，缺点：比较麻烦&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        List&amp;lt;String&amp;gt; nameList = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        nameList.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;);&lt;br&gt;        nameList.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Mike&amp;quot;&lt;/span&gt;);&lt;br&gt;        nameList.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//创建只读集合&lt;/span&gt;&lt;br&gt;        nameList = Collections.unmodifiableList(nameList);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以下语句会报错，因为nameList是只读集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        nameList.add(&amp;quot;Tommy&amp;quot;);&lt;/span&gt;&lt;br&gt;        System.out.println(nameList);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * JDK9中提供的of()方法，可以快速得到只读集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时得到的list是只读的，JDK8可以做到&lt;/span&gt;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时得到的list是只读的，JDK9之后才有&lt;/span&gt;&lt;br&gt;        List&amp;lt;String&amp;gt; nameList = List.of(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Mike&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时得到的set是只读的，JDK9之后才有&lt;/span&gt;&lt;br&gt;        Set&amp;lt;Integer&amp;gt; integers = Set.of(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//此时得到的map是只读的，JDK9之后才有&lt;/span&gt;&lt;br&gt;        Map&amp;lt;String, Integer&amp;gt; myMap = Map.of(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Otis&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以下语句会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        nameList.add(&amp;quot;hello&amp;quot;);&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;inputstream加强&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inputstream加强&#34;&gt;#&lt;/a&gt; InputStream 加强&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.io.*;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK9中InputStream的新方法：transferTo()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 22:20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;InputStreamTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;try&lt;/span&gt;(InputStream is = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;test/hello.txt&amp;quot;&lt;/span&gt;);&lt;br&gt;            OutputStream os = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;test/hello1.txt&amp;quot;&lt;/span&gt;);)&amp;#123;&lt;br&gt;            is.transferTo(os);&lt;span class=&#34;hljs-comment&#34;&gt;//把输入流中的所有数据直接自动地赋值到输出流中&lt;/span&gt;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;catch&lt;/span&gt; (IOException e)&amp;#123;&lt;br&gt;            e.printStackTrace();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;增强的stream-api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增强的stream-api&#34;&gt;#&lt;/a&gt; 增强的 Stream API&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.stream.Stream;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK9新特性：Stream API的加强&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 22:40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StreamAPITest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * takeWhile()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * dropWhile()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;65&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3235&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;63&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;856&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//takeWhile(Predicate p)会返回从开头开始尽可能多的元素，一旦遇到不符合条件的，即使后面有符合条件的，也会被忽略&lt;/span&gt;&lt;br&gt;        list.stream().takeWhile(x -&amp;gt; x &amp;lt; &lt;span class=&#34;hljs-number&#34;&gt;60&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//dropWhile(Predicate p)：将符合条件的丢弃，直到遇见不符合条件的&lt;/span&gt;&lt;br&gt;        list.stream().dropWhile(x -&amp;gt; x &amp;lt; &lt;span class=&#34;hljs-number&#34;&gt;60&lt;/span&gt;).forEach(System.out :: println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * ofNullable()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//实例化方法一&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;Integer&amp;gt; integerStream = Stream.of(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//允许某个值是null&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;Integer&amp;gt; integerStream1 = Stream.of(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;);&lt;br&gt;        System.out.println(integerStream1.count());&lt;span class=&#34;hljs-comment&#34;&gt;//元素个数被认为是4个&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//不允许只有null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        Stream&amp;lt;Integer&amp;gt; integerStream2 = Stream.of(null);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//允许是多个null&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;Integer&amp;gt; integerStream3 = Stream.of(&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;);&lt;br&gt;        System.out.println(integerStream3.count());&lt;span class=&#34;hljs-comment&#34;&gt;//元素个数被认为是3个&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//ofNullable() 允许只有null&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;Integer&amp;gt; integerStream4 = Stream.ofNullable(&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;);&lt;br&gt;        System.out.println(integerStream4.count());&lt;span class=&#34;hljs-comment&#34;&gt;//元素个数被认为是0个&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * iterate()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK8已经有了&lt;/span&gt;&lt;br&gt;        Stream.iterate(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, x -&amp;gt; x + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;).limit(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK9新增：可以自定义终止条件，下面的终止条件是 x &amp;lt; 100&lt;/span&gt;&lt;br&gt;        Stream.iterate(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, x -&amp;gt; x &amp;lt; &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;, x -&amp;gt; x + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;).forEach(System.out::println);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;optional获取stream的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#optional获取stream的方法&#34;&gt;#&lt;/a&gt; Optional 获取 Stream 的方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Optional;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.stream.Stream;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK9新特性：Optional的stream()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/22 - 23:37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;OptionalTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        List&amp;lt;String&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Jerry&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Otis&amp;quot;&lt;/span&gt;);&lt;br&gt;        Optional&amp;lt;List&amp;lt;String&amp;gt;&amp;gt; optional = Optional.ofNullable(list);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//stream()方法会返回一个流。&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//下面的例子中，会返回一个流，流内只有一个list对象&lt;/span&gt;&lt;br&gt;        Stream&amp;lt;List&amp;lt;String&amp;gt;&amp;gt; stream = optional.stream();&lt;br&gt;        stream.flatMap(x -&amp;gt; x.stream()).forEach(System.out::println);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;javascript引擎升级nashorn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javascript引擎升级nashorn&#34;&gt;#&lt;/a&gt; Javascript 引擎升级：Nashorn&lt;/h4&gt;
&lt;p&gt;它为 Java 提供轻量级的 Javascript 运行时，使得 Java 应用能够嵌入 Javascript。它在 JDK11 中就被废弃了。。。。。&lt;/p&gt;
&lt;h3 id=&#34;jdk10新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk10新特性&#34;&gt;#&lt;/a&gt; JDK10 新特性&lt;/h3&gt;
&lt;h4 id=&#34;局部变量类型推断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#局部变量类型推断&#34;&gt;#&lt;/a&gt; 局部变量类型推断&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Consumer;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Supplier;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK10新特性：局部变量类型推断&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 1、工作原理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  var是根据右边的类型来推断左边的类型的，如果右边的不确定，左边就不能用var&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; *  推断完成后，会把原来的类型写入字节码文件，var不会出现在字节码文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * 2、var不是关键字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/23 - 13:36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;JDK10Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以前的写法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//1、声明变量时，根据所赋的值，推断变量的类型&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; num1 = &lt;span class=&#34;hljs-number&#34;&gt;11&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; list = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;br&gt;        list.add(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//2、遍历&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; str : list)&amp;#123;&lt;br&gt;            System.out.println(str + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; + str.getClass());&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//普通的遍历操作&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;; i++) &amp;#123;&lt;br&gt;            System.out.println(i);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 不能使用类型推断的场景&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//情况一：没有赋初始值的情况&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt; num;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        var num;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//情况二：lambda表达式中，左边的接口不能省略&lt;/span&gt;&lt;br&gt;        Supplier&amp;lt;Double&amp;gt; sup = () -&amp;gt; Math.random();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lambda表达式是作为实例赋值给接口的，你现在把接口都省略了，我怎么知道赋值给谁啊。。。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        var sup1 = () -&amp;gt; Math.random();&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//情况三：方法引用中，左边的接口不能省略&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con = System.out::println;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        var con1 = System.out::println;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//情况四：数组的静态初始化中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        var arr = &amp;#123;1,2,3,4&amp;#125;;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以下是可以的&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; arr = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;int&lt;/span&gt;[]&amp;#123;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;&amp;#125;;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 其他不可使用的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//没有初始化的局部变量声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        var num = null;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法的返回类型：原则是由返回值类型判断return语句是不是合法，而不是根据return推断返回值类型&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//方法的参数类型： public void method(var a, var b)，理由同上。 如果写成var，什么牛马都可以往里面塞&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//构造器的参数类型：理由同上&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//属性：属性涉及到构造函数，构造函数就会涉及到参数类型&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//catch块&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;集合新增的copyof创建只读集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合新增的copyof创建只读集合&#34;&gt;#&lt;/a&gt; 集合新增的 copyOf ()：创建只读集合&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Arrays;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK10新特性：集合中新增的copyOf()方法，用于创建只读集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/23 - 14:02&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;CopyOfTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; list = List.of(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Java&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Python&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; copy1 = List.copyOf(list);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;        System.out.println(list == copy1);&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; alist = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; copy2 = List.copyOf(alist);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//false&lt;/span&gt;&lt;br&gt;        System.out.println(alist == copy2);&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//两个代码基本一致，为什么一个为true，一个为false？&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//答：如果copyOf()的实际参数是只读的，则没必要再造一个，直接返回实际参数&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//如果copyOf()的实际参数不是只读的，就会新造一个。&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//所以copy1实际上就是list，而copy2是新造的&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;jdk11新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk11新特性&#34;&gt;#&lt;/a&gt; JDK11 新特性&lt;/h3&gt;
&lt;h4 id=&#34;string新增的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string新增的方法&#34;&gt;#&lt;/a&gt; String 新增的方法&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK11新特性：String新增的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/23 - 14:25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;StringAPITest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//isBlank()：没有实际的字符的，就返回true（\t,\n，空格，空字符都不算实际字符）&lt;/span&gt;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; \t \n   &amp;quot;&lt;/span&gt;.isBlank());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//strip()：去除前后的空格、\t、\n等空白&lt;/span&gt;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;  hello  &amp;quot;&lt;/span&gt;.strip());&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//stripTrailing()：去除尾部空白&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//stripLeading()：去除首部空白&lt;/span&gt;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//repeat(int count)：将字符串重复n次&lt;/span&gt;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;.repeat(&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//lines().count()：返回行数&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//首尾的\n是不被算进去的&lt;/span&gt;&lt;br&gt;        String str = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;abc\nde\nfg&amp;quot;&lt;/span&gt;;&lt;br&gt;        System.out.println(str.lines().count());&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;optional加强&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#optional加强&#34;&gt;#&lt;/a&gt; Optional 加强&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.Optional;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * JDK11新特性：Optional加强&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/23 - 14:34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;JDK11OptionalTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * boolean isEmpty() ：value为空，就返回true。 注意和isPresent()区别&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * ifPresentOrElse(Consumer c, Runnable r) : value存在，执行c，不存在，执行r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * orElseThrow()：value存在，就返回value，不存在，就抛异常&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * stream() ：value为空，就返回一个空stream，value存在，就返回value的stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * or(Optional o)：value存在，就返回对应的optional，value不存在，就返回参数指定的optional&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;        * */&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; op = Optional.of(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; op1 = Optional.of(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//因为op里面的value非空，所以返回的是op&lt;/span&gt;&lt;br&gt;        Optional&amp;lt;String&amp;gt; op2 = op.or(() -&amp;gt; op1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//因为op里面的value为空，所以返回的是op1&lt;/span&gt;&lt;br&gt;        op = Optional.empty();&lt;br&gt;        op2= op.or(() -&amp;gt; op1);&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;局部变量类型推断的升级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#局部变量类型推断的升级&#34;&gt;#&lt;/a&gt; 局部变量类型推断的升级&lt;/h4&gt;
&lt;p&gt;允许在 var 局部变量上添加注解&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; org.junit.Test;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; java.util.function.Consumer;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@author&lt;/span&gt; DzcGood&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; * &lt;span class=&#34;hljs-doctag&#34;&gt;@date&lt;/span&gt; 2021/10/23 - 14:52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;JDK11OtherstEST&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Test&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//在lambda表达式如果想用注解，就不能省略类型&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con = (&lt;span class=&#34;hljs-meta&#34;&gt;@Deprecated&lt;/span&gt; String t) -&amp;gt; System.out.println(t.toUpperCase());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//以下是错误的，没有加类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        Consumer&amp;lt;String&amp;gt; con1 = (@Deprecated t) -&amp;gt; System.out.println(t.toUpperCase());&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//JDK11中，可以用var这样写&lt;/span&gt;&lt;br&gt;        Consumer&amp;lt;String&amp;gt; con2 = (&lt;span class=&#34;hljs-meta&#34;&gt;@Deprecated&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; t) -&amp;gt; System.out.println(t.toUpperCase());&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;http-client&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http-client&#34;&gt;#&lt;/a&gt; HTTP Client&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter hljs&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;hljs code-wrapper&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//HttpClient替换原有的HttpURLConnection&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//具体的在JavaWeb学吧。。。&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;更简化的编译运行程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#更简化的编译运行程序&#34;&gt;#&lt;/a&gt; 更简化的编译运行程序&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在 JDK11 之前，执行 Java 程序需要两个步骤：javac classname.java 和 java clasname&lt;/p&gt;
&lt;p&gt;现在，只需要一个命令： java classname.java 就可以完成编译和执行的操作了&lt;/p&gt;
&lt;p&gt;但是这样做有一些要求：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、可以调用同一个文件的其它类&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2、不能调用别的文件的类&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3、只会调用当前源文件中第一个类的 main 方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;总结：这个功能玩玩就可以了。。。。。&lt;/p&gt;
&lt;h4 id=&#34;其他新特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他新特性&#34;&gt;#&lt;/a&gt; 其他新特性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;废弃 Nashorn 引擎（太鸡肋了，刚刚出来没多久就被 Deprecated 了）&lt;/li&gt;
&lt;li&gt;ZGC：一个并发、基于 region，压缩型的垃圾收集器（反正是一个很牛的东西，以后再学。。。）&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;完结撒花&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完结撒花&#34;&gt;#&lt;/a&gt; 完结撒花&lt;/h2&gt;
&lt;p&gt;撒花撒花撒花。。。。。。&lt;/p&gt;
&lt;p&gt;Next Step ------ MySql&lt;/p&gt;
</content>
        <category term="学习笔记" />
        <category term="JavaSE" />
        <updated>2021-11-04T14:21:51.000Z</updated>
    </entry>
</feed>
